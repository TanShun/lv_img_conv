{"version":3,"sources":["../src/index.js","../src/selector.js","../src/util.js","../src/eventHandlers.js","../node_modules/canvas/lib/parse-font.js","../node_modules/canvas/browser.js","../node_modules/process/browser.js","../node_modules/path-browserify/index.js","../lib/enums.ts","../../../src/php/_helpers/_php_cast_int.js","../../../src/php/_helpers/_php_cast_float.js","../../../src/php/math/round.js","../../../src/php/math/dechex.js","../../../src/php/strings/str_pad.js","../../../src/php/array/count.js","../lib/image-q/constants/bt709.ts","../lib/image-q/constants/index.ts","../lib/image-q/conversion/rgb2xyz.ts","../lib/image-q/utils/arithmetic.ts","../lib/image-q/conversion/rgb2hsl.ts","../lib/image-q/conversion/xyz2lab.ts","../lib/image-q/conversion/rgb2lab.ts","../lib/image-q/conversion/lab2xyz.ts","../lib/image-q/conversion/xyz2rgb.ts","../lib/image-q/conversion/lab2rgb.ts","../lib/image-q/conversion/index.ts","../lib/image-q/distance/distanceCalculator.ts","../lib/image-q/distance/cie94.ts","../lib/image-q/distance/ciede2000.ts","../lib/image-q/distance/cmetric.ts","../lib/image-q/distance/euclidean.ts","../lib/image-q/distance/manhattan.ts","../lib/image-q/distance/pngQuant.ts","../lib/image-q/distance/index.ts","../lib/image-q/palette/paletteQuantizer.ts","../lib/image-q/utils/point.ts","../lib/image-q/utils/pointContainer.ts","../lib/image-q/utils/palette.ts","../lib/image-q/utils/hueStatistics.ts","../lib/image-q/utils/progressTracker.ts","../lib/image-q/utils/index.ts","../lib/image-q/palette/neuquant/neuquant.ts","../lib/image-q/palette/neuquant/neuquantFloat.ts","../lib/image-q/palette/rgbquant/colorHistogram.ts","../lib/image-q/palette/rgbquant/rgbquant.ts","../lib/image-q/palette/wu/wuQuant.ts","../lib/image-q/palette/index.ts","../lib/image-q/image/imageQuantizer.ts","../lib/image-q/image/nearestColor.ts","../lib/image-q/image/array.ts","../lib/image-q/image/spaceFillingCurves/hilbertCurve.ts","../lib/image-q/image/riemersma.ts","../lib/image-q/image/index.ts","../lib/image-q/quality/ssim.ts","../lib/image-q/quality/index.ts","../node_modules/setimmediate/setImmediate.js","../lib/image-q/basicAPI.ts","../lib/image-q/image-q.ts","../lib/convert.ts","../src/FileSaver.js","../node_modules/object-assign/index.js","../node_modules/assert/node_modules/util/support/isBufferBrowser.js","../node_modules/assert/node_modules/inherits/inherits_browser.js","../node_modules/assert/node_modules/util/util.js","../node_modules/assert/assert.js","index.js"],"names":["Selector","CUSTOMFILE","CUSTOMFILELABEL","FORM","INPUT","getDefaultText","input","defaultText","label","parentNode","querySelector","textContent","findFirstChildNode","element","childNodes","length","slice","call","i","node","nodeType","restoreDefaultText","bsCustomFileInput","fileApi","window","File","getSelectedFiles","hasAttribute","files","map","file","name","join","value","indexOf","splittedValue","split","handleInputChange","inputValue","handleFormReset","customFileList","querySelectorAll","filter","len","customProperty","Event","init","inputSelector","formSelector","customFileInputList","document","formList","Object","defineProperty","writable","addEventListener","destroy","form","undefined","removeEventListener","weights","styles","variants","stretches","units","string","weightRe","RegExp","styleRe","variantRe","stretchRe","sizeFamilyRe","cache","defaultHeight","module","exports","str","sizeFamily","exec","font","weight","style","stretch","variant","size","parseFloat","unit","family","replace","substr","substring","index","parseFont","require","createCanvas","width","height","assign","createElement","createImageData","array","arguments","ImageData","loadImage","src","options","Promise","resolve","reject","image","cleanup","onload","onerror","Error","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","e","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","run","Item","noop","nextTick","args","Array","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","type","isNaN","isFinite","Math","ceil","floor","parseInt","roundToInt","mode","tmp","abs","precision","p","floatCast","intCast","pow","trunc","preRoundPrecision","log10","number","toString","padLength","padString","padType","half","padToGo","_strPadRepeater","s","collect","count","mixedVar","key","cnt","constructor","hasOwnProperty","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","toObject","val","TypeError","shouldUseNative","test1","String","getOwnPropertyNames","test2","fromCharCode","order2","n","test3","forEach","letter","keys","err","target","source","from","symbols","to","formatRegExp","format","f","isString","objects","inspect","x","Number","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","isUndefined","global","noDeprecation","warned","deprecated","throwDeprecation","traceDeprecation","console","trace","error","debugEnviron","debugs","obj","opts","ctx","seen","stylize","stylizeNoColor","formatValue","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","styleType","arrayToHash","hash","idx","recurseTimes","isFunction","ret","primitive","formatPrimitive","visibleKeys","isError","formatError","isRegExp","isDate","Date","base","output","braces","isArray","toUTCString","formatArray","formatProperty","pop","reduceToSingleString","simple","isNumber","l","match","desc","getOwnPropertyDescriptor","get","set","line","reduce","prev","cur","numLinesEst","ar","arg","isNullOrUndefined","isSymbol","re","objectToString","d","isPrimitive","o","pad","debuglog","toUpperCase","test","pid","isBuffer","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","prop","log","inherits","origin","add","updateNameTextboxes","$","$nameContainer","numExistingFields","children","totalLength","max","append","removeChild","css","ready","change","needsDisable","attr","reader","FileReader","outputType","outputMode","binaryFormat","OutputMode","C","BIN","binFormatRequest","BINARY_FORMAT_PREFIX","ImageMode","doConvert","blob","imageName","swapEndian","checked","imageString","cf","outName","outputFormat","Blob","startsWith","readAsArrayBuffer","buf","result","Uint8Array","Image","readAsDataURL","removeAttr","setImmediate"],"mappings":"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","file":"web.0d95cd64.js","sourceRoot":"../web","sourcesContent":["import { getDefaultText, restoreDefaultText } from './util'\nimport { handleFormReset, handleInputChange } from './eventHandlers'\nimport Selector from './selector'\n\nconst customProperty = 'bsCustomFileInput'\nconst Event = {\n  FORMRESET   : 'reset',\n  INPUTCHANGE : 'change',\n}\n\nconst bsCustomFileInput = {\n  init(inputSelector = Selector.CUSTOMFILE, formSelector = Selector.FORM) {\n    const customFileInputList = [].slice.call(document.querySelectorAll(inputSelector))\n    const formList = [].slice.call(document.querySelectorAll(formSelector))\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      Object.defineProperty(input, customProperty, {\n        value: {\n          defaultText: getDefaultText(input),\n        },\n        writable: true,\n      })\n\n      handleInputChange.call(input)\n      input.addEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].addEventListener(Event.FORMRESET, handleFormReset)\n      Object.defineProperty(formList[i], customProperty, {\n        value: true,\n        writable: true,\n      })\n    }\n  },\n\n  destroy() {\n    const formList = [].slice.call(document.querySelectorAll(Selector.FORM))\n      .filter((form) => !!form.bsCustomFileInput)\n    const customFileInputList = [].slice.call(document.querySelectorAll(Selector.INPUT))\n      .filter((input) => !!input.bsCustomFileInput)\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      restoreDefaultText(input)\n      input[customProperty] = undefined\n\n      input.removeEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].removeEventListener(Event.FORMRESET, handleFormReset)\n      formList[i][customProperty] = undefined\n    }\n  },\n}\n\nexport default bsCustomFileInput\n","const Selector = {\n  CUSTOMFILE: '.custom-file input[type=\"file\"]',\n  CUSTOMFILELABEL: '.custom-file-label',\n  FORM: 'form',\n  INPUT: 'input',\n}\n\nexport default Selector\n","import Selector from './selector'\n\nconst textNodeType = 3\nconst getDefaultText = (input) => {\n  let defaultText = ''\n\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    defaultText = label.textContent\n  }\n\n  return defaultText\n}\n\nconst findFirstChildNode = (element) => {\n  if (element.childNodes.length > 0) {\n    const childNodes = [].slice.call(element.childNodes)\n\n    for (let i = 0; i < childNodes.length; i++) {\n      const node = childNodes[i]\n      if (node.nodeType !== textNodeType) {\n        return node\n      }\n    }\n  }\n\n  return element\n}\n\nconst restoreDefaultText = (input) => {\n  const defaultText = input.bsCustomFileInput.defaultText\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n\n    element.textContent = defaultText\n  }\n}\n\nexport {\n  getDefaultText,\n  findFirstChildNode,\n  restoreDefaultText,\n}\n","import { findFirstChildNode, restoreDefaultText } from './util'\nimport Selector from './selector'\n\nconst fileApi = !!window.File\nconst FAKE_PATH = 'fakepath'\nconst FAKE_PATH_SEPARATOR = '\\\\'\n\nconst getSelectedFiles = (input) => {\n  if (input.hasAttribute('multiple') && fileApi) {\n    return [].slice.call(input.files)\n      .map((file) => file.name)\n      .join(', ')\n  }\n\n  if (input.value.indexOf(FAKE_PATH) !== -1) {\n    const splittedValue = input.value.split(FAKE_PATH_SEPARATOR)\n\n    return splittedValue[splittedValue.length - 1]\n  }\n\n  return input.value\n}\n\nfunction handleInputChange() {\n  const label = this.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n    const inputValue = getSelectedFiles(this)\n\n    if (inputValue.length) {\n      element.textContent = inputValue\n    } else {\n      restoreDefaultText(this)\n    }\n  }\n}\n\nfunction handleFormReset() {\n  const customFileList = [].slice.call(this.querySelectorAll(Selector.INPUT))\n    .filter((input) => !!input.bsCustomFileInput)\n\n  for (let i = 0, len = customFileList.length; i < len; i++) {\n    restoreDefaultText(customFileList[i])\n  }\n}\n\nexport {\n  handleInputChange,\n  handleFormReset,\n}\n","'use strict'\n\n/**\n * Font RegExp helpers.\n */\n\nconst weights = 'bold|bolder|lighter|[1-9]00'\n  , styles = 'italic|oblique'\n  , variants = 'small-caps'\n  , stretches = 'ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded'\n  , units = 'px|pt|pc|in|cm|mm|%|em|ex|ch|rem|q'\n  , string = '\\'([^\\']+)\\'|\"([^\"]+)\"|[\\\\w\\\\s-]+'\n\n// [ [ <‘font-style’> || <font-variant-css21> || <‘font-weight’> || <‘font-stretch’> ]?\n//    <‘font-size’> [ / <‘line-height’> ]? <‘font-family’> ]\n// https://drafts.csswg.org/css-fonts-3/#font-prop\nconst weightRe = new RegExp('(' + weights + ') +', 'i')\nconst styleRe = new RegExp('(' + styles + ') +', 'i')\nconst variantRe = new RegExp('(' + variants + ') +', 'i')\nconst stretchRe = new RegExp('(' + stretches + ') +', 'i')\nconst sizeFamilyRe = new RegExp(\n  '([\\\\d\\\\.]+)(' + units + ') *'\n  + '((?:' + string + ')( *, *(?:' + string + '))*)')\n\n/**\n * Cache font parsing.\n */\n\nconst cache = {}\n\nconst defaultHeight = 16 // pt, common browser default\n\n/**\n * Parse font `str`.\n *\n * @param {String} str\n * @return {Object} Parsed font. `size` is in device units. `unit` is the unit\n *   appearing in the input string.\n * @api private\n */\n\nmodule.exports = function (str) {\n  // Cached\n  if (cache[str]) return cache[str]\n\n  // Try for required properties first.\n  const sizeFamily = sizeFamilyRe.exec(str)\n  if (!sizeFamily) return // invalid\n\n  // Default values and required properties\n  const font = {\n    weight: 'normal',\n    style: 'normal',\n    stretch: 'normal',\n    variant: 'normal',\n    size: parseFloat(sizeFamily[1]),\n    unit: sizeFamily[2],\n    family: sizeFamily[3].replace(/[\"']/g, '').replace(/ *, */g, ',')\n  }\n\n  // Optional, unordered properties.\n  let weight, style, variant, stretch\n  // Stop search at `sizeFamily.index`\n  let substr = str.substring(0, sizeFamily.index)\n  if ((weight = weightRe.exec(substr))) font.weight = weight[1]\n  if ((style = styleRe.exec(substr))) font.style = style[1]\n  if ((variant = variantRe.exec(substr))) font.variant = variant[1]\n  if ((stretch = stretchRe.exec(substr))) font.stretch = stretch[1]\n\n  // Convert to device units. (`font.unit` is the original unit)\n  // TODO: ch, ex\n  switch (font.unit) {\n    case 'pt':\n      font.size /= 0.75\n      break\n    case 'pc':\n      font.size *= 16\n      break\n    case 'in':\n      font.size *= 96\n      break\n    case 'cm':\n      font.size *= 96.0 / 2.54\n      break\n    case 'mm':\n      font.size *= 96.0 / 25.4\n      break\n    case '%':\n      // TODO disabled because existing unit tests assume 100\n      // font.size *= defaultHeight / 100 / 0.75\n      break\n    case 'em':\n    case 'rem':\n      font.size *= defaultHeight / 0.75\n      break\n    case 'q':\n      font.size *= 96 / 25.4 / 4\n      break\n  }\n\n  return (cache[str] = font)\n}\n","/* globals document, ImageData */\n\nconst parseFont = require('./lib/parse-font')\n\nexports.parseFont = parseFont\n\nexports.createCanvas = function (width, height) {\n  return Object.assign(document.createElement('canvas'), { width: width, height: height })\n}\n\nexports.createImageData = function (array, width, height) {\n  // Browser implementation of ImageData looks at the number of arguments passed\n  switch (arguments.length) {\n    case 0: return new ImageData()\n    case 1: return new ImageData(array)\n    case 2: return new ImageData(array, width)\n    default: return new ImageData(array, width, height)\n  }\n}\n\nexports.loadImage = function (src, options) {\n  return new Promise(function (resolve, reject) {\n    const image = Object.assign(document.createElement('img'), options)\n\n    function cleanup () {\n      image.onload = null\n      image.onerror = null\n    }\n\n    image.onload = function () { cleanup(); resolve(image) }\n    image.onerror = function () { cleanup(); reject(new Error('Failed to load the image \"' + src + '\"')) }\n\n    image.src = src\n  })\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","enum ImageMode {\n    ICF_TRUE_COLOR_332 = 0,      /*Helper formats. Used internally*/\n    ICF_TRUE_COLOR_565 = 1,\n    ICF_TRUE_COLOR_565_SWAP = 2,\n    ICF_TRUE_COLOR_888 = 3,\n    CF_ALPHA_1_BIT = 4,\n    CF_ALPHA_2_BIT = 5,\n    CF_ALPHA_4_BIT = 6,\n    CF_ALPHA_8_BIT = 7,\n    CF_INDEXED_1_BIT = 8,\n    CF_INDEXED_2_BIT = 9,\n    CF_INDEXED_4_BIT = 10,\n    CF_INDEXED_8_BIT = 11,\n    CF_RAW = 12,\n    CF_RAW_ALPHA = 13,\n    CF_RAW_CHROMA = 12,\n\n    CF_TRUE_COLOR = 100,          /*Helper formats is C arrays contains all treu color formats (usin in \"download\")*/\n    CF_TRUE_COLOR_ALPHA = 101,\n    CF_TRUE_COLOR_CHROMA = 102,\n};\n\nenum OutputMode {\n    C,\n    BIN\n}\n\n\nconst BINARY_FORMAT_PREFIX = \"ICF_TRUE_COLOR_\";\n\nexport { ImageMode, OutputMode, BINARY_FORMAT_PREFIX };","module.exports = function _php_cast_int (value) { // eslint-disable-line camelcase\n  // original by: Rafał Kukawski\n  //   example 1: _php_cast_int(false)\n  //   returns 1: 0\n  //   example 2: _php_cast_int(true)\n  //   returns 2: 1\n  //   example 3: _php_cast_int(0)\n  //   returns 3: 0\n  //   example 4: _php_cast_int(1)\n  //   returns 4: 1\n  //   example 5: _php_cast_int(3.14)\n  //   returns 5: 3\n  //   example 6: _php_cast_int('')\n  //   returns 6: 0\n  //   example 7: _php_cast_int('0')\n  //   returns 7: 0\n  //   example 8: _php_cast_int('abc')\n  //   returns 8: 0\n  //   example 9: _php_cast_int(null)\n  //   returns 9: 0\n  //  example 10: _php_cast_int(undefined)\n  //  returns 10: 0\n  //  example 11: _php_cast_int('123abc')\n  //  returns 11: 123\n  //  example 12: _php_cast_int('123e4')\n  //  returns 12: 123\n  //  example 13: _php_cast_int(0x200000001)\n  //  returns 13: 8589934593\n\n  const type = typeof value\n\n  switch (type) {\n    case 'number':\n      if (isNaN(value) || !isFinite(value)) {\n        // from PHP 7, NaN and Infinity are casted to 0\n        return 0\n      }\n\n      return value < 0 ? Math.ceil(value) : Math.floor(value)\n    case 'string':\n      return parseInt(value, 10) || 0\n    case 'boolean':\n      // fall through\n    default:\n      // Behaviour for types other than float, string, boolean\n      // is undefined and can change any time.\n      // To not invent complex logic\n      // that mimics PHP 7.0 behaviour\n      // casting value->bool->number is used\n      return +!!value\n  }\n}\n","module.exports = function _php_cast_float (value) { // eslint-disable-line camelcase\n  // original by: Rafał Kukawski\n  //   example 1: _php_cast_float(false)\n  //   returns 1: 0\n  //   example 2: _php_cast_float(true)\n  //   returns 2: 1\n  //   example 3: _php_cast_float(0)\n  //   returns 3: 0\n  //   example 4: _php_cast_float(1)\n  //   returns 4: 1\n  //   example 5: _php_cast_float(3.14)\n  //   returns 5: 3.14\n  //   example 6: _php_cast_float('')\n  //   returns 6: 0\n  //   example 7: _php_cast_float('0')\n  //   returns 7: 0\n  //   example 8: _php_cast_float('abc')\n  //   returns 8: 0\n  //   example 9: _php_cast_float(null)\n  //   returns 9: 0\n  //  example 10: _php_cast_float(undefined)\n  //  returns 10: 0\n  //  example 11: _php_cast_float('123abc')\n  //  returns 11: 123\n  //  example 12: _php_cast_float('123e4')\n  //  returns 12: 1230000\n  //  example 13: _php_cast_float(0x200000001)\n  //  returns 13: 8589934593\n  //  example 14: _php_cast_float('3.14abc')\n  //  returns 14: 3.14\n\n  const type = typeof value\n\n  switch (type) {\n    case 'number':\n      return value\n    case 'string':\n      return parseFloat(value) || 0\n    case 'boolean':\n      // fall through\n    default:\n      // PHP docs state, that for types other than string\n      // conversion is {input type}->int->float\n      return require('./_php_cast_int')(value)\n  }\n}\n","function roundToInt (value, mode) {\n  let tmp = Math.floor(Math.abs(value) + 0.5)\n\n  if (\n    (mode === 'PHP_ROUND_HALF_DOWN' && value === (tmp - 0.5)) ||\n      (mode === 'PHP_ROUND_HALF_EVEN' && value === (0.5 + 2 * Math.floor(tmp / 2))) ||\n      (mode === 'PHP_ROUND_HALF_ODD' && value === (0.5 + 2 * Math.floor(tmp / 2) - 1))) {\n    tmp -= 1\n  }\n\n  return value < 0 ? -tmp : tmp\n}\n\nmodule.exports = function round (value, precision = 0, mode = 'PHP_ROUND_HALF_UP') {\n  //  discuss at: https://locutus.io/php/round/\n  // original by: Philip Peterson\n  //  revised by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: T.Wild\n  //  revised by: Rafał Kukawski (https://blog.kukawski.pl)\n  //    input by: Greenseed\n  //    input by: meo\n  //    input by: William\n  //    input by: Josep Sanz (https://www.ws3.es/)\n  // bugfixed by: Brett Zamir (https://brett-zamir.me)\n  //  revised by: Rafał Kukawski\n  //   example 1: round(1241757, -3)\n  //   returns 1: 1242000\n  //   example 2: round(3.6)\n  //   returns 2: 4\n  //   example 3: round(2.835, 2)\n  //   returns 3: 2.84\n  //   example 4: round(1.1749999999999, 2)\n  //   returns 4: 1.17\n  //   example 5: round(58551.799999999996, 2)\n  //   returns 5: 58551.8\n  //   example 6: round(4096.485, 2)\n  //   returns 6: 4096.49\n\n  const floatCast = require('../_helpers/_php_cast_float')\n  const intCast = require('../_helpers/_php_cast_int')\n  let p\n\n  // the code is heavily based on the native PHP implementation\n  // https://github.com/php/php-src/blob/PHP-7.4/ext/standard/math.c#L355\n\n  value = floatCast(value)\n  precision = intCast(precision)\n  p = Math.pow(10, precision)\n\n  if (isNaN(value) || !isFinite(value)) {\n    return value\n  }\n\n  // if value already integer and positive precision\n  // then nothing to do, return early\n  if (Math.trunc(value) === value && precision >= 0) {\n    return value\n  }\n\n  // PHP does a pre-rounding before rounding to desired precision\n  // https://wiki.php.net/rfc/rounding#pre-rounding_to_the_value_s_precision_if_possible\n  const preRoundPrecision = 14 - Math.floor(Math.log10(Math.abs(value)))\n\n  if (preRoundPrecision > precision && preRoundPrecision - 15 < precision) {\n    value = roundToInt(value * Math.pow(10, preRoundPrecision), mode)\n    value /= Math.pow(10, Math.abs(precision - preRoundPrecision))\n  } else {\n    value *= p\n  }\n\n  value = roundToInt(value, mode)\n\n  return value / p\n}\n","module.exports = function dechex (number) {\n  //  discuss at: https://locutus.io/php/dechex/\n  // original by: Philippe Baumann\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: https://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript\n  //    input by: pilus\n  //   example 1: dechex(10)\n  //   returns 1: 'a'\n  //   example 2: dechex(47)\n  //   returns 2: '2f'\n  //   example 3: dechex(-1415723993)\n  //   returns 3: 'ab9dc427'\n\n  if (number < 0) {\n    number = 0xFFFFFFFF + number + 1\n  }\n  return parseInt(number, 10)\n    .toString(16)\n}\n","module.exports = function str_pad (input, padLength, padString, padType) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/str_pad/\n  // original by: Kevin van Zonneveld (https://kvz.io)\n  // improved by: Michael White (https://getsprink.com)\n  //    input by: Marco van Oort\n  // bugfixed by: Brett Zamir (https://brett-zamir.me)\n  //   example 1: str_pad('Kevin van Zonneveld', 30, '-=', 'STR_PAD_LEFT')\n  //   returns 1: '-=-=-=-=-=-Kevin van Zonneveld'\n  //   example 2: str_pad('Kevin van Zonneveld', 30, '-', 'STR_PAD_BOTH')\n  //   returns 2: '------Kevin van Zonneveld-----'\n\n  let half = ''\n  let padToGo\n\n  const _strPadRepeater = function (s, len) {\n    let collect = ''\n\n    while (collect.length < len) {\n      collect += s\n    }\n    collect = collect.substr(0, len)\n\n    return collect\n  }\n\n  input += ''\n  padString = padString !== undefined ? padString : ' '\n\n  if (padType !== 'STR_PAD_LEFT' && padType !== 'STR_PAD_RIGHT' && padType !== 'STR_PAD_BOTH') {\n    padType = 'STR_PAD_RIGHT'\n  }\n  if ((padToGo = padLength - input.length) > 0) {\n    if (padType === 'STR_PAD_LEFT') {\n      input = _strPadRepeater(padString, padToGo) + input\n    } else if (padType === 'STR_PAD_RIGHT') {\n      input = input + _strPadRepeater(padString, padToGo)\n    } else if (padType === 'STR_PAD_BOTH') {\n      half = _strPadRepeater(padString, Math.ceil(padToGo / 2))\n      input = half + input + half\n      input = input.substr(0, padLength)\n    }\n  }\n\n  return input\n}\n","module.exports = function count (mixedVar, mode) {\n  //  discuss at: https://locutus.io/php/count/\n  // original by: Kevin van Zonneveld (https://kvz.io)\n  //    input by: Waldo Malqui Silva (https://waldo.malqui.info)\n  //    input by: merabi\n  // bugfixed by: Soren Hansen\n  // bugfixed by: Olivier Louvignes (https://mg-crea.com/)\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  //   example 1: count([[0,0],[0,-4]], 'COUNT_RECURSIVE')\n  //   returns 1: 6\n  //   example 2: count({'one' : [1,2,3,4,5]}, 'COUNT_RECURSIVE')\n  //   returns 2: 6\n\n  let key\n  let cnt = 0\n\n  if (mixedVar === null || typeof mixedVar === 'undefined') {\n    return 0\n  } else if (mixedVar.constructor !== Array && mixedVar.constructor !== Object) {\n    return 1\n  }\n\n  if (mode === 'COUNT_RECURSIVE') {\n    mode = 1\n  }\n  if (mode !== 1) {\n    mode = 0\n  }\n\n  for (key in mixedVar) {\n    if (mixedVar.hasOwnProperty(key)) {\n      cnt++\n      if (mode === 1 && mixedVar[key] &&\n        (mixedVar[key].constructor === Array ||\n          mixedVar[key].constructor === Object)) {\n        cnt += count(mixedVar[key], 1)\n      }\n    }\n  }\n\n  return cnt\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * constants.ts - part of Image Quantization Library\n */\n\n/**\n * sRGB (based on ITU-R Recommendation BT.709)\n * http://en.wikipedia.org/wiki/SRGB\n */\nexport enum Y {\n  RED = 0.2126,\n  GREEN = 0.7152,\n  BLUE = 0.0722,\n  WHITE = 1,\n}\n\n// tslint:disable-next-line:naming-convention\nexport enum x {\n  RED = 0.64,\n  GREEN = 0.3,\n  BLUE = 0.15,\n  WHITE = 0.3127,\n}\n\n// tslint:disable-next-line:naming-convention\nexport enum y {\n  RED = 0.33,\n  GREEN = 0.6,\n  BLUE = 0.06,\n  WHITE = 0.329,\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * constants.ts - part of Image Quantization Library\n */\nimport * as bt709 from './bt709';\n\nexport { bt709 };\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * rgb2xyz.ts - part of Image Quantization Library\n */\nfunction correctGamma(n: number) {\n  return n > 0.04045 ? ((n + 0.055) / 1.055) ** 2.4 : n / 12.92;\n}\n\nexport function rgb2xyz(r: number, g: number, b: number) {\n  // gamma correction, see https://en.wikipedia.org/wiki/SRGB#The_reverse_transformation\n  r = correctGamma(r / 255);\n  g = correctGamma(g / 255);\n  b = correctGamma(b / 255);\n\n  // Observer. = 2°, Illuminant = D65\n  return {\n    x: r * 0.4124 + g * 0.3576 + b * 0.1805,\n    y: r * 0.2126 + g * 0.7152 + b * 0.0722,\n    z: r * 0.0193 + g * 0.1192 + b * 0.9505,\n  };\n}\n","export function degrees2radians(n: number) {\n  return n * (Math.PI / 180);\n}\n\nexport function max3(a: number, b: number, c: number) {\n  let m = a;\n  if (m < b) m = b;\n  if (m < c) m = c;\n  return m;\n}\n\nexport function min3(a: number, b: number, c: number) {\n  let m = a;\n  if (m > b) m = b;\n  if (m > c) m = c;\n  return m;\n}\n\nexport function intInRange(value: number, low: number, high: number) {\n  if (value > high) value = high;\n  if (value < low) value = low;\n  return value | 0;\n}\n\nexport function inRange0to255Rounded(n: number) {\n  n = Math.round(n);\n  if (n > 255) n = 255;\n  else if (n < 0) n = 0;\n  return n;\n}\n\nexport function inRange0to255(n: number) {\n  if (n > 255) n = 255;\n  else if (n < 0) n = 0;\n  return n;\n}\n\nexport function stableSort<T>(\n  arrayToSort: T[],\n  callback: (a: T, b: T) => number,\n) {\n  const type = typeof arrayToSort[0];\n  let sorted: T[];\n\n  if (type === 'number' || type === 'string') {\n    const ord = Object.create(null); // tslint:disable-line:no-null-keyword\n    for (let i = 0, l = arrayToSort.length; i < l; i++) {\n      const val = (arrayToSort[i] as unknown) as string;\n      if (ord[val] || ord[val] === 0) continue;\n      ord[val] = i;\n    }\n\n    sorted = arrayToSort.sort((a, b) => callback(a, b) || ord[a] - ord[b]);\n  } else {\n    const ord2 = arrayToSort.slice(0);\n    sorted = arrayToSort.sort(\n      (a, b) => callback(a, b) || ord2.indexOf(a) - ord2.indexOf(b),\n    );\n  }\n\n  return sorted;\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * rgb2hsl.ts - part of Image Quantization Library\n */\nimport { min3, max3 } from '../utils/arithmetic';\n\n/**\n * Calculate HSL from RGB\n * Hue is in degrees [0..360]\n * Lightness: [0..1]\n * Saturation: [0..1]\n * http://web.archive.org/web/20060914040436/http://local.wasp.uwa.edu.au/~pbourke/colour/hsl/\n */\nexport function rgb2hsl(r: number, g: number, b: number) {\n  const min = min3(r, g, b);\n  const max = max3(r, g, b);\n  const delta = max - min;\n  const l = (min + max) / 510;\n\n  let s = 0;\n  if (l > 0 && l < 1) s = delta / (l < 0.5 ? max + min : 510 - max - min);\n\n  let h = 0;\n  if (delta > 0) {\n    if (max === r) {\n      h = (g - b) / delta;\n    } else if (max === g) {\n      h = 2 + (b - r) / delta;\n    } else {\n      h = 4 + (r - g) / delta;\n    }\n\n    h *= 60;\n    if (h < 0) h += 360;\n  }\n  return { h, s, l };\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * xyz2lab.ts - part of Image Quantization Library\n */\nconst refX = 0.95047; // ref_X =  95.047   Observer= 2°, Illuminant= D65\nconst refY = 1.0; // ref_Y = 100.000\nconst refZ = 1.08883; // ref_Z = 108.883\n\nfunction pivot(n: number) {\n  return n > 0.008856 ? n ** (1 / 3) : 7.787 * n + 16 / 116;\n}\n\nexport function xyz2lab(x: number, y: number, z: number) {\n  x = pivot(x / refX);\n  y = pivot(y / refY);\n  z = pivot(z / refZ);\n\n  if (116 * y - 16 < 0) throw new Error('xxx');\n  return {\n    L: Math.max(0, 116 * y - 16),\n    a: 500 * (x - y),\n    b: 200 * (y - z),\n  };\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * rgb2lab.ts - part of Image Quantization Library\n */\nimport { rgb2xyz } from './rgb2xyz';\nimport { xyz2lab } from './xyz2lab';\n\nexport function rgb2lab(r: number, g: number, b: number) {\n  const xyz = rgb2xyz(r, g, b);\n  return xyz2lab(xyz.x, xyz.y, xyz.z);\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * lab2xyz.ts - part of Image Quantization Library\n */\nconst refX = 0.95047; // ref_X =  95.047   Observer= 2°, Illuminant = D65\nconst refY = 1.0; // ref_Y = 100.000\nconst refZ = 1.08883; // ref_Z = 108.883\n\nfunction pivot(n: number) {\n  return n > 0.206893034 ? n ** 3 : (n - 16 / 116) / 7.787;\n}\n\n// tslint:disable-next-line:naming-convention\nexport function lab2xyz(L: number, a: number, b: number) {\n  const y = (L + 16) / 116;\n  const x = a / 500 + y;\n  const z = y - b / 200;\n\n  return {\n    x: refX * pivot(x),\n    y: refY * pivot(y),\n    z: refZ * pivot(z),\n  };\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * xyz2rgb.ts - part of Image Quantization Library\n */\nimport { inRange0to255Rounded } from '../utils/arithmetic';\n\n// gamma correction, see https://en.wikipedia.org/wiki/SRGB#The_reverse_transformation\nfunction correctGamma(n: number) {\n  return n > 0.0031308 ? 1.055 * n ** (1 / 2.4) - 0.055 : 12.92 * n;\n}\n\nexport function xyz2rgb(x: number, y: number, z: number) {\n  // Observer. = 2°, Illuminant = D65\n  const r = correctGamma(x * 3.2406 + y * -1.5372 + z * -0.4986);\n  const g = correctGamma(x * -0.9689 + y * 1.8758 + z * 0.0415);\n  const b = correctGamma(x * 0.0557 + y * -0.204 + z * 1.057);\n\n  return {\n    r: inRange0to255Rounded(r * 255),\n    g: inRange0to255Rounded(g * 255),\n    b: inRange0to255Rounded(b * 255),\n  };\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * lab2rgb.ts - part of Image Quantization Library\n */\nimport { lab2xyz } from './lab2xyz';\nimport { xyz2rgb } from './xyz2rgb';\n\n// tslint:disable-next-line:naming-convention\nexport function lab2rgb(L: number, a: number, b: number) {\n  const xyz = lab2xyz(L, a, b);\n  return xyz2rgb(xyz.x, xyz.y, xyz.z);\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * iq.ts - Image Quantization Library\n */\nexport { rgb2xyz } from './rgb2xyz';\nexport { rgb2hsl } from './rgb2hsl';\nexport { rgb2lab } from './rgb2lab';\nexport { lab2xyz } from './lab2xyz';\nexport { lab2rgb } from './lab2rgb';\nexport { xyz2lab } from './xyz2lab';\nexport { xyz2rgb } from './xyz2rgb';\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * common.ts - part of Image Quantization Library\n */\nimport { PointRGBA } from '../utils/point';\n\nexport abstract class AbstractDistanceCalculator {\n  protected _maxDistance!: number;\n  protected _whitePoint!: {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  };\n\n  constructor() {\n    this._setDefaults();\n\n    // set default maximal color component deltas (255 - 0 = 255)\n    this.setWhitePoint(255, 255, 255, 255);\n  }\n\n  setWhitePoint(r: number, g: number, b: number, a: number) {\n    this._whitePoint = {\n      r: r > 0 ? 255 / r : 0,\n      g: g > 0 ? 255 / g : 0,\n      b: b > 0 ? 255 / b : 0,\n      a: a > 0 ? 255 / a : 0,\n    };\n    this._maxDistance = this.calculateRaw(r, g, b, a, 0, 0, 0, 0);\n  }\n\n  calculateNormalized(colorA: PointRGBA, colorB: PointRGBA) {\n    return (\n      this.calculateRaw(\n        colorA.r,\n        colorA.g,\n        colorA.b,\n        colorA.a,\n        colorB.r,\n        colorB.g,\n        colorB.b,\n        colorB.a,\n      ) / this._maxDistance\n    );\n  }\n\n  /**\n   * Calculate raw distance (non-normalized)\n   */\n  abstract calculateRaw(\n    r1: number,\n    g1: number,\n    b1: number,\n    a1: number,\n    r2: number,\n    g2: number,\n    b2: number,\n    a2: number,\n  ): number;\n\n  protected abstract _setDefaults(): void;\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * cie94.ts - part of Image Quantization Library\n */\nimport { AbstractDistanceCalculator } from './distanceCalculator';\nimport { rgb2lab } from '../conversion/rgb2lab';\nimport { inRange0to255 } from '../utils/arithmetic';\n\n/**\n * CIE94 method of delta-e\n * http://en.wikipedia.org/wiki/Color_difference#CIE94\n */\nexport abstract class AbstractCIE94 extends AbstractDistanceCalculator {\n  /**\n   * Weight in distance: 0.25\n   * Max DeltaE: 100\n   * Max DeltaA: 255\n   */\n  protected _kA!: number;\n  protected _Kl!: number; // tslint:disable-line:naming-convention\n  protected _K1!: number; // tslint:disable-line:naming-convention\n  protected _K2!: number; // tslint:disable-line:naming-convention\n\n  calculateRaw(\n    r1: number,\n    g1: number,\n    b1: number,\n    a1: number,\n    r2: number,\n    g2: number,\n    b2: number,\n    a2: number,\n  ) {\n    const lab1 = rgb2lab(\n      inRange0to255(r1 * this._whitePoint.r),\n      inRange0to255(g1 * this._whitePoint.g),\n      inRange0to255(b1 * this._whitePoint.b),\n    );\n    const lab2 = rgb2lab(\n      inRange0to255(r2 * this._whitePoint.r),\n      inRange0to255(g2 * this._whitePoint.g),\n      inRange0to255(b2 * this._whitePoint.b),\n    );\n\n    const dL = lab1.L - lab2.L;\n    const dA = lab1.a - lab2.a;\n    const dB = lab1.b - lab2.b;\n    const c1 = Math.sqrt(lab1.a * lab1.a + lab1.b * lab1.b);\n    const c2 = Math.sqrt(lab2.a * lab2.a + lab2.b * lab2.b);\n    const dC = c1 - c2;\n\n    let deltaH = dA * dA + dB * dB - dC * dC;\n    deltaH = deltaH < 0 ? 0 : Math.sqrt(deltaH);\n\n    const dAlpha = (a2 - a1) * this._whitePoint.a * this._kA;\n\n    // TODO: add alpha channel support\n    return Math.sqrt(\n      (dL / this._Kl) ** 2 +\n        (dC / (1.0 + this._K1 * c1)) ** 2 +\n        (deltaH / (1.0 + this._K2 * c1)) ** 2 +\n        dAlpha ** 2,\n    );\n  }\n}\n\nexport class CIE94Textiles extends AbstractCIE94 {\n  protected _setDefaults() {\n    this._Kl = 2.0;\n    this._K1 = 0.048;\n    this._K2 = 0.014;\n    this._kA = (0.25 * 50) / 255;\n  }\n}\n\nexport class CIE94GraphicArts extends AbstractCIE94 {\n  protected _setDefaults() {\n    this._Kl = 1.0;\n    this._K1 = 0.045;\n    this._K2 = 0.015;\n    this._kA = (0.25 * 100) / 255;\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * ciede2000.ts - part of Image Quantization Library\n */\nimport { AbstractDistanceCalculator } from './distanceCalculator';\nimport { rgb2lab } from '../conversion/rgb2lab';\nimport { degrees2radians, inRange0to255 } from '../utils/arithmetic';\n\n// tslint:disable:variable-name\n// tslint:disable:naming-convention\n\n/**\n * CIEDE2000 algorithm - Adapted from Sharma et al's MATLAB implementation at\n * http://www.ece.rochester.edu/~gsharma/ciede2000/\n */\nexport class CIEDE2000 extends AbstractDistanceCalculator {\n  /**\n   * Weight in distance: 0.25\n   * Max DeltaE: 100\n   * Max DeltaA: 255\n   */\n  private static readonly _kA = (0.25 * 100) / 255;\n  private static readonly _pow25to7 = 25 ** 7; // 1Math.pow(25, 7);\n  private static readonly _deg360InRad = degrees2radians(360);\n  private static readonly _deg180InRad = degrees2radians(180);\n  private static readonly _deg30InRad = degrees2radians(30);\n  private static readonly _deg6InRad = degrees2radians(6);\n  private static readonly _deg63InRad = degrees2radians(63);\n  private static readonly _deg275InRad = degrees2radians(275);\n  private static readonly _deg25InRad = degrees2radians(25);\n\n  protected _setDefaults() {}\n\n  private static _calculatehp(b: number, ap: number) {\n    const hp = Math.atan2(b, ap);\n    if (hp >= 0) return hp;\n    return hp + CIEDE2000._deg360InRad;\n  }\n\n  private static _calculateRT(ahp: number, aCp: number) {\n    const aCp_to_7 = aCp ** 7.0;\n    const R_C = 2.0 * Math.sqrt(aCp_to_7 / (aCp_to_7 + CIEDE2000._pow25to7)); // 25^7\n    const delta_theta =\n      CIEDE2000._deg30InRad *\n      Math.exp(\n        -(((ahp - CIEDE2000._deg275InRad) / CIEDE2000._deg25InRad) ** 2.0),\n      );\n    return -Math.sin(2.0 * delta_theta) * R_C;\n  }\n\n  private static _calculateT(ahp: number) {\n    return (\n      1.0 -\n      0.17 * Math.cos(ahp - CIEDE2000._deg30InRad) +\n      0.24 * Math.cos(ahp * 2.0) +\n      0.32 * Math.cos(ahp * 3.0 + CIEDE2000._deg6InRad) -\n      0.2 * Math.cos(ahp * 4.0 - CIEDE2000._deg63InRad)\n    );\n  }\n\n  private static _calculate_ahp(\n    C1pC2p: number,\n    h_bar: number,\n    h1p: number,\n    h2p: number,\n  ) {\n    const hpSum = h1p + h2p;\n    if (C1pC2p === 0) return hpSum;\n    if (h_bar <= CIEDE2000._deg180InRad) return hpSum / 2.0;\n    if (hpSum < CIEDE2000._deg360InRad) {\n      return (hpSum + CIEDE2000._deg360InRad) / 2.0;\n    }\n    return (hpSum - CIEDE2000._deg360InRad) / 2.0;\n  }\n\n  private static _calculate_dHp(\n    C1pC2p: number,\n    h_bar: number,\n    h2p: number,\n    h1p: number,\n  ) {\n    let dhp;\n    if (C1pC2p === 0) {\n      dhp = 0;\n    } else if (h_bar <= CIEDE2000._deg180InRad) {\n      dhp = h2p - h1p;\n    } else if (h2p <= h1p) {\n      dhp = h2p - h1p + CIEDE2000._deg360InRad;\n    } else {\n      dhp = h2p - h1p - CIEDE2000._deg360InRad;\n    }\n    return 2.0 * Math.sqrt(C1pC2p) * Math.sin(dhp / 2.0);\n  }\n\n  calculateRaw(\n    r1: number,\n    g1: number,\n    b1: number,\n    a1: number,\n    r2: number,\n    g2: number,\n    b2: number,\n    a2: number,\n  ) {\n    const lab1 = rgb2lab(\n      inRange0to255(r1 * this._whitePoint.r),\n      inRange0to255(g1 * this._whitePoint.g),\n      inRange0to255(b1 * this._whitePoint.b),\n    );\n    const lab2 = rgb2lab(\n      inRange0to255(r2 * this._whitePoint.r),\n      inRange0to255(g2 * this._whitePoint.g),\n      inRange0to255(b2 * this._whitePoint.b),\n    );\n    const dA = (a2 - a1) * this._whitePoint.a * CIEDE2000._kA;\n    const dE2 = this.calculateRawInLab(lab1, lab2);\n\n    return Math.sqrt(dE2 + dA * dA);\n  }\n\n  calculateRawInLab(\n    Lab1: { L: number; a: number; b: number },\n    Lab2: { L: number; a: number; b: number },\n  ) {\n    // Get L,a,b values for color 1\n    const L1 = Lab1.L;\n    const a1 = Lab1.a;\n    const b1 = Lab1.b;\n\n    // Get L,a,b values for color 2\n    const L2 = Lab2.L;\n    const a2 = Lab2.a;\n    const b2 = Lab2.b;\n\n    // Calculate Cprime1, Cprime2, Cabbar\n    const C1 = Math.sqrt(a1 * a1 + b1 * b1);\n    const C2 = Math.sqrt(a2 * a2 + b2 * b2);\n    const pow_a_C1_C2_to_7 = ((C1 + C2) / 2.0) ** 7.0;\n\n    const G =\n      0.5 *\n      (1.0 -\n        Math.sqrt(pow_a_C1_C2_to_7 / (pow_a_C1_C2_to_7 + CIEDE2000._pow25to7))); // 25^7\n    const a1p = (1.0 + G) * a1;\n    const a2p = (1.0 + G) * a2;\n\n    const C1p = Math.sqrt(a1p * a1p + b1 * b1);\n    const C2p = Math.sqrt(a2p * a2p + b2 * b2);\n    const C1pC2p = C1p * C2p;\n\n    // Angles in Degree.\n    const h1p = CIEDE2000._calculatehp(b1, a1p);\n    const h2p = CIEDE2000._calculatehp(b2, a2p);\n    const h_bar = Math.abs(h1p - h2p);\n    const dLp = L2 - L1;\n    const dCp = C2p - C1p;\n    const dHp = CIEDE2000._calculate_dHp(C1pC2p, h_bar, h2p, h1p);\n    const ahp = CIEDE2000._calculate_ahp(C1pC2p, h_bar, h1p, h2p);\n\n    const T = CIEDE2000._calculateT(ahp);\n\n    const aCp = (C1p + C2p) / 2.0;\n    const aLp_minus_50_square = ((L1 + L2) / 2.0 - 50.0) ** 2.0;\n    const S_L =\n      1.0 +\n      (0.015 * aLp_minus_50_square) / Math.sqrt(20.0 + aLp_minus_50_square);\n    const S_C = 1.0 + 0.045 * aCp;\n    const S_H = 1.0 + 0.015 * T * aCp;\n\n    const R_T = CIEDE2000._calculateRT(ahp, aCp);\n\n    const dLpSL = dLp / S_L; // S_L * kL, where kL is 1.0\n    const dCpSC = dCp / S_C; // S_C * kC, where kC is 1.0\n    const dHpSH = dHp / S_H; // S_H * kH, where kH is 1.0\n\n    return dLpSL ** 2 + dCpSC ** 2 + dHpSH ** 2 + R_T * dCpSC * dHpSH;\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * cmetric.ts - part of Image Quantization Library\n */\nimport { AbstractDistanceCalculator } from './distanceCalculator';\n\n/**\n * TODO: Name it: http://www.compuphase.com/cmetric.htm\n */\nexport class CMetric extends AbstractDistanceCalculator {\n  calculateRaw(\n    r1: number,\n    g1: number,\n    b1: number,\n    a1: number,\n    r2: number,\n    g2: number,\n    b2: number,\n    a2: number,\n  ) {\n    const rmean = ((r1 + r2) / 2) * this._whitePoint.r;\n    const r = (r1 - r2) * this._whitePoint.r;\n    const g = (g1 - g2) * this._whitePoint.g;\n    const b = (b1 - b2) * this._whitePoint.b;\n    const dE =\n      (((512 + rmean) * r * r) >> 8) +\n      4 * g * g +\n      (((767 - rmean) * b * b) >> 8);\n    const dA = (a2 - a1) * this._whitePoint.a;\n\n    return Math.sqrt(dE + dA * dA);\n  }\n\n  protected _setDefaults() {}\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * euclidean.ts - part of Image Quantization Library\n */\nimport { AbstractDistanceCalculator } from './distanceCalculator';\nimport { Y } from '../constants/bt709';\n\n/**\n * Euclidean color distance\n */\nexport abstract class AbstractEuclidean extends AbstractDistanceCalculator {\n  protected _kR!: number;\n  protected _kG!: number;\n  protected _kB!: number;\n  protected _kA!: number;\n\n  calculateRaw(\n    r1: number,\n    g1: number,\n    b1: number,\n    a1: number,\n    r2: number,\n    g2: number,\n    b2: number,\n    a2: number,\n  ) {\n    const dR = r2 - r1;\n    const dG = g2 - g1;\n    const dB = b2 - b1;\n    const dA = a2 - a1;\n    return Math.sqrt(\n      this._kR * dR * dR +\n        this._kG * dG * dG +\n        this._kB * dB * dB +\n        this._kA * dA * dA,\n    );\n  }\n}\n\nexport class Euclidean extends AbstractEuclidean {\n  protected _setDefaults() {\n    this._kR = 1;\n    this._kG = 1;\n    this._kB = 1;\n    this._kA = 1;\n  }\n}\n\n/**\n * Euclidean color distance (RGBQuant modification w Alpha)\n */\nexport class EuclideanBT709 extends AbstractEuclidean {\n  protected _setDefaults() {\n    this._kR = Y.RED;\n    this._kG = Y.GREEN;\n    this._kB = Y.BLUE;\n    // TODO: what is the best coefficient below?\n    this._kA = 1;\n  }\n}\n\n/**\n * Euclidean color distance (RGBQuant modification w/o Alpha)\n */\nexport class EuclideanBT709NoAlpha extends AbstractEuclidean {\n  protected _setDefaults() {\n    this._kR = Y.RED;\n    this._kG = Y.GREEN;\n    this._kB = Y.BLUE;\n    this._kA = 0;\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * manhattanNeuQuant.ts - part of Image Quantization Library\n */\nimport { AbstractDistanceCalculator } from './distanceCalculator';\nimport { Y } from '../constants/bt709';\n\n/**\n * Manhattan distance (NeuQuant modification) - w/o sRGB coefficients\n */\nexport abstract class AbstractManhattan extends AbstractDistanceCalculator {\n  protected _kR!: number;\n  protected _kG!: number;\n  protected _kB!: number;\n  protected _kA!: number;\n\n  calculateRaw(\n    r1: number,\n    g1: number,\n    b1: number,\n    a1: number,\n    r2: number,\n    g2: number,\n    b2: number,\n    a2: number,\n  ) {\n    let dR = r2 - r1;\n    let dG = g2 - g1;\n    let dB = b2 - b1;\n    let dA = a2 - a1;\n    if (dR < 0) dR = 0 - dR;\n    if (dG < 0) dG = 0 - dG;\n    if (dB < 0) dB = 0 - dB;\n    if (dA < 0) dA = 0 - dA;\n\n    return this._kR * dR + this._kG * dG + this._kB * dB + this._kA * dA;\n  }\n}\n\nexport class Manhattan extends AbstractManhattan {\n  protected _setDefaults() {\n    this._kR = 1;\n    this._kG = 1;\n    this._kB = 1;\n    this._kA = 1;\n  }\n}\n\n/**\n * Manhattan distance (Nommyde modification)\n * https://github.com/igor-bezkrovny/image-quantization/issues/4#issuecomment-235155320\n */\nexport class ManhattanNommyde extends AbstractManhattan {\n  protected _setDefaults() {\n    this._kR = 0.4984;\n    this._kG = 0.8625;\n    this._kB = 0.2979;\n    // TODO: what is the best coefficient below?\n    this._kA = 1;\n  }\n}\n\n/**\n * Manhattan distance (sRGB coefficients)\n */\nexport class ManhattanBT709 extends AbstractManhattan {\n  protected _setDefaults() {\n    this._kR = Y.RED;\n    this._kG = Y.GREEN;\n    this._kB = Y.BLUE;\n    // TODO: what is the best coefficient below?\n    this._kA = 1;\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * pngQuant.ts - part of Image Quantization Library\n */\nimport { AbstractDistanceCalculator } from './distanceCalculator';\n\n/**\n * TODO: check quality of this distance equation\n * TODO: ask author for usage rights\n * taken from:\n * {@link http://stackoverflow.com/questions/4754506/color-similarity-distance-in-rgba-color-space/8796867#8796867}\n * {@link https://github.com/pornel/pngquant/blob/cc39b47799a7ff2ef17b529f9415ff6e6b213b8f/lib/pam.h#L148}\n */\nexport class PNGQuant extends AbstractDistanceCalculator {\n  /**\n   * Author's comments\n   * px_b.rgb = px.rgb + 0*(1-px.a) // blend px on black\n   * px_b.a   = px.a   + 1*(1-px.a)\n   * px_w.rgb = px.rgb + 1*(1-px.a) // blend px on white\n   * px_w.a   = px.a   + 1*(1-px.a)\n   *\n   * px_b.rgb = px.rgb              // difference same as in opaque RGB\n   * px_b.a   = 1\n   * px_w.rgb = px.rgb - px.a       // difference simplifies to formula below\n   * px_w.a   = 1\n   *\n   * (px.rgb - px.a) - (py.rgb - py.a)\n   * (px.rgb - py.rgb) + (py.a - px.a)\n   *\n   */\n  calculateRaw(\n    r1: number,\n    g1: number,\n    b1: number,\n    a1: number,\n    r2: number,\n    g2: number,\n    b2: number,\n    a2: number,\n  ) {\n    const alphas = (a2 - a1) * this._whitePoint.a;\n    return (\n      this._colordifferenceCh(\n        r1 * this._whitePoint.r,\n        r2 * this._whitePoint.r,\n        alphas,\n      ) +\n      this._colordifferenceCh(\n        g1 * this._whitePoint.g,\n        g2 * this._whitePoint.g,\n        alphas,\n      ) +\n      this._colordifferenceCh(\n        b1 * this._whitePoint.b,\n        b2 * this._whitePoint.b,\n        alphas,\n      )\n    );\n  }\n\n  private _colordifferenceCh(x: number, y: number, alphas: number) {\n    // maximum of channel blended on white, and blended on black\n    // premultiplied alpha and backgrounds 0/1 shorten the formula\n    const black = x - y;\n    const white = black + alphas;\n\n    return black * black + white * white;\n  }\n\n  protected _setDefaults() {}\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * iq.ts - Image Quantization Library\n */\nexport { AbstractDistanceCalculator } from './distanceCalculator';\nexport { CIE94Textiles, CIE94GraphicArts } from './cie94';\nexport { CIEDE2000 } from './ciede2000';\nexport { CMetric } from './cmetric';\nexport {\n  AbstractEuclidean,\n  Euclidean,\n  EuclideanBT709NoAlpha,\n  EuclideanBT709,\n} from './euclidean';\nexport {\n  AbstractManhattan,\n  Manhattan,\n  ManhattanBT709,\n  ManhattanNommyde,\n} from './manhattan';\nexport { PNGQuant } from './pngQuant';\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * common.ts - part of Image Quantization Library\n */\nimport { PointContainer } from '../utils/pointContainer';\nimport { PaletteQuantizerYieldValue } from './paletteQuantizerYieldValue';\n\nexport abstract class AbstractPaletteQuantizer {\n  abstract sample(pointContainer: PointContainer): void;\n  abstract quantize(): IterableIterator<PaletteQuantizerYieldValue>;\n\n  quantizeSync() {\n    for (const value of this.quantize()) {\n      if (value.palette) {\n        return value.palette;\n      }\n    }\n\n    throw new Error('unreachable');\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * point.ts - part of Image Quantization Library\n */\nimport { Y } from '../constants/bt709';\n\nexport interface PointRGBA {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n}\n\n/**\n * v8 optimized class\n * 1) \"constructor\" should have initialization with worst types\n * 2) \"set\" should have |0 / >>> 0\n */\nexport class Point implements PointRGBA {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n  uint32: number;\n  rgba: number[]; // TODO: better name is quadruplet or quad may be?\n  // Lab : { L : number; a : number; b : number };\n\n  static createByQuadruplet(quadruplet: number[]) {\n    const point = new Point();\n\n    point.r = quadruplet[0] | 0;\n    point.g = quadruplet[1] | 0;\n    point.b = quadruplet[2] | 0;\n    point.a = quadruplet[3] | 0;\n    point._loadUINT32();\n    point._loadQuadruplet();\n    // point._loadLab();\n    return point;\n  }\n\n  static createByRGBA(red: number, green: number, blue: number, alpha: number) {\n    const point = new Point();\n\n    point.r = red | 0;\n    point.g = green | 0;\n    point.b = blue | 0;\n    point.a = alpha | 0;\n    point._loadUINT32();\n    point._loadQuadruplet();\n    // point._loadLab();\n    return point;\n  }\n\n  static createByUint32(uint32: number) {\n    const point = new Point();\n\n    point.uint32 = uint32 >>> 0;\n    point._loadRGBA();\n    point._loadQuadruplet();\n    // point._loadLab();\n    return point;\n  }\n\n  constructor() {\n    this.uint32 = -1 >>> 0;\n    this.r = this.g = this.b = this.a = 0;\n    this.rgba = new Array(4);\n    this.rgba[0] = 0;\n    this.rgba[1] = 0;\n    this.rgba[2] = 0;\n    this.rgba[3] = 0;\n    /*\n     this.Lab = {\n     L : 0.0,\n     a : 0.0,\n     b : 0.0\n     };\n     */\n  }\n\n  from(point: Point) {\n    this.r = point.r;\n    this.g = point.g;\n    this.b = point.b;\n    this.a = point.a;\n    this.uint32 = point.uint32;\n    this.rgba[0] = point.r;\n    this.rgba[1] = point.g;\n    this.rgba[2] = point.b;\n    this.rgba[3] = point.a;\n\n    /*\n     this.Lab.L = point.Lab.L;\n     this.Lab.a = point.Lab.a;\n     this.Lab.b = point.Lab.b;\n     */\n  }\n\n  /*\n   * TODO:\n   Luminance from RGB:\n\n   Luminance (standard for certain colour spaces): (0.2126*R + 0.7152*G + 0.0722*B) [1]\n   Luminance (perceived option 1): (0.299*R + 0.587*G + 0.114*B) [2]\n   Luminance (perceived option 2, slower to calculate):  sqrt( 0.241*R^2 + 0.691*G^2 + 0.068*B^2 ) ? sqrt( 0.299*R^2 + 0.587*G^2 + 0.114*B^2 ) (thanks to @MatthewHerbst) [http://alienryderflex.com/hsp.html]\n   */\n  getLuminosity(useAlphaChannel: boolean) {\n    let r = this.r;\n    let g = this.g;\n    let b = this.b;\n\n    if (useAlphaChannel) {\n      r = Math.min(255, 255 - this.a + (this.a * r) / 255);\n      g = Math.min(255, 255 - this.a + (this.a * g) / 255);\n      b = Math.min(255, 255 - this.a + (this.a * b) / 255);\n    }\n\n    // var luma = this.r * Point._RED_COEFFICIENT + this.g * Point._GREEN_COEFFICIENT + this.b * Point._BLUE_COEFFICIENT;\n\n    /*\n     if(useAlphaChannel) {\n     luma = (luma * (255 - this.a)) / 255;\n     }\n     */\n\n    return r * Y.RED + g * Y.GREEN + b * Y.BLUE;\n  }\n\n  private _loadUINT32() {\n    this.uint32 =\n      ((this.a << 24) | (this.b << 16) | (this.g << 8) | this.r) >>> 0;\n  }\n\n  private _loadRGBA() {\n    this.r = this.uint32 & 0xff;\n    this.g = (this.uint32 >>> 8) & 0xff;\n    this.b = (this.uint32 >>> 16) & 0xff;\n    this.a = (this.uint32 >>> 24) & 0xff;\n  }\n\n  private _loadQuadruplet() {\n    this.rgba[0] = this.r;\n    this.rgba[1] = this.g;\n    this.rgba[2] = this.b;\n    this.rgba[3] = this.a;\n\n    /*\n     var xyz = rgb2xyz(this.r, this.g, this.b);\n     var lab = xyz2lab(xyz.x, xyz.y, xyz.z);\n     this.lab.l = lab.l;\n     this.lab.a = lab.a;\n     this.lab.b = lab.b;\n     */\n  }\n\n  /*\n   private _loadLab() : void {\n   var Lab = Color.Conversion.rgb2lab(this.r, this.g, this.b);\n   this.Lab.L = Lab.L;\n   this.Lab.a = Lab.a;\n   this.Lab.b = Lab.b;\n   }\n   */\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * pointContainer.ts - part of Image Quantization Library\n */\nimport { Point } from './point';\n\n/**\n * v8 optimizations done.\n * fromXXX methods are static to move out polymorphic code from class instance itself.\n */\nexport class PointContainer {\n  private readonly _pointArray: Point[];\n  private _width: number;\n  private _height: number;\n\n  constructor() {\n    this._width = 0;\n    this._height = 0;\n    this._pointArray = [];\n  }\n\n  getWidth() {\n    return this._width;\n  }\n\n  getHeight() {\n    return this._height;\n  }\n\n  setWidth(width: number) {\n    this._width = width;\n  }\n\n  setHeight(height: number) {\n    this._height = height;\n  }\n\n  getPointArray() {\n    return this._pointArray;\n  }\n\n  clone() {\n    const clone = new PointContainer();\n    clone._width = this._width;\n    clone._height = this._height;\n\n    for (let i = 0, l = this._pointArray.length; i < l; i++) {\n      clone._pointArray[i] = Point.createByUint32(\n        this._pointArray[i].uint32 | 0,\n      ); // \"| 0\" is added for v8 optimization\n    }\n\n    return clone;\n  }\n\n  toUint32Array() {\n    const l = this._pointArray.length;\n    const uint32Array = new Uint32Array(l);\n\n    for (let i = 0; i < l; i++) {\n      uint32Array[i] = this._pointArray[i].uint32;\n    }\n\n    return uint32Array;\n  }\n\n  toUint8Array() {\n    return new Uint8Array(this.toUint32Array().buffer);\n  }\n\n  static fromHTMLImageElement(img: HTMLImageElement) {\n    const width = img.naturalWidth;\n    const height = img.naturalHeight;\n\n    // eslint-disable-next-line no-undef\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const ctx = canvas.getContext('2d')!; // tslint:disable-line:no-non-null-assertion\n    ctx.drawImage(img, 0, 0, width, height, 0, 0, width, height);\n\n    return PointContainer.fromHTMLCanvasElement(canvas);\n  }\n\n  static fromHTMLCanvasElement(canvas: HTMLCanvasElement) {\n    const width = canvas.width;\n    const height = canvas.height;\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const ctx = canvas.getContext('2d')!; // tslint:disable-line:no-non-null-assertion\n    const imgData = ctx.getImageData(0, 0, width, height);\n\n    return PointContainer.fromImageData(imgData);\n  }\n\n  static fromImageData(imageData: ImageData) {\n    const width = imageData.width;\n    const height = imageData.height;\n\n    return PointContainer.fromUint8Array(imageData.data, width, height);\n  }\n\n  static fromUint8Array(\n    uint8Array: number[] | Uint8Array | Uint8ClampedArray,\n    width: number,\n    height: number,\n  ) {\n    switch (Object.prototype.toString.call(uint8Array)) {\n      case '[object Uint8ClampedArray]':\n      case '[object Uint8Array]':\n        break;\n\n      default:\n        uint8Array = new Uint8Array(uint8Array);\n    }\n\n    const uint32Array = new Uint32Array((uint8Array as Uint8Array).buffer);\n    return PointContainer.fromUint32Array(uint32Array, width, height);\n  }\n\n  static fromUint32Array(\n    uint32Array: Uint32Array,\n    width: number,\n    height: number,\n  ) {\n    const container = new PointContainer();\n\n    container._width = width;\n    container._height = height;\n\n    for (let i = 0, l = uint32Array.length; i < l; i++) {\n      container._pointArray[i] = Point.createByUint32(uint32Array[i] | 0); // \"| 0\" is added for v8 optimization\n    }\n\n    return container;\n  }\n\n  static fromBuffer(buffer: Buffer, width: number, height: number) {\n    const uint32Array = new Uint32Array(\n      buffer.buffer,\n      buffer.byteOffset,\n      buffer.byteLength / Uint32Array.BYTES_PER_ELEMENT,\n    );\n    return PointContainer.fromUint32Array(uint32Array, width, height);\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * palette.ts - part of Image Quantization Library\n */\n\nimport { Point } from './point';\nimport { PointContainer } from './pointContainer';\nimport { AbstractDistanceCalculator } from '../distance/distanceCalculator';\nimport { rgb2hsl } from '../conversion/rgb2hsl';\n\n// TODO: make paletteArray via pointContainer, so, export will be available via pointContainer.exportXXX\n\nconst hueGroups = 10;\n\nexport function hueGroup(hue: number, segmentsNumber: number) {\n  const maxHue = 360;\n  const seg = maxHue / segmentsNumber;\n  const half = seg / 2;\n\n  for (let i = 1, mid = seg - half; i < segmentsNumber; i++, mid += seg) {\n    if (hue >= mid && hue < mid + seg) return i;\n  }\n  return 0;\n}\n\nexport class Palette {\n  private readonly _pointContainer: PointContainer;\n  private readonly _pointArray: Point[] = [];\n  private _i32idx: { [key: string]: number } = {};\n\n  constructor() {\n    this._pointContainer = new PointContainer();\n    this._pointContainer.setHeight(1);\n    this._pointArray = this._pointContainer.getPointArray();\n  }\n\n  add(color: Point) {\n    this._pointArray.push(color);\n    this._pointContainer.setWidth(this._pointArray.length);\n  }\n\n  has(color: Point) {\n    for (let i = this._pointArray.length - 1; i >= 0; i--) {\n      if (color.uint32 === this._pointArray[i].uint32) return true;\n    }\n\n    return false;\n  }\n\n  // TOTRY: use HUSL - http://boronine.com/husl/ http://www.husl-colors.org/ https://github.com/husl-colors/husl\n  getNearestColor(\n    colorDistanceCalculator: AbstractDistanceCalculator,\n    color: Point,\n  ) {\n    return this._pointArray[\n      this._getNearestIndex(colorDistanceCalculator, color) | 0\n    ];\n  }\n\n  getPointContainer() {\n    return this._pointContainer;\n  }\n\n  // TOTRY: use HUSL - http://boronine.com/husl/\n  /*\n   public nearestIndexByUint32(i32) {\n   var idx : number = this._nearestPointFromCache(\"\" + i32);\n   if (idx >= 0) return idx;\n\n   var min = 1000,\n   rgb = [\n   (i32 & 0xff),\n   (i32 >>> 8) & 0xff,\n   (i32 >>> 16) & 0xff,\n   (i32 >>> 24) & 0xff\n   ],\n   len = this._pointArray.length;\n\n   idx = 0;\n   for (var i = 0; i < len; i++) {\n   var dist = Utils.distEuclidean(rgb, this._pointArray[i].rgba);\n\n   if (dist < min) {\n   min = dist;\n   idx = i;\n   }\n   }\n\n   this._i32idx[i32] = idx;\n   return idx;\n   }\n   */\n\n  private _nearestPointFromCache(key: string) {\n    return typeof this._i32idx[key] === 'number' ? this._i32idx[key] : -1;\n  }\n\n  private _getNearestIndex(\n    colorDistanceCalculator: AbstractDistanceCalculator,\n    point: Point,\n  ) {\n    let idx = this._nearestPointFromCache('' + point.uint32); // eslint-disable-line prefer-template\n    if (idx >= 0) return idx;\n\n    let minimalDistance = Number.MAX_VALUE;\n\n    idx = 0;\n    for (let i = 0, l = this._pointArray.length; i < l; i++) {\n      const p = this._pointArray[i];\n      const distance = colorDistanceCalculator.calculateRaw(\n        point.r,\n        point.g,\n        point.b,\n        point.a,\n        p.r,\n        p.g,\n        p.b,\n        p.a,\n      );\n\n      if (distance < minimalDistance) {\n        minimalDistance = distance;\n        idx = i;\n      }\n    }\n\n    this._i32idx[point.uint32] = idx;\n    return idx;\n  }\n\n  /*\n   public reduce(histogram : ColorHistogram, colors : number) {\n   if (this._pointArray.length > colors) {\n   var idxi32 = histogram.getImportanceSortedColorsIDXI32();\n\n   // quantize histogram to existing palette\n   var keep = [], uniqueColors = 0, idx, pruned = false;\n\n   for (var i = 0, len = idxi32.length; i < len; i++) {\n   // palette length reached, unset all remaining colors (sparse palette)\n   if (uniqueColors >= colors) {\n   this.prunePal(keep);\n   pruned = true;\n   break;\n   } else {\n   idx = this.nearestIndexByUint32(idxi32[i]);\n   if (keep.indexOf(idx) < 0) {\n   keep.push(idx);\n   uniqueColors++;\n   }\n   }\n   }\n\n   if (!pruned) {\n   this.prunePal(keep);\n   }\n   }\n   }\n\n   // TODO: check usage, not tested!\n   public prunePal(keep : number[]) {\n   var colors = this._pointArray.length;\n   for (var colorIndex = colors - 1; colorIndex >= 0; colorIndex--) {\n   if (keep.indexOf(colorIndex) < 0) {\n\n   if(colorIndex + 1 < colors) {\n   this._pointArray[ colorIndex ] = this._pointArray [ colors - 1 ];\n   }\n   --colors;\n   //this._pointArray[colorIndex] = null;\n   }\n   }\n   console.log(\"colors pruned: \" + (this._pointArray.length - colors));\n   this._pointArray.length = colors;\n   this._i32idx = {};\n   }\n   */\n\n  // TODO: group very low lum and very high lum colors\n  // TODO: pass custom sort order\n  // TODO: sort criteria function should be placed to HueStats class\n  sort() {\n    this._i32idx = {};\n    this._pointArray.sort((a: Point, b: Point) => {\n      const hslA = rgb2hsl(a.r, a.g, a.b);\n      const hslB = rgb2hsl(b.r, b.g, b.b);\n\n      // sort all grays + whites together\n      const hueA =\n        a.r === a.g && a.g === a.b ? 0 : 1 + hueGroup(hslA.h, hueGroups);\n      const hueB =\n        b.r === b.g && b.g === b.b ? 0 : 1 + hueGroup(hslB.h, hueGroups);\n      /*\n       var hueA = (a.r === a.g && a.g === a.b) ? 0 : 1 + Utils.hueGroup(hslA.h, hueGroups);\n       var hueB = (b.r === b.g && b.g === b.b) ? 0 : 1 + Utils.hueGroup(hslB.h, hueGroups);\n       */\n\n      const hueDiff = hueB - hueA;\n      if (hueDiff) return -hueDiff;\n\n      /*\n       var lumDiff = Utils.lumGroup(+hslB.l.toFixed(2)) - Utils.lumGroup(+hslA.l.toFixed(2));\n       if (lumDiff) return -lumDiff;\n       */\n      const lA = a.getLuminosity(true);\n      const lB = b.getLuminosity(true);\n\n      if (lB - lA !== 0) return lB - lA;\n\n      const satDiff = ((hslB.s * 100) | 0) - ((hslA.s * 100) | 0);\n      if (satDiff) return -satDiff;\n\n      return 0;\n    });\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * hueStatistics.ts - part of Image Quantization Library\n */\nimport { rgb2hsl } from '../conversion/rgb2hsl';\nimport { hueGroup } from './palette';\n\nclass HueGroup {\n  num = 0;\n  cols: number[] = [];\n}\n\nexport class HueStatistics {\n  private _numGroups: number;\n  private _minCols: number;\n  private _stats: HueGroup[];\n  private _groupsFull: number;\n\n  constructor(numGroups: number, minCols: number) {\n    this._numGroups = numGroups;\n    this._minCols = minCols;\n    this._stats = [];\n\n    for (let i = 0; i <= numGroups; i++) {\n      this._stats[i] = new HueGroup();\n    }\n\n    this._groupsFull = 0;\n  }\n\n  check(i32: number) {\n    if (this._groupsFull === this._numGroups + 1) {\n      this.check = () => {};\n    }\n\n    const r = i32 & 0xff;\n    const g = (i32 >>> 8) & 0xff;\n    const b = (i32 >>> 16) & 0xff;\n    const hg =\n      r === g && g === b\n        ? 0\n        : 1 + hueGroup(rgb2hsl(r, g, b).h, this._numGroups);\n    const gr = this._stats[hg];\n    const min = this._minCols;\n\n    gr.num++;\n\n    if (gr.num > min) {\n      return;\n    }\n    if (gr.num === min) {\n      this._groupsFull++;\n    }\n\n    if (gr.num <= min) {\n      this._stats[hg].cols.push(i32);\n    }\n  }\n\n  injectIntoDictionary(histG: Record<string, number>) {\n    for (let i = 0; i <= this._numGroups; i++) {\n      if (this._stats[i].num <= this._minCols) {\n        this._stats[i].cols.forEach((col: number) => {\n          if (!histG[col]) {\n            histG[col] = 1;\n          } else {\n            histG[col]++;\n          }\n        });\n      }\n    }\n  }\n\n  injectIntoArray(histG: string[]) {\n    for (let i = 0; i <= this._numGroups; i++) {\n      if (this._stats[i].num <= this._minCols) {\n        this._stats[i].cols.forEach((col: unknown) => {\n          if (histG.indexOf(col as string) === -1) {\n            histG.push(col as string);\n          }\n        });\n      }\n    }\n  }\n}\n","export class ProgressTracker {\n  static readonly steps = 100;\n\n  progress: number;\n\n  private _step: number;\n  private _range: number;\n  private _last: number;\n  private _progressRange: number;\n\n  constructor(valueRange: number, progressRange: number) {\n    this._range = valueRange;\n    this._progressRange = progressRange;\n    this._step = Math.max(1, (this._range / (ProgressTracker.steps + 1)) | 0);\n    this._last = -this._step;\n    this.progress = 0;\n  }\n\n  shouldNotify(current: number) {\n    if (current - this._last >= this._step) {\n      this._last = current;\n      this.progress = Math.min(\n        (this._progressRange * this._last) / this._range,\n        this._progressRange,\n      );\n      return true;\n    }\n\n    return false;\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * iq.ts - Image Quantization Library\n */\nimport * as arithmetic from './arithmetic';\nimport { HueStatistics } from './hueStatistics';\nimport { Palette } from './palette';\nimport { Point } from './point';\nimport { PointContainer } from './pointContainer';\nimport { ProgressTracker } from './progressTracker';\n\nexport {\n  Point,\n  PointContainer,\n  Palette,\n  HueStatistics,\n  ProgressTracker,\n  arithmetic,\n};\n","/*\n * NeuQuant Neural-Net Quantization Algorithm\n * ------------------------------------------\n *\n * Copyright (c) 1994 Anthony Dekker\n *\n * NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994. See\n * \"Kohonen neural networks for optimal colour quantization\" in \"Network:\n * Computation in Neural Systems\" Vol. 5 (1994) pp 351-367. for a discussion of\n * the algorithm.\n *\n * Any party obtaining a copy of these files from the author, directly or\n * indirectly, is granted, free of charge, a full and unrestricted irrevocable,\n * world-wide, paid up, royalty-free, nonexclusive right and license to deal in\n * this software and documentation files (the \"Software\"), including without\n * limitation the rights to use, copy, modify, merge, publish, distribute,\n * sublicense, and/or sell copies of the Software, and to permit persons who\n * receive copies from any such party to do so, with the only requirement being\n * that this copyright notice remain intact.\n */\n\n/**\n * @preserve TypeScript port:\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * neuquant.ts - part of Image Quantization Library\n */\n\nimport { Palette } from '../../utils/palette';\nimport { Point } from '../../utils/point';\nimport { PointContainer } from '../../utils/pointContainer';\nimport { AbstractDistanceCalculator } from '../../distance/distanceCalculator';\nimport { AbstractPaletteQuantizer } from '../paletteQuantizer';\nimport { PaletteQuantizerYieldValue } from '../paletteQuantizerYieldValue';\nimport { ProgressTracker } from '../../utils';\n\n// bias for colour values\nconst networkBiasShift = 3;\n\nclass Neuron {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n\n  constructor(defaultValue: number) {\n    this.r = this.g = this.b = this.a = defaultValue;\n  }\n\n  /**\n   * There is a fix in original NEUQUANT by Anthony Dekker (http://members.ozemail.com.au/~dekker/NEUQUANT.HTML)\n   * @example\n   * r = Math.min(255, (neuron.r + (1 << (networkBiasShift - 1))) >> networkBiasShift);\n   */\n  toPoint() {\n    return Point.createByRGBA(\n      this.r >> networkBiasShift,\n      this.g >> networkBiasShift,\n      this.b >> networkBiasShift,\n      this.a >> networkBiasShift,\n    );\n  }\n\n  subtract(r: number, g: number, b: number, a: number) {\n    this.r -= r | 0;\n    this.g -= g | 0;\n    this.b -= b | 0;\n    this.a -= a | 0;\n  }\n\n  /*\n   public subtract(r : number, g : number, b : number, a : number) : void {\n   this.r = (-r + this.r) | 0;\n   this.g = (-g + this.g) | 0;\n   this.b = (-b + this.b) | 0;\n   this.a = (-a + this.a) | 0;\n\n   this.r -= r;\n   this.g -= g;\n   this.b -= b;\n   this.a -= a;\n\n   this.r -= r | 0;\n   this.g -= g | 0;\n   this.b -= b | 0;\n   this.a -= a | 0;\n   }\n   */\n}\n\nexport class NeuQuant extends AbstractPaletteQuantizer {\n  /*\n   four primes near 500 - assume no image has a length so large\n   that it is divisible by all four primes\n   */\n  private static readonly _prime1 = 499;\n  private static readonly _prime2 = 491;\n  private static readonly _prime3 = 487;\n  private static readonly _prime4 = 503;\n  private static readonly _minpicturebytes = NeuQuant._prime4;\n\n  // no. of learning cycles\n  private static readonly _nCycles = 100;\n\n  // defs for freq and bias\n  private static readonly _initialBiasShift = 16;\n\n  // bias for fractions\n  private static readonly _initialBias = 1 << NeuQuant._initialBiasShift;\n  private static readonly _gammaShift = 10;\n\n  // gamma = 1024\n  // TODO: why gamma is never used?\n  // private static _gamma : number     = (1 << NeuQuant._gammaShift);\n  private static readonly _betaShift = 10;\n  private static readonly _beta = NeuQuant._initialBias >> NeuQuant._betaShift;\n\n  // beta = 1/1024\n  private static readonly _betaGamma =\n    NeuQuant._initialBias << (NeuQuant._gammaShift - NeuQuant._betaShift);\n\n  /*\n   * for 256 cols, radius starts\n   */\n  private static readonly _radiusBiasShift = 6;\n\n  // at 32.0 biased by 6 bits\n  private static readonly _radiusBias = 1 << NeuQuant._radiusBiasShift;\n\n  // and decreases by a factor of 1/30 each cycle\n  private static readonly _radiusDecrease = 30;\n\n  /* defs for decreasing alpha factor */\n\n  // alpha starts at 1.0\n  private static readonly _alphaBiasShift = 10;\n\n  // biased by 10 bits\n  private static readonly _initAlpha = 1 << NeuQuant._alphaBiasShift;\n\n  /* radBias and alphaRadBias used for radpower calculation */\n  private static readonly _radBiasShift = 8;\n  private static readonly _radBias = 1 << NeuQuant._radBiasShift;\n  private static readonly _alphaRadBiasShift =\n    NeuQuant._alphaBiasShift + NeuQuant._radBiasShift;\n  private static readonly _alphaRadBias = 1 << NeuQuant._alphaRadBiasShift;\n\n  private _pointArray: Point[];\n  private readonly _networkSize: number;\n  private _network!: Neuron[];\n\n  /** sampling factor 1..30 */\n  private readonly _sampleFactor!: number;\n  private _radPower!: number[];\n\n  // bias and freq arrays for learning\n  private _freq!: number[];\n\n  /* for network lookup - really 256 */\n  private _bias!: number[];\n  private readonly _distance: AbstractDistanceCalculator;\n\n  constructor(\n    colorDistanceCalculator: AbstractDistanceCalculator,\n    colors = 256,\n  ) {\n    super();\n    this._distance = colorDistanceCalculator;\n    this._pointArray = [];\n    this._sampleFactor = 1;\n    this._networkSize = colors;\n\n    this._distance.setWhitePoint(\n      255 << networkBiasShift,\n      255 << networkBiasShift,\n      255 << networkBiasShift,\n      255 << networkBiasShift,\n    );\n  }\n\n  sample(pointContainer: PointContainer) {\n    this._pointArray = this._pointArray.concat(pointContainer.getPointArray());\n  }\n\n  *quantize(): IterableIterator<PaletteQuantizerYieldValue> {\n    this._init();\n\n    yield* this._learn();\n\n    yield {\n      palette: this._buildPalette(),\n      progress: 100,\n    };\n  }\n\n  private _init() {\n    this._freq = [];\n    this._bias = [];\n    this._radPower = [];\n    this._network = [];\n    for (let i = 0; i < this._networkSize; i++) {\n      this._network[i] = new Neuron(\n        ((i << (networkBiasShift + 8)) / this._networkSize) | 0,\n      );\n\n      // 1/this._networkSize\n      this._freq[i] = (NeuQuant._initialBias / this._networkSize) | 0;\n      this._bias[i] = 0;\n    }\n  }\n\n  /**\n   * Main Learning Loop\n   */\n  private *_learn() {\n    let sampleFactor = this._sampleFactor;\n    const pointsNumber = this._pointArray.length;\n    if (pointsNumber < NeuQuant._minpicturebytes) sampleFactor = 1;\n\n    const alphadec = (30 + (sampleFactor - 1) / 3) | 0;\n    const pointsToSample = (pointsNumber / sampleFactor) | 0;\n\n    let delta = (pointsToSample / NeuQuant._nCycles) | 0;\n    let alpha = NeuQuant._initAlpha;\n    let radius = (this._networkSize >> 3) * NeuQuant._radiusBias;\n\n    let rad = radius >> NeuQuant._radiusBiasShift;\n    if (rad <= 1) rad = 0;\n\n    for (let i = 0; i < rad; i++) {\n      this._radPower[i] =\n        (alpha * (((rad * rad - i * i) * NeuQuant._radBias) / (rad * rad))) >>>\n        0;\n    }\n\n    let step;\n    if (pointsNumber < NeuQuant._minpicturebytes) {\n      step = 1;\n    } else if (pointsNumber % NeuQuant._prime1 !== 0) {\n      step = NeuQuant._prime1;\n    } else if (pointsNumber % NeuQuant._prime2 !== 0) {\n      step = NeuQuant._prime2;\n    } else if (pointsNumber % NeuQuant._prime3 !== 0) {\n      step = NeuQuant._prime3;\n    } else {\n      step = NeuQuant._prime4;\n    }\n\n    const tracker = new ProgressTracker(pointsToSample, 99);\n    for (let i = 0, pointIndex = 0; i < pointsToSample; ) {\n      if (tracker.shouldNotify(i)) {\n        yield {\n          progress: tracker.progress,\n        };\n      }\n\n      const point = this._pointArray[pointIndex];\n      const b = point.b << networkBiasShift;\n      const g = point.g << networkBiasShift;\n      const r = point.r << networkBiasShift;\n      const a = point.a << networkBiasShift;\n      const neuronIndex = this._contest(b, g, r, a);\n\n      this._alterSingle(alpha, neuronIndex, b, g, r, a);\n      if (rad !== 0) this._alterNeighbour(rad, neuronIndex, b, g, r, a);\n\n      /* alter neighbours */\n      pointIndex += step;\n      if (pointIndex >= pointsNumber) pointIndex -= pointsNumber;\n      i++;\n\n      if (delta === 0) delta = 1;\n\n      if (i % delta === 0) {\n        alpha -= (alpha / alphadec) | 0;\n        radius -= (radius / NeuQuant._radiusDecrease) | 0;\n        rad = radius >> NeuQuant._radiusBiasShift;\n\n        if (rad <= 1) rad = 0;\n        for (let j = 0; j < rad; j++) {\n          this._radPower[j] =\n            (alpha *\n              (((rad * rad - j * j) * NeuQuant._radBias) / (rad * rad))) >>>\n            0;\n        }\n      }\n    }\n  }\n\n  private _buildPalette() {\n    const palette = new Palette();\n\n    this._network.forEach(neuron => {\n      palette.add(neuron.toPoint());\n    });\n\n    palette.sort();\n    return palette;\n  }\n\n  /**\n   * Move adjacent neurons by precomputed alpha*(1-((i-j)^2/[r]^2)) in radpower[|i-j|]\n   */\n  private _alterNeighbour(\n    rad: number,\n    i: number,\n    b: number,\n    g: number,\n    r: number,\n    al: number,\n  ) {\n    let lo = i - rad;\n    if (lo < -1) lo = -1;\n\n    let hi = i + rad;\n    if (hi > this._networkSize) hi = this._networkSize;\n\n    let j = i + 1;\n    let k = i - 1;\n    let m = 1;\n\n    while (j < hi || k > lo) {\n      const a = this._radPower[m++] / NeuQuant._alphaRadBias;\n      if (j < hi) {\n        const p = this._network[j++];\n        p.subtract(a * (p.r - r), a * (p.g - g), a * (p.b - b), a * (p.a - al));\n      }\n\n      if (k > lo) {\n        const p = this._network[k--];\n        p.subtract(a * (p.r - r), a * (p.g - g), a * (p.b - b), a * (p.a - al));\n      }\n    }\n  }\n\n  /**\n   * Move neuron i towards biased (b,g,r) by factor alpha\n   */\n  private _alterSingle(\n    alpha: number,\n    i: number,\n    b: number,\n    g: number,\n    r: number,\n    a: number,\n  ) {\n    alpha /= NeuQuant._initAlpha;\n\n    /* alter hit neuron */\n    const n = this._network[i];\n    n.subtract(\n      alpha * (n.r - r),\n      alpha * (n.g - g),\n      alpha * (n.b - b),\n      alpha * (n.a - a),\n    );\n  }\n\n  /**\n   * Search for biased BGR values\n   * description:\n   *    finds closest neuron (min dist) and updates freq\n   *    finds best neuron (min dist-bias) and returns position\n   *    for frequently chosen neurons, freq[i] is high and bias[i] is negative\n   *    bias[i] = _gamma*((1/this._networkSize)-freq[i])\n   *\n   * Original distance equation:\n   *        dist = abs(dR) + abs(dG) + abs(dB)\n   */\n  private _contest(b: number, g: number, r: number, a: number) {\n    const multiplier = (255 * 4) << networkBiasShift;\n\n    let bestd = ~(1 << 31);\n    let bestbiasd = bestd;\n    let bestpos = -1;\n    let bestbiaspos = bestpos;\n\n    for (let i = 0; i < this._networkSize; i++) {\n      const n = this._network[i];\n      const dist =\n        (this._distance.calculateNormalized(n, { r, g, b, a }) * multiplier) |\n        0;\n\n      if (dist < bestd) {\n        bestd = dist;\n        bestpos = i;\n      }\n\n      const biasdist =\n        dist -\n        (this._bias[i] >> (NeuQuant._initialBiasShift - networkBiasShift));\n      if (biasdist < bestbiasd) {\n        bestbiasd = biasdist;\n        bestbiaspos = i;\n      }\n      const betafreq = this._freq[i] >> NeuQuant._betaShift;\n      this._freq[i] -= betafreq;\n      this._bias[i] += betafreq << NeuQuant._gammaShift;\n    }\n    this._freq[bestpos] += NeuQuant._beta;\n    this._bias[bestpos] -= NeuQuant._betaGamma;\n    return bestbiaspos;\n  }\n}\n","/*\n * NeuQuantFloat Neural-Net Quantization Algorithm\n * ------------------------------------------\n *\n * Copyright (c) 1994 Anthony Dekker\n *\n * NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994. See\n * \"Kohonen neural networks for optimal colour quantization\" in \"Network:\n * Computation in Neural Systems\" Vol. 5 (1994) pp 351-367. for a discussion of\n * the algorithm.\n *\n * Any party obtaining a copy of these files from the author, directly or\n * indirectly, is granted, free of charge, a full and unrestricted irrevocable,\n * world-wide, paid up, royalty-free, nonexclusive right and license to deal in\n * this software and documentation files (the \"Software\"), including without\n * limitation the rights to use, copy, modify, merge, publish, distribute,\n * sublicense, and/or sell copies of the Software, and to permit persons who\n * receive copies from any such party to do so, with the only requirement being\n * that this copyright notice remain intact.\n */\n/**\n * @preserve TypeScript port:\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * neuquant.ts - part of Image Quantization Library\n */\nimport { Palette } from '../../utils/palette';\nimport { Point } from '../../utils/point';\nimport { PointContainer } from '../../utils/pointContainer';\nimport { AbstractDistanceCalculator } from '../../distance/distanceCalculator';\nimport { AbstractPaletteQuantizer } from '../paletteQuantizer';\nimport { PaletteQuantizerYieldValue } from '../paletteQuantizerYieldValue';\nimport { ProgressTracker } from '../../utils';\n\n// bias for colour values\nconst networkBiasShift = 3;\n\nclass NeuronFloat {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n\n  constructor(defaultValue: number) {\n    this.r = this.g = this.b = this.a = defaultValue;\n  }\n\n  /**\n   * There is a fix in original NEUQUANT by Anthony Dekker (http://members.ozemail.com.au/~dekker/NEUQUANT.HTML)\n   * @example\n   * r = Math.min(255, (neuron.r + (1 << (networkBiasShift - 1))) >> networkBiasShift);\n   */\n  toPoint() {\n    return Point.createByRGBA(\n      this.r >> networkBiasShift,\n      this.g >> networkBiasShift,\n      this.b >> networkBiasShift,\n      this.a >> networkBiasShift,\n    );\n  }\n\n  subtract(r: number, g: number, b: number, a: number) {\n    this.r -= r;\n    this.g -= g;\n    this.b -= b;\n    this.a -= a;\n  }\n}\n\nexport class NeuQuantFloat extends AbstractPaletteQuantizer {\n  /*\n   four primes near 500 - assume no image has a length so large\n   that it is divisible by all four primes\n   */\n  private static readonly _prime1 = 499;\n  private static readonly _prime2 = 491;\n  private static readonly _prime3 = 487;\n  private static readonly _prime4 = 503;\n  private static readonly _minpicturebytes = NeuQuantFloat._prime4;\n\n  // no. of learning cycles\n  private static readonly _nCycles = 100;\n\n  // defs for freq and bias\n  private static readonly _initialBiasShift = 16;\n\n  // bias for fractions\n  private static readonly _initialBias = 1 << NeuQuantFloat._initialBiasShift;\n  private static readonly _gammaShift = 10;\n\n  // gamma = 1024\n  // TODO: why gamma is never used?\n  // private static _gamma : number     = (1 << NeuQuantFloat._gammaShift);\n  private static readonly _betaShift = 10;\n  private static readonly _beta =\n    NeuQuantFloat._initialBias >> NeuQuantFloat._betaShift;\n\n  // beta = 1/1024\n  private static readonly _betaGamma =\n    NeuQuantFloat._initialBias <<\n    (NeuQuantFloat._gammaShift - NeuQuantFloat._betaShift);\n\n  /*\n   * for 256 cols, radius starts\n   */\n  private static readonly _radiusBiasShift = 6;\n\n  // at 32.0 biased by 6 bits\n  private static readonly _radiusBias = 1 << NeuQuantFloat._radiusBiasShift;\n\n  // and decreases by a factor of 1/30 each cycle\n  private static readonly _radiusDecrease = 30;\n\n  /* defs for decreasing alpha factor */\n\n  // alpha starts at 1.0\n  private static readonly _alphaBiasShift = 10;\n\n  // biased by 10 bits\n  private static readonly _initAlpha = 1 << NeuQuantFloat._alphaBiasShift;\n\n  /* radBias and alphaRadBias used for radpower calculation */\n  private static readonly _radBiasShift = 8;\n  private static readonly _radBias = 1 << NeuQuantFloat._radBiasShift;\n  private static readonly _alphaRadBiasShift =\n    NeuQuantFloat._alphaBiasShift + NeuQuantFloat._radBiasShift;\n  private static readonly _alphaRadBias = 1 << NeuQuantFloat._alphaRadBiasShift;\n\n  private _pointArray!: Point[];\n  private readonly _networkSize!: number;\n  private _network!: NeuronFloat[];\n\n  /** sampling factor 1..30 */\n  private readonly _sampleFactor!: number;\n  private _radPower!: number[];\n\n  // bias and freq arrays for learning\n  private _freq!: number[];\n\n  /* for network lookup - really 256 */\n  private _bias!: number[];\n  private readonly _distance: AbstractDistanceCalculator;\n\n  constructor(\n    colorDistanceCalculator: AbstractDistanceCalculator,\n    colors = 256,\n  ) {\n    super();\n    this._distance = colorDistanceCalculator;\n    this._pointArray = [];\n    this._sampleFactor = 1;\n    this._networkSize = colors;\n\n    this._distance.setWhitePoint(\n      255 << networkBiasShift,\n      255 << networkBiasShift,\n      255 << networkBiasShift,\n      255 << networkBiasShift,\n    );\n  }\n\n  sample(pointContainer: PointContainer) {\n    this._pointArray = this._pointArray.concat(pointContainer.getPointArray());\n  }\n\n  *quantize() {\n    this._init();\n    yield* this._learn();\n\n    yield {\n      palette: this._buildPalette(),\n      progress: 100,\n    };\n  }\n\n  private _init() {\n    this._freq = [];\n    this._bias = [];\n    this._radPower = [];\n    this._network = [];\n    for (let i = 0; i < this._networkSize; i++) {\n      this._network[i] = new NeuronFloat(\n        (i << (networkBiasShift + 8)) / this._networkSize,\n      );\n\n      // 1/this._networkSize\n      this._freq[i] = NeuQuantFloat._initialBias / this._networkSize;\n      this._bias[i] = 0;\n    }\n  }\n\n  /**\n   * Main Learning Loop\n   */\n  private *_learn(): IterableIterator<PaletteQuantizerYieldValue> {\n    let sampleFactor = this._sampleFactor;\n\n    const pointsNumber = this._pointArray.length;\n    if (pointsNumber < NeuQuantFloat._minpicturebytes) sampleFactor = 1;\n\n    const alphadec = 30 + (sampleFactor - 1) / 3;\n    const pointsToSample = pointsNumber / sampleFactor;\n\n    let delta = (pointsToSample / NeuQuantFloat._nCycles) | 0;\n    let alpha = NeuQuantFloat._initAlpha;\n    let radius = (this._networkSize >> 3) * NeuQuantFloat._radiusBias;\n\n    let rad = radius >> NeuQuantFloat._radiusBiasShift;\n    if (rad <= 1) rad = 0;\n\n    for (let i = 0; i < rad; i++) {\n      this._radPower[i] =\n        alpha * (((rad * rad - i * i) * NeuQuantFloat._radBias) / (rad * rad));\n    }\n\n    let step;\n    if (pointsNumber < NeuQuantFloat._minpicturebytes) {\n      step = 1;\n    } else if (pointsNumber % NeuQuantFloat._prime1 !== 0) {\n      step = NeuQuantFloat._prime1;\n    } else if (pointsNumber % NeuQuantFloat._prime2 !== 0) {\n      step = NeuQuantFloat._prime2;\n    } else if (pointsNumber % NeuQuantFloat._prime3 !== 0) {\n      step = NeuQuantFloat._prime3;\n    } else {\n      step = NeuQuantFloat._prime4;\n    }\n\n    const tracker = new ProgressTracker(pointsToSample, 99);\n    for (let i = 0, pointIndex = 0; i < pointsToSample; ) {\n      if (tracker.shouldNotify(i)) {\n        yield {\n          progress: tracker.progress,\n        };\n      }\n\n      const point = this._pointArray[pointIndex];\n      const b = point.b << networkBiasShift;\n      const g = point.g << networkBiasShift;\n      const r = point.r << networkBiasShift;\n      const a = point.a << networkBiasShift;\n      const neuronIndex = this._contest(b, g, r, a);\n\n      this._alterSingle(alpha, neuronIndex, b, g, r, a);\n      if (rad !== 0) this._alterNeighbour(rad, neuronIndex, b, g, r, a);\n\n      /* alter neighbours */\n      pointIndex += step;\n      if (pointIndex >= pointsNumber) pointIndex -= pointsNumber;\n      i++;\n\n      if (delta === 0) delta = 1;\n\n      if (i % delta === 0) {\n        alpha -= alpha / alphadec;\n        radius -= radius / NeuQuantFloat._radiusDecrease;\n        rad = radius >> NeuQuantFloat._radiusBiasShift;\n\n        if (rad <= 1) rad = 0;\n        for (let j = 0; j < rad; j++) {\n          this._radPower[j] =\n            alpha *\n            (((rad * rad - j * j) * NeuQuantFloat._radBias) / (rad * rad));\n        }\n      }\n    }\n  }\n\n  private _buildPalette() {\n    const palette = new Palette();\n\n    this._network.forEach(neuron => {\n      palette.add(neuron.toPoint());\n    });\n\n    palette.sort();\n    return palette;\n  }\n\n  /**\n   * Move adjacent neurons by precomputed alpha*(1-((i-j)^2/[r]^2)) in radpower[|i-j|]\n   */\n  private _alterNeighbour(\n    rad: number,\n    i: number,\n    b: number,\n    g: number,\n    r: number,\n    al: number,\n  ) {\n    let lo = i - rad;\n    if (lo < -1) lo = -1;\n\n    let hi = i + rad;\n    if (hi > this._networkSize) hi = this._networkSize;\n\n    let j = i + 1;\n    let k = i - 1;\n    let m = 1;\n\n    while (j < hi || k > lo) {\n      const a = this._radPower[m++] / NeuQuantFloat._alphaRadBias;\n      if (j < hi) {\n        const p = this._network[j++];\n        p.subtract(a * (p.r - r), a * (p.g - g), a * (p.b - b), a * (p.a - al));\n      }\n\n      if (k > lo) {\n        const p = this._network[k--];\n        p.subtract(a * (p.r - r), a * (p.g - g), a * (p.b - b), a * (p.a - al));\n      }\n    }\n  }\n\n  /**\n   * Move neuron i towards biased (b,g,r) by factor alpha\n   */\n  private _alterSingle(\n    alpha: number,\n    i: number,\n    b: number,\n    g: number,\n    r: number,\n    a: number,\n  ) {\n    alpha /= NeuQuantFloat._initAlpha;\n\n    /* alter hit neuron */\n    const n = this._network[i];\n    n.subtract(\n      alpha * (n.r - r),\n      alpha * (n.g - g),\n      alpha * (n.b - b),\n      alpha * (n.a - a),\n    );\n  }\n\n  /**\n   * Search for biased BGR values\n   * description:\n   *    finds closest neuron (min dist) and updates freq\n   *    finds best neuron (min dist-bias) and returns position\n   *    for frequently chosen neurons, freq[i] is high and bias[i] is negative\n   *    bias[i] = _gamma*((1/this._networkSize)-freq[i])\n   *\n   * Original distance equation:\n   *        dist = abs(dR) + abs(dG) + abs(dB)\n   */\n  private _contest(b: number, g: number, r: number, al: number) {\n    const multiplier = (255 * 4) << networkBiasShift;\n\n    let bestd = ~(1 << 31);\n    let bestbiasd = bestd;\n    let bestpos = -1;\n    let bestbiaspos = bestpos;\n\n    for (let i = 0; i < this._networkSize; i++) {\n      const n = this._network[i];\n      const dist =\n        this._distance.calculateNormalized(n, { r, g, b, a: al }) * multiplier;\n\n      if (dist < bestd) {\n        bestd = dist;\n        bestpos = i;\n      }\n\n      const biasdist =\n        dist -\n        (this._bias[i] >> (NeuQuantFloat._initialBiasShift - networkBiasShift));\n      if (biasdist < bestbiasd) {\n        bestbiasd = biasdist;\n        bestbiaspos = i;\n      }\n      const betafreq = this._freq[i] >> NeuQuantFloat._betaShift;\n      this._freq[i] -= betafreq;\n      this._bias[i] += betafreq << NeuQuantFloat._gammaShift;\n    }\n    this._freq[bestpos] += NeuQuantFloat._beta;\n    this._bias[bestpos] -= NeuQuantFloat._betaGamma;\n    return bestbiaspos;\n  }\n}\n","/*\n * Copyright (c) 2015, Leon Sorokin\n * All rights reserved. (MIT Licensed)\n *\n * ColorHistogram.js - an image quantization lib\n */\n\n/**\n * @preserve TypeScript port:\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * colorHistogram.ts - part of Image Quantization Library\n */\nimport { HueStatistics } from '../../utils/hueStatistics';\nimport { PointContainer } from '../../utils/pointContainer';\nimport { stableSort } from '../../utils/arithmetic';\n\ninterface Box {\n  x: number;\n  y: number;\n  h: number;\n  w: number;\n}\n\nexport class ColorHistogram {\n  private static _boxSize = [64, 64];\n  private static _boxPixels = 2;\n  private static _hueGroups = 10;\n\n  // 1 = by global population, 2 = subregion population threshold\n  private _method: number;\n\n  // HueStatistics instance\n  private _hueStats: HueStatistics;\n\n  private _histogram: { [color: string]: number };\n\n  // # of highest-frequency colors to start with for palette reduction\n  private _initColors: number;\n\n  // if > 0, enables hues stats and min-color retention per group\n  private _minHueCols: number;\n\n  constructor(method: number, colors: number) {\n    // 1 = by global population, 2 = subregion population threshold\n    this._method = method;\n\n    // if > 0, enables hues stats and min-color retention per group\n    this._minHueCols = colors << 2; // opts.minHueCols || 0;\n\n    // # of highest-frequency colors to start with for palette reduction\n    this._initColors = colors << 2;\n\n    // HueStatistics instance\n    this._hueStats = new HueStatistics(\n      ColorHistogram._hueGroups,\n      this._minHueCols,\n    );\n\n    this._histogram = Object.create(null); // tslint:disable-line:no-null-keyword\n  }\n\n  sample(pointContainer: PointContainer) {\n    // eslint-disable-next-line default-case\n    switch (this._method) {\n      case 1:\n        this._colorStats1D(pointContainer);\n        break;\n      case 2:\n        this._colorStats2D(pointContainer);\n        break;\n    }\n  }\n\n  getImportanceSortedColorsIDXI32() {\n    // TODO: fix typing issue in stableSort func\n    const sorted = stableSort(\n      Object.keys(this._histogram),\n      (a, b) => this._histogram[b] - this._histogram[a],\n    );\n    if (sorted.length === 0) {\n      return [];\n    }\n\n    let idxi32;\n    switch (this._method) {\n      case 1:\n        const initialColorsLimit = Math.min(sorted.length, this._initColors);\n        const last = sorted[initialColorsLimit - 1];\n        const freq = this._histogram[last];\n\n        idxi32 = sorted.slice(0, initialColorsLimit);\n\n        // add any cut off colors with same freq as last\n        let pos = initialColorsLimit;\n        const len = sorted.length;\n        while (pos < len && this._histogram[sorted[pos]] === freq) {\n          idxi32.push(sorted[pos++]);\n        }\n\n        // inject min huegroup colors\n        this._hueStats.injectIntoArray(idxi32);\n        break;\n\n      case 2:\n        idxi32 = sorted;\n        break;\n\n      default:\n        // TODO: rethink errors\n        throw new Error('Incorrect method');\n    }\n\n    // int32-ify values\n    return idxi32.map(v => +v);\n  }\n\n  // global top-population\n  private _colorStats1D(pointContainer: PointContainer) {\n    const histG = this._histogram;\n    const pointArray = pointContainer.getPointArray();\n    const len = pointArray.length;\n\n    for (let i = 0; i < len; i++) {\n      const col = pointArray[i].uint32;\n\n      // collect hue stats\n      this._hueStats.check(col);\n\n      if (col in histG) {\n        histG[col]++;\n      } else {\n        histG[col] = 1;\n      }\n    }\n  }\n\n  // population threshold within subregions\n  // FIXME: this can over-reduce (few/no colors same?), need a way to keep\n  // important colors that dont ever reach local thresholds (gradients?)\n  private _colorStats2D(pointContainer: PointContainer) {\n    const width = pointContainer.getWidth();\n    const height = pointContainer.getHeight();\n    const pointArray = pointContainer.getPointArray();\n\n    const boxW = ColorHistogram._boxSize[0];\n    const boxH = ColorHistogram._boxSize[1];\n    const area = boxW * boxH;\n    const boxes = this._makeBoxes(width, height, boxW, boxH);\n    const histG = this._histogram;\n\n    boxes.forEach(box => {\n      let effc = Math.round((box.w * box.h) / area) * ColorHistogram._boxPixels;\n      if (effc < 2) effc = 2;\n\n      const histL: Record<string, number> = {};\n      this._iterateBox(box, width, i => {\n        const col = pointArray[i].uint32;\n\n        // collect hue stats\n        this._hueStats.check(col);\n\n        if (col in histG) {\n          histG[col]++;\n        } else if (col in histL) {\n          if (++histL[col] >= effc) {\n            histG[col] = histL[col];\n          }\n        } else {\n          histL[col] = 1;\n        }\n      });\n    });\n\n    // inject min huegroup colors\n    this._hueStats.injectIntoDictionary(histG);\n  }\n\n  // iterates @bbox within a parent rect of width @wid; calls @fn, passing index within parent\n  private _iterateBox(bbox: Box, wid: number, fn: (i: number) => void) {\n    const b = bbox;\n    const i0 = b.y * wid + b.x;\n    const i1 = (b.y + b.h - 1) * wid + (b.x + b.w - 1);\n    const incr = wid - b.w + 1;\n\n    let cnt = 0;\n    let i = i0;\n\n    do {\n      fn.call(this, i);\n      i += ++cnt % b.w === 0 ? incr : 1;\n    } while (i <= i1);\n  }\n\n  /**\n   *    partitions a rectangle of width x height into\n   *    array of boxes stepX x stepY (or less)\n   */\n  private _makeBoxes(\n    width: number,\n    height: number,\n    stepX: number,\n    stepY: number,\n  ) {\n    const wrem = width % stepX;\n    const hrem = height % stepY;\n    const xend = width - wrem;\n    const yend = height - hrem;\n    const boxesArray = [];\n\n    for (let y = 0; y < height; y += stepY) {\n      for (let x = 0; x < width; x += stepX) {\n        boxesArray.push({\n          x,\n          y,\n          w: x === xend ? wrem : stepX,\n          h: y === yend ? hrem : stepY,\n        });\n      }\n    }\n\n    return boxesArray;\n  }\n}\n","/*\n * Copyright (c) 2015, Leon Sorokin\n * All rights reserved. (MIT Licensed)\n *\n * RGBQuant.js - an image quantization lib\n */\n\n/**\n * @preserve TypeScript port:\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * rgbquant.ts - part of Image Quantization Library\n */\n\nimport { Palette } from '../../utils/palette';\nimport { Point } from '../../utils/point';\nimport { PointContainer } from '../../utils/pointContainer';\nimport { AbstractDistanceCalculator } from '../../distance/distanceCalculator';\nimport { ColorHistogram } from './colorHistogram';\nimport { AbstractPaletteQuantizer } from '../paletteQuantizer';\nimport { PaletteQuantizerYieldValue } from '../paletteQuantizerYieldValue';\nimport { stableSort } from '../../utils/arithmetic';\nimport { ProgressTracker } from '../../utils';\n\nclass RemovedColor {\n  readonly index: number;\n  readonly color: Point;\n  readonly distance: number;\n\n  constructor(index: number, color: Point, distance: number) {\n    this.index = index;\n    this.color = color;\n    this.distance = distance;\n  }\n}\n\n// TODO: make input/output image and input/output palettes with instances of class Point only!\nexport class RGBQuant extends AbstractPaletteQuantizer {\n  // desired final palette size\n  private readonly _colors: number;\n\n  // color-distance threshold for initial reduction pass\n  private readonly _initialDistance: number;\n\n  // subsequent passes threshold\n  private readonly _distanceIncrement: number;\n\n  // accumulated histogram\n  private readonly _histogram: ColorHistogram;\n  private readonly _distance: AbstractDistanceCalculator;\n\n  constructor(\n    colorDistanceCalculator: AbstractDistanceCalculator,\n    colors = 256,\n    method = 2,\n  ) {\n    super();\n    this._distance = colorDistanceCalculator;\n    // desired final palette size\n    this._colors = colors;\n\n    // histogram to accumulate\n    this._histogram = new ColorHistogram(method, colors);\n\n    this._initialDistance = 0.01;\n    this._distanceIncrement = 0.005;\n  }\n\n  // gathers histogram info\n  sample(image: PointContainer) {\n    /*\n     var pointArray = image.getPointArray(), max = [0, 0, 0, 0], min = [255, 255, 255, 255];\n\n     for (var i = 0, l = pointArray.length; i < l; i++) {\n     var color = pointArray[i];\n     for (var componentIndex = 0; componentIndex < 4; componentIndex++) {\n     if (max[componentIndex] < color.rgba[componentIndex]) max[componentIndex] = color.rgba[componentIndex];\n     if (min[componentIndex] > color.rgba[componentIndex]) min[componentIndex] = color.rgba[componentIndex];\n     }\n     }\n     var rd = max[0] - min[0], gd = max[1] - min[1], bd = max[2] - min[2], ad = max[3] - min[3];\n     this._distance.setWhitePoint(rd, gd, bd, ad);\n\n     this._initialDistance = (Math.sqrt(rd * rd + gd * gd + bd * bd + ad * ad) / Math.sqrt(255 * 255 + 255 * 255 + 255 * 255)) * 0.01;\n     */\n\n    this._histogram.sample(image);\n  }\n\n  // reduces histogram to palette, remaps & memoizes reduced colors\n  *quantize() {\n    const idxi32 = this._histogram.getImportanceSortedColorsIDXI32();\n    if (idxi32.length === 0) {\n      throw new Error('No colors in image');\n    }\n\n    yield* this._buildPalette(idxi32);\n  }\n\n  // reduces similar colors from an importance-sorted Uint32 rgba array\n  private *_buildPalette(\n    idxi32: number[],\n  ): IterableIterator<PaletteQuantizerYieldValue> {\n    // reduce histogram to create initial palette\n    // build full rgb palette\n    const palette = new Palette();\n    const colorArray = palette.getPointContainer().getPointArray();\n    const usageArray = new Array(idxi32.length); // tslint:disable-line:prefer-array-literal\n\n    for (let i = 0; i < idxi32.length; i++) {\n      colorArray.push(Point.createByUint32(idxi32[i]));\n      usageArray[i] = 1;\n    }\n\n    const len = colorArray.length;\n    const memDist = [];\n\n    let palLen = len;\n    let thold = this._initialDistance;\n\n    // palette already at or below desired length\n    const tracker = new ProgressTracker(palLen - this._colors, 99);\n    while (palLen > this._colors) {\n      memDist.length = 0;\n\n      // iterate palette\n      for (let i = 0; i < len; i++) {\n        if (tracker.shouldNotify(len - palLen)) {\n          yield {\n            progress: tracker.progress,\n          };\n        }\n\n        if (usageArray[i] === 0) continue;\n        const pxi = colorArray[i];\n        // if (!pxi) continue;\n\n        for (let j = i + 1; j < len; j++) {\n          if (usageArray[j] === 0) continue;\n          const pxj = colorArray[j];\n          // if (!pxj) continue;\n\n          const dist = this._distance.calculateNormalized(pxi, pxj);\n          if (dist < thold) {\n            // store index,rgb,dist\n            memDist.push(new RemovedColor(j, pxj, dist));\n            usageArray[j] = 0;\n            palLen--;\n          }\n        }\n      }\n      // palette reduction pass\n      // console.log(\"palette length: \" + palLen);\n\n      // if palette is still much larger than target, increment by larger initDist\n      thold +=\n        palLen > this._colors * 3\n          ? this._initialDistance\n          : this._distanceIncrement;\n    }\n\n    // if palette is over-reduced, re-add removed colors with largest distances from last round\n    if (palLen < this._colors) {\n      // sort descending\n      stableSort(memDist, (a, b) => b.distance - a.distance);\n\n      let k = 0;\n      while (palLen < this._colors && k < memDist.length) {\n        const removedColor = memDist[k];\n        // re-inject rgb into final palette\n        usageArray[removedColor.index] = 1;\n        palLen++;\n        k++;\n      }\n    }\n\n    let colors = colorArray.length;\n    for (let colorIndex = colors - 1; colorIndex >= 0; colorIndex--) {\n      if (usageArray[colorIndex] === 0) {\n        if (colorIndex !== colors - 1) {\n          colorArray[colorIndex] = colorArray[colors - 1];\n        }\n        --colors;\n      }\n    }\n    colorArray.length = colors;\n\n    palette.sort();\n\n    yield {\n      palette,\n      progress: 100,\n    };\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * wuQuant.ts - part of Image Quantization Library\n */\nimport { Palette } from '../../utils/palette';\nimport { Point } from '../../utils/point';\nimport { PointContainer } from '../../utils/pointContainer';\nimport { AbstractDistanceCalculator } from '../../distance/distanceCalculator';\nimport { AbstractPaletteQuantizer } from '../paletteQuantizer';\nimport { PaletteQuantizerYieldValue } from '../paletteQuantizerYieldValue';\nimport { ProgressTracker } from '../../utils';\n\nfunction createArray1D(dimension1: number) {\n  const a = [];\n  for (let k = 0; k < dimension1; k++) {\n    a[k] = 0;\n  }\n  return a;\n}\n\nfunction createArray4D(\n  dimension1: number,\n  dimension2: number,\n  dimension3: number,\n  dimension4: number,\n): number[][][][] {\n  const a = new Array(dimension1);\n  for (let i = 0; i < dimension1; i++) {\n    a[i] = new Array(dimension2);\n    for (let j = 0; j < dimension2; j++) {\n      a[i][j] = new Array(dimension3);\n      for (let k = 0; k < dimension3; k++) {\n        a[i][j][k] = new Array(dimension4);\n        for (let l = 0; l < dimension4; l++) {\n          a[i][j][k][l] = 0;\n        }\n      }\n    }\n  }\n  return a;\n}\n\nfunction createArray3D(\n  dimension1: number,\n  dimension2: number,\n  dimension3: number,\n): number[][][] {\n  const a = new Array(dimension1);\n  for (let i = 0; i < dimension1; i++) {\n    a[i] = new Array(dimension2);\n    for (let j = 0; j < dimension2; j++) {\n      a[i][j] = new Array(dimension3);\n      for (let k = 0; k < dimension3; k++) {\n        a[i][j][k] = 0;\n      }\n    }\n  }\n  return a;\n}\n\nfunction fillArray3D<T>(\n  a: T[][][],\n  dimension1: number,\n  dimension2: number,\n  dimension3: number,\n  value: T,\n) {\n  for (let i = 0; i < dimension1; i++) {\n    a[i] = [];\n    for (let j = 0; j < dimension2; j++) {\n      a[i][j] = [];\n      for (let k = 0; k < dimension3; k++) {\n        a[i][j][k] = value;\n      }\n    }\n  }\n}\n\nfunction fillArray1D<T>(a: T[], dimension1: number, value: T) {\n  for (let i = 0; i < dimension1; i++) {\n    a[i] = value;\n  }\n}\n\nexport class WuColorCube {\n  redMinimum!: number;\n  redMaximum!: number;\n  greenMinimum!: number;\n  greenMaximum!: number;\n  blueMinimum!: number;\n  blueMaximum!: number;\n  volume!: number;\n  alphaMinimum!: number;\n  alphaMaximum!: number;\n}\n\nexport class WuQuant extends AbstractPaletteQuantizer {\n  private static readonly _alpha = 3;\n  private static readonly _red = 2;\n  private static readonly _green = 1;\n  private static readonly _blue = 0;\n\n  private _reds!: number[];\n  private _greens!: number[];\n  private _blues!: number[];\n  private _alphas!: number[];\n  private _sums!: number[];\n\n  private _weights!: number[][][][];\n  private _momentsRed!: number[][][][];\n  private _momentsGreen!: number[][][][];\n  private _momentsBlue!: number[][][][];\n  private _momentsAlpha!: number[][][][];\n  private _moments!: number[][][][];\n  private _table!: number[];\n  private _pixels!: Point[];\n\n  private _cubes!: WuColorCube[];\n  private _colors!: number;\n\n  private _significantBitsPerChannel!: number;\n  private _maxSideIndex!: number;\n  private _alphaMaxSideIndex!: number;\n  private _sideSize!: number;\n  private _alphaSideSize!: number;\n\n  private readonly _distance: AbstractDistanceCalculator;\n\n  constructor(\n    colorDistanceCalculator: AbstractDistanceCalculator,\n    colors = 256,\n    significantBitsPerChannel = 5,\n  ) {\n    super();\n    this._distance = colorDistanceCalculator;\n    this._setQuality(significantBitsPerChannel);\n    this._initialize(colors);\n  }\n\n  sample(image: PointContainer) {\n    const pointArray = image.getPointArray();\n\n    for (let i = 0, l = pointArray.length; i < l; i++) {\n      this._addColor(pointArray[i]);\n    }\n\n    this._pixels = this._pixels.concat(pointArray);\n  }\n\n  *quantize() {\n    yield* this._preparePalette();\n\n    const palette = new Palette();\n\n    // generates palette\n    for (let paletteIndex = 0; paletteIndex < this._colors; paletteIndex++) {\n      if (this._sums[paletteIndex] > 0) {\n        const sum = this._sums[paletteIndex];\n        const r = this._reds[paletteIndex] / sum;\n        const g = this._greens[paletteIndex] / sum;\n        const b = this._blues[paletteIndex] / sum;\n        const a = this._alphas[paletteIndex] / sum;\n\n        const color = Point.createByRGBA(r | 0, g | 0, b | 0, a | 0);\n        palette.add(color);\n      }\n    }\n\n    palette.sort();\n\n    yield {\n      palette,\n      progress: 100,\n    };\n  }\n\n  private *_preparePalette() {\n    // preprocess the colors\n    yield* this._calculateMoments();\n\n    let next = 0;\n    const volumeVariance = createArray1D(this._colors);\n\n    // processes the cubes\n    for (let cubeIndex = 1; cubeIndex < this._colors; ++cubeIndex) {\n      // if cut is possible; make it\n      if (this._cut(this._cubes[next], this._cubes[cubeIndex])) {\n        volumeVariance[next] =\n          this._cubes[next].volume > 1\n            ? this._calculateVariance(this._cubes[next])\n            : 0.0;\n        volumeVariance[cubeIndex] =\n          this._cubes[cubeIndex].volume > 1\n            ? this._calculateVariance(this._cubes[cubeIndex])\n            : 0.0;\n      } else {\n        // the cut was not possible, revert the index\n        volumeVariance[next] = 0.0;\n        cubeIndex--;\n      }\n\n      next = 0;\n      let temp = volumeVariance[0];\n\n      for (let index = 1; index <= cubeIndex; ++index) {\n        if (volumeVariance[index] > temp) {\n          temp = volumeVariance[index];\n          next = index;\n        }\n      }\n\n      if (temp <= 0.0) {\n        this._colors = cubeIndex + 1;\n        break;\n      }\n    }\n\n    const lookupRed = [];\n    const lookupGreen = [];\n    const lookupBlue = [];\n    const lookupAlpha = [];\n\n    // precalculates lookup tables\n    for (let k = 0; k < this._colors; ++k) {\n      const weight = WuQuant._volume(this._cubes[k], this._weights);\n\n      if (weight > 0) {\n        lookupRed[k] =\n          (WuQuant._volume(this._cubes[k], this._momentsRed) / weight) | 0;\n        lookupGreen[k] =\n          (WuQuant._volume(this._cubes[k], this._momentsGreen) / weight) | 0;\n        lookupBlue[k] =\n          (WuQuant._volume(this._cubes[k], this._momentsBlue) / weight) | 0;\n        lookupAlpha[k] =\n          (WuQuant._volume(this._cubes[k], this._momentsAlpha) / weight) | 0;\n      } else {\n        lookupRed[k] = 0;\n        lookupGreen[k] = 0;\n        lookupBlue[k] = 0;\n        lookupAlpha[k] = 0;\n      }\n    }\n\n    this._reds = createArray1D(this._colors + 1);\n    this._greens = createArray1D(this._colors + 1);\n    this._blues = createArray1D(this._colors + 1);\n    this._alphas = createArray1D(this._colors + 1);\n    this._sums = createArray1D(this._colors + 1);\n\n    // scans and adds colors\n    for (let index = 0, l = this._pixels.length; index < l; index++) {\n      const color = this._pixels[index];\n\n      const match = -1;\n\n      let bestMatch = match;\n      let bestDistance = Number.MAX_VALUE;\n\n      for (let lookup = 0; lookup < this._colors; lookup++) {\n        const foundRed = lookupRed[lookup];\n        const foundGreen = lookupGreen[lookup];\n        const foundBlue = lookupBlue[lookup];\n        const foundAlpha = lookupAlpha[lookup];\n\n        const distance = this._distance.calculateRaw(\n          foundRed,\n          foundGreen,\n          foundBlue,\n          foundAlpha,\n          color.r,\n          color.g,\n          color.b,\n          color.a,\n        );\n\n        if (distance < bestDistance) {\n          bestDistance = distance;\n          bestMatch = lookup;\n        }\n      }\n\n      this._reds[bestMatch] += color.r;\n      this._greens[bestMatch] += color.g;\n      this._blues[bestMatch] += color.b;\n      this._alphas[bestMatch] += color.a;\n      this._sums[bestMatch]++;\n    }\n  }\n\n  private _addColor(color: Point) {\n    const bitsToRemove = 8 - this._significantBitsPerChannel;\n    const indexRed = (color.r >> bitsToRemove) + 1;\n    const indexGreen = (color.g >> bitsToRemove) + 1;\n    const indexBlue = (color.b >> bitsToRemove) + 1;\n    const indexAlpha = (color.a >> bitsToRemove) + 1;\n\n    // if(color.a > 10) {\n    this._weights[indexAlpha][indexRed][indexGreen][indexBlue]++;\n    this._momentsRed[indexAlpha][indexRed][indexGreen][indexBlue] += color.r;\n    this._momentsGreen[indexAlpha][indexRed][indexGreen][indexBlue] += color.g;\n    this._momentsBlue[indexAlpha][indexRed][indexGreen][indexBlue] += color.b;\n    this._momentsAlpha[indexAlpha][indexRed][indexGreen][indexBlue] += color.a;\n    this._moments[indexAlpha][indexRed][indexGreen][indexBlue] +=\n      this._table[color.r] +\n      this._table[color.g] +\n      this._table[color.b] +\n      this._table[color.a];\n    // }\n  }\n\n  /**\n   * Converts the histogram to a series of _moments.\n   */\n  private *_calculateMoments(): IterableIterator<PaletteQuantizerYieldValue> {\n    const area: number[] = [];\n    const areaRed: number[] = [];\n    const areaGreen: number[] = [];\n    const areaBlue: number[] = [];\n    const areaAlpha: number[] = [];\n    const area2: number[] = [];\n\n    const xarea = createArray3D(this._sideSize, this._sideSize, this._sideSize);\n    const xareaRed = createArray3D(\n      this._sideSize,\n      this._sideSize,\n      this._sideSize,\n    );\n    const xareaGreen = createArray3D(\n      this._sideSize,\n      this._sideSize,\n      this._sideSize,\n    );\n    const xareaBlue = createArray3D(\n      this._sideSize,\n      this._sideSize,\n      this._sideSize,\n    );\n    const xareaAlpha = createArray3D(\n      this._sideSize,\n      this._sideSize,\n      this._sideSize,\n    );\n    const xarea2 = createArray3D(\n      this._sideSize,\n      this._sideSize,\n      this._sideSize,\n    );\n\n    let trackerProgress = 0;\n    const tracker = new ProgressTracker(\n      this._alphaMaxSideIndex * this._maxSideIndex,\n      99,\n    );\n\n    for (\n      let alphaIndex = 1;\n      alphaIndex <= this._alphaMaxSideIndex;\n      ++alphaIndex\n    ) {\n      fillArray3D<number>(\n        xarea,\n        this._sideSize,\n        this._sideSize,\n        this._sideSize,\n        0,\n      );\n      fillArray3D<number>(\n        xareaRed,\n        this._sideSize,\n        this._sideSize,\n        this._sideSize,\n        0,\n      );\n      fillArray3D<number>(\n        xareaGreen,\n        this._sideSize,\n        this._sideSize,\n        this._sideSize,\n        0,\n      );\n      fillArray3D<number>(\n        xareaBlue,\n        this._sideSize,\n        this._sideSize,\n        this._sideSize,\n        0,\n      );\n      fillArray3D<number>(\n        xareaAlpha,\n        this._sideSize,\n        this._sideSize,\n        this._sideSize,\n        0,\n      );\n      fillArray3D<number>(\n        xarea2,\n        this._sideSize,\n        this._sideSize,\n        this._sideSize,\n        0,\n      );\n\n      for (\n        let redIndex = 1;\n        redIndex <= this._maxSideIndex;\n        ++redIndex, ++trackerProgress\n      ) {\n        if (tracker.shouldNotify(trackerProgress)) {\n          yield {\n            progress: tracker.progress,\n          };\n        }\n\n        fillArray1D<number>(area, this._sideSize, 0);\n        fillArray1D<number>(areaRed, this._sideSize, 0);\n        fillArray1D<number>(areaGreen, this._sideSize, 0);\n        fillArray1D<number>(areaBlue, this._sideSize, 0);\n        fillArray1D<number>(areaAlpha, this._sideSize, 0);\n        fillArray1D<number>(area2, this._sideSize, 0);\n\n        for (\n          let greenIndex = 1;\n          greenIndex <= this._maxSideIndex;\n          ++greenIndex\n        ) {\n          let line = 0;\n          let lineRed = 0;\n          let lineGreen = 0;\n          let lineBlue = 0;\n          let lineAlpha = 0;\n          let line2 = 0.0;\n\n          for (\n            let blueIndex = 1;\n            blueIndex <= this._maxSideIndex;\n            ++blueIndex\n          ) {\n            line += this._weights[alphaIndex][redIndex][greenIndex][blueIndex];\n            lineRed += this._momentsRed[alphaIndex][redIndex][greenIndex][\n              blueIndex\n            ];\n            lineGreen += this._momentsGreen[alphaIndex][redIndex][greenIndex][\n              blueIndex\n            ];\n            lineBlue += this._momentsBlue[alphaIndex][redIndex][greenIndex][\n              blueIndex\n            ];\n            lineAlpha += this._momentsAlpha[alphaIndex][redIndex][greenIndex][\n              blueIndex\n            ];\n            line2 += this._moments[alphaIndex][redIndex][greenIndex][blueIndex];\n\n            area[blueIndex] += line;\n            areaRed[blueIndex] += lineRed;\n            areaGreen[blueIndex] += lineGreen;\n            areaBlue[blueIndex] += lineBlue;\n            areaAlpha[blueIndex] += lineAlpha;\n            area2[blueIndex] += line2;\n\n            xarea[redIndex][greenIndex][blueIndex] =\n              xarea[redIndex - 1][greenIndex][blueIndex] + area[blueIndex];\n            xareaRed[redIndex][greenIndex][blueIndex] =\n              xareaRed[redIndex - 1][greenIndex][blueIndex] +\n              areaRed[blueIndex];\n            xareaGreen[redIndex][greenIndex][blueIndex] =\n              xareaGreen[redIndex - 1][greenIndex][blueIndex] +\n              areaGreen[blueIndex];\n            xareaBlue[redIndex][greenIndex][blueIndex] =\n              xareaBlue[redIndex - 1][greenIndex][blueIndex] +\n              areaBlue[blueIndex];\n            xareaAlpha[redIndex][greenIndex][blueIndex] =\n              xareaAlpha[redIndex - 1][greenIndex][blueIndex] +\n              areaAlpha[blueIndex];\n            xarea2[redIndex][greenIndex][blueIndex] =\n              xarea2[redIndex - 1][greenIndex][blueIndex] + area2[blueIndex];\n\n            this._weights[alphaIndex][redIndex][greenIndex][blueIndex] =\n              this._weights[alphaIndex - 1][redIndex][greenIndex][blueIndex] +\n              xarea[redIndex][greenIndex][blueIndex];\n            this._momentsRed[alphaIndex][redIndex][greenIndex][blueIndex] =\n              this._momentsRed[alphaIndex - 1][redIndex][greenIndex][\n                blueIndex\n              ] + xareaRed[redIndex][greenIndex][blueIndex];\n            this._momentsGreen[alphaIndex][redIndex][greenIndex][blueIndex] =\n              this._momentsGreen[alphaIndex - 1][redIndex][greenIndex][\n                blueIndex\n              ] + xareaGreen[redIndex][greenIndex][blueIndex];\n            this._momentsBlue[alphaIndex][redIndex][greenIndex][blueIndex] =\n              this._momentsBlue[alphaIndex - 1][redIndex][greenIndex][\n                blueIndex\n              ] + xareaBlue[redIndex][greenIndex][blueIndex];\n            this._momentsAlpha[alphaIndex][redIndex][greenIndex][blueIndex] =\n              this._momentsAlpha[alphaIndex - 1][redIndex][greenIndex][\n                blueIndex\n              ] + xareaAlpha[redIndex][greenIndex][blueIndex];\n            this._moments[alphaIndex][redIndex][greenIndex][blueIndex] =\n              this._moments[alphaIndex - 1][redIndex][greenIndex][blueIndex] +\n              xarea2[redIndex][greenIndex][blueIndex];\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Computes the volume of the cube in a specific moment.\n   */\n  private static _volumeFloat(cube: WuColorCube, moment: number[][][][]) {\n    return (\n      moment[cube.alphaMaximum][cube.redMaximum][cube.greenMaximum][\n        cube.blueMaximum\n      ] -\n      moment[cube.alphaMaximum][cube.redMaximum][cube.greenMinimum][\n        cube.blueMaximum\n      ] -\n      moment[cube.alphaMaximum][cube.redMinimum][cube.greenMaximum][\n        cube.blueMaximum\n      ] +\n      moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][\n        cube.blueMaximum\n      ] -\n      moment[cube.alphaMinimum][cube.redMaximum][cube.greenMaximum][\n        cube.blueMaximum\n      ] +\n      moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][\n        cube.blueMaximum\n      ] +\n      moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][\n        cube.blueMaximum\n      ] -\n      moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][\n        cube.blueMaximum\n      ] -\n      (moment[cube.alphaMaximum][cube.redMaximum][cube.greenMaximum][\n        cube.blueMinimum\n      ] -\n        moment[cube.alphaMinimum][cube.redMaximum][cube.greenMaximum][\n          cube.blueMinimum\n        ] -\n        moment[cube.alphaMaximum][cube.redMaximum][cube.greenMinimum][\n          cube.blueMinimum\n        ] +\n        moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][\n          cube.blueMinimum\n        ] -\n        moment[cube.alphaMaximum][cube.redMinimum][cube.greenMaximum][\n          cube.blueMinimum\n        ] +\n        moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][\n          cube.blueMinimum\n        ] +\n        moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][\n          cube.blueMinimum\n        ] -\n        moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][\n          cube.blueMinimum\n        ])\n    );\n  }\n\n  /**\n   * Computes the volume of the cube in a specific moment.\n   */\n  private static _volume(cube: WuColorCube, moment: number[][][][]) {\n    return WuQuant._volumeFloat(cube, moment) | 0;\n  }\n\n  /**\n   * Splits the cube in given position][and color direction.\n   */\n  private static _top(\n    cube: WuColorCube,\n    direction: number,\n    position: number,\n    moment: number[][][][],\n  ) {\n    let result;\n    switch (direction) {\n      case WuQuant._alpha:\n        result =\n          moment[position][cube.redMaximum][cube.greenMaximum][\n            cube.blueMaximum\n          ] -\n          moment[position][cube.redMaximum][cube.greenMinimum][\n            cube.blueMaximum\n          ] -\n          moment[position][cube.redMinimum][cube.greenMaximum][\n            cube.blueMaximum\n          ] +\n          moment[position][cube.redMinimum][cube.greenMinimum][\n            cube.blueMaximum\n          ] -\n          (moment[position][cube.redMaximum][cube.greenMaximum][\n            cube.blueMinimum\n          ] -\n            moment[position][cube.redMaximum][cube.greenMinimum][\n              cube.blueMinimum\n            ] -\n            moment[position][cube.redMinimum][cube.greenMaximum][\n              cube.blueMinimum\n            ] +\n            moment[position][cube.redMinimum][cube.greenMinimum][\n              cube.blueMinimum\n            ]);\n        break;\n\n      case WuQuant._red:\n        result =\n          moment[cube.alphaMaximum][position][cube.greenMaximum][\n            cube.blueMaximum\n          ] -\n          moment[cube.alphaMaximum][position][cube.greenMinimum][\n            cube.blueMaximum\n          ] -\n          moment[cube.alphaMinimum][position][cube.greenMaximum][\n            cube.blueMaximum\n          ] +\n          moment[cube.alphaMinimum][position][cube.greenMinimum][\n            cube.blueMaximum\n          ] -\n          (moment[cube.alphaMaximum][position][cube.greenMaximum][\n            cube.blueMinimum\n          ] -\n            moment[cube.alphaMaximum][position][cube.greenMinimum][\n              cube.blueMinimum\n            ] -\n            moment[cube.alphaMinimum][position][cube.greenMaximum][\n              cube.blueMinimum\n            ] +\n            moment[cube.alphaMinimum][position][cube.greenMinimum][\n              cube.blueMinimum\n            ]);\n        break;\n\n      case WuQuant._green:\n        result =\n          moment[cube.alphaMaximum][cube.redMaximum][position][\n            cube.blueMaximum\n          ] -\n          moment[cube.alphaMaximum][cube.redMinimum][position][\n            cube.blueMaximum\n          ] -\n          moment[cube.alphaMinimum][cube.redMaximum][position][\n            cube.blueMaximum\n          ] +\n          moment[cube.alphaMinimum][cube.redMinimum][position][\n            cube.blueMaximum\n          ] -\n          (moment[cube.alphaMaximum][cube.redMaximum][position][\n            cube.blueMinimum\n          ] -\n            moment[cube.alphaMaximum][cube.redMinimum][position][\n              cube.blueMinimum\n            ] -\n            moment[cube.alphaMinimum][cube.redMaximum][position][\n              cube.blueMinimum\n            ] +\n            moment[cube.alphaMinimum][cube.redMinimum][position][\n              cube.blueMinimum\n            ]);\n        break;\n\n      case WuQuant._blue:\n        result =\n          moment[cube.alphaMaximum][cube.redMaximum][cube.greenMaximum][\n            position\n          ] -\n          moment[cube.alphaMaximum][cube.redMaximum][cube.greenMinimum][\n            position\n          ] -\n          moment[cube.alphaMaximum][cube.redMinimum][cube.greenMaximum][\n            position\n          ] +\n          moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][\n            position\n          ] -\n          (moment[cube.alphaMinimum][cube.redMaximum][cube.greenMaximum][\n            position\n          ] -\n            moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][\n              position\n            ] -\n            moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][\n              position\n            ] +\n            moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][\n              position\n            ]);\n        break;\n      default:\n        throw new Error('impossible');\n    }\n\n    return result | 0;\n  }\n\n  /**\n   * Splits the cube in a given color direction at its minimum.\n   */\n  private static _bottom(\n    cube: WuColorCube,\n    direction: number,\n    moment: number[][][][],\n  ) {\n    switch (direction) {\n      case WuQuant._alpha:\n        return (\n          -moment[cube.alphaMinimum][cube.redMaximum][cube.greenMaximum][\n            cube.blueMaximum\n          ] +\n          moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][\n            cube.blueMaximum\n          ] +\n          moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][\n            cube.blueMaximum\n          ] -\n          moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][\n            cube.blueMaximum\n          ] -\n          (-moment[cube.alphaMinimum][cube.redMaximum][cube.greenMaximum][\n            cube.blueMinimum\n          ] +\n            moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][\n              cube.blueMinimum\n            ] +\n            moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][\n              cube.blueMinimum\n            ] -\n            moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][\n              cube.blueMinimum\n            ])\n        );\n\n      case WuQuant._red:\n        return (\n          -moment[cube.alphaMaximum][cube.redMinimum][cube.greenMaximum][\n            cube.blueMaximum\n          ] +\n          moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][\n            cube.blueMaximum\n          ] +\n          moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][\n            cube.blueMaximum\n          ] -\n          moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][\n            cube.blueMaximum\n          ] -\n          (-moment[cube.alphaMaximum][cube.redMinimum][cube.greenMaximum][\n            cube.blueMinimum\n          ] +\n            moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][\n              cube.blueMinimum\n            ] +\n            moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][\n              cube.blueMinimum\n            ] -\n            moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][\n              cube.blueMinimum\n            ])\n        );\n\n      case WuQuant._green:\n        return (\n          -moment[cube.alphaMaximum][cube.redMaximum][cube.greenMinimum][\n            cube.blueMaximum\n          ] +\n          moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][\n            cube.blueMaximum\n          ] +\n          moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][\n            cube.blueMaximum\n          ] -\n          moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][\n            cube.blueMaximum\n          ] -\n          (-moment[cube.alphaMaximum][cube.redMaximum][cube.greenMinimum][\n            cube.blueMinimum\n          ] +\n            moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][\n              cube.blueMinimum\n            ] +\n            moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][\n              cube.blueMinimum\n            ] -\n            moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][\n              cube.blueMinimum\n            ])\n        );\n\n      case WuQuant._blue:\n        return (\n          -moment[cube.alphaMaximum][cube.redMaximum][cube.greenMaximum][\n            cube.blueMinimum\n          ] +\n          moment[cube.alphaMaximum][cube.redMaximum][cube.greenMinimum][\n            cube.blueMinimum\n          ] +\n          moment[cube.alphaMaximum][cube.redMinimum][cube.greenMaximum][\n            cube.blueMinimum\n          ] -\n          moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][\n            cube.blueMinimum\n          ] -\n          (-moment[cube.alphaMinimum][cube.redMaximum][cube.greenMaximum][\n            cube.blueMinimum\n          ] +\n            moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][\n              cube.blueMinimum\n            ] +\n            moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][\n              cube.blueMinimum\n            ] -\n            moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][\n              cube.blueMinimum\n            ])\n        );\n\n      default:\n        // TODO: why here is return 0, and in this._top there is no default at all (now it is throw error)?\n        return 0;\n    }\n  }\n\n  /**\n   * Calculates statistical variance for a given cube.\n   */\n  private _calculateVariance(cube: WuColorCube) {\n    const volumeRed = WuQuant._volume(cube, this._momentsRed);\n    const volumeGreen = WuQuant._volume(cube, this._momentsGreen);\n    const volumeBlue = WuQuant._volume(cube, this._momentsBlue);\n    const volumeAlpha = WuQuant._volume(cube, this._momentsAlpha);\n    const volumeMoment = WuQuant._volumeFloat(cube, this._moments);\n    const volumeWeight = WuQuant._volume(cube, this._weights);\n    const distance =\n      volumeRed * volumeRed +\n      volumeGreen * volumeGreen +\n      volumeBlue * volumeBlue +\n      volumeAlpha * volumeAlpha;\n\n    return volumeMoment - distance / volumeWeight;\n  }\n\n  /**\n   * Finds the optimal (maximal) position for the cut.\n   */\n  private _maximize(\n    cube: WuColorCube,\n    direction: number,\n    first: number,\n    last: number,\n    wholeRed: number,\n    wholeGreen: number,\n    wholeBlue: number,\n    wholeAlpha: number,\n    wholeWeight: number,\n  ) {\n    const bottomRed = WuQuant._bottom(cube, direction, this._momentsRed) | 0;\n    const bottomGreen =\n      WuQuant._bottom(cube, direction, this._momentsGreen) | 0;\n    const bottomBlue = WuQuant._bottom(cube, direction, this._momentsBlue) | 0;\n    const bottomAlpha =\n      WuQuant._bottom(cube, direction, this._momentsAlpha) | 0;\n    const bottomWeight = WuQuant._bottom(cube, direction, this._weights) | 0;\n\n    let result = 0.0;\n    let cutPosition = -1;\n\n    for (let position = first; position < last; ++position) {\n      // determines the cube cut at a certain position\n      let halfRed =\n        bottomRed + WuQuant._top(cube, direction, position, this._momentsRed);\n      let halfGreen =\n        bottomGreen +\n        WuQuant._top(cube, direction, position, this._momentsGreen);\n      let halfBlue =\n        bottomBlue + WuQuant._top(cube, direction, position, this._momentsBlue);\n      let halfAlpha =\n        bottomAlpha +\n        WuQuant._top(cube, direction, position, this._momentsAlpha);\n      let halfWeight =\n        bottomWeight + WuQuant._top(cube, direction, position, this._weights);\n\n      // the cube cannot be cut at bottom (this would lead to empty cube)\n      if (halfWeight !== 0) {\n        let halfDistance =\n          halfRed * halfRed +\n          halfGreen * halfGreen +\n          halfBlue * halfBlue +\n          halfAlpha * halfAlpha;\n        let temp = halfDistance / halfWeight;\n\n        halfRed = wholeRed - halfRed;\n        halfGreen = wholeGreen - halfGreen;\n        halfBlue = wholeBlue - halfBlue;\n        halfAlpha = wholeAlpha - halfAlpha;\n        halfWeight = wholeWeight - halfWeight;\n\n        if (halfWeight !== 0) {\n          halfDistance =\n            halfRed * halfRed +\n            halfGreen * halfGreen +\n            halfBlue * halfBlue +\n            halfAlpha * halfAlpha;\n          temp += halfDistance / halfWeight;\n\n          if (temp > result) {\n            result = temp;\n            cutPosition = position;\n          }\n        }\n      }\n    }\n\n    return { max: result, position: cutPosition };\n  }\n\n  // Cuts a cube with another one.\n  private _cut(first: WuColorCube, second: WuColorCube) {\n    let direction;\n\n    const wholeRed = WuQuant._volume(first, this._momentsRed);\n    const wholeGreen = WuQuant._volume(first, this._momentsGreen);\n    const wholeBlue = WuQuant._volume(first, this._momentsBlue);\n    const wholeAlpha = WuQuant._volume(first, this._momentsAlpha);\n    const wholeWeight = WuQuant._volume(first, this._weights);\n\n    const red = this._maximize(\n      first,\n      WuQuant._red,\n      first.redMinimum + 1,\n      first.redMaximum,\n      wholeRed,\n      wholeGreen,\n      wholeBlue,\n      wholeAlpha,\n      wholeWeight,\n    );\n    const green = this._maximize(\n      first,\n      WuQuant._green,\n      first.greenMinimum + 1,\n      first.greenMaximum,\n      wholeRed,\n      wholeGreen,\n      wholeBlue,\n      wholeAlpha,\n      wholeWeight,\n    );\n    const blue = this._maximize(\n      first,\n      WuQuant._blue,\n      first.blueMinimum + 1,\n      first.blueMaximum,\n      wholeRed,\n      wholeGreen,\n      wholeBlue,\n      wholeAlpha,\n      wholeWeight,\n    );\n    const alpha = this._maximize(\n      first,\n      WuQuant._alpha,\n      first.alphaMinimum + 1,\n      first.alphaMaximum,\n      wholeRed,\n      wholeGreen,\n      wholeBlue,\n      wholeAlpha,\n      wholeWeight,\n    );\n\n    if (\n      alpha.max >= red.max &&\n      alpha.max >= green.max &&\n      alpha.max >= blue.max\n    ) {\n      direction = WuQuant._alpha;\n\n      // cannot split empty cube\n      if (alpha.position < 0) return false;\n    } else if (\n      red.max >= alpha.max &&\n      red.max >= green.max &&\n      red.max >= blue.max\n    ) {\n      direction = WuQuant._red;\n    } else if (\n      green.max >= alpha.max &&\n      green.max >= red.max &&\n      green.max >= blue.max\n    ) {\n      direction = WuQuant._green;\n    } else {\n      direction = WuQuant._blue;\n    }\n\n    second.redMaximum = first.redMaximum;\n    second.greenMaximum = first.greenMaximum;\n    second.blueMaximum = first.blueMaximum;\n    second.alphaMaximum = first.alphaMaximum;\n\n    // cuts in a certain direction\n    // eslint-disable-next-line default-case\n    switch (direction) {\n      case WuQuant._red:\n        second.redMinimum = first.redMaximum = red.position;\n        second.greenMinimum = first.greenMinimum;\n        second.blueMinimum = first.blueMinimum;\n        second.alphaMinimum = first.alphaMinimum;\n        break;\n\n      case WuQuant._green:\n        second.greenMinimum = first.greenMaximum = green.position;\n        second.redMinimum = first.redMinimum;\n        second.blueMinimum = first.blueMinimum;\n        second.alphaMinimum = first.alphaMinimum;\n        break;\n\n      case WuQuant._blue:\n        second.blueMinimum = first.blueMaximum = blue.position;\n        second.redMinimum = first.redMinimum;\n        second.greenMinimum = first.greenMinimum;\n        second.alphaMinimum = first.alphaMinimum;\n        break;\n\n      case WuQuant._alpha:\n        second.alphaMinimum = first.alphaMaximum = alpha.position;\n        second.blueMinimum = first.blueMinimum;\n        second.redMinimum = first.redMinimum;\n        second.greenMinimum = first.greenMinimum;\n        break;\n    }\n\n    // determines the volumes after cut\n    first.volume =\n      (first.redMaximum - first.redMinimum) *\n      (first.greenMaximum - first.greenMinimum) *\n      (first.blueMaximum - first.blueMinimum) *\n      (first.alphaMaximum - first.alphaMinimum);\n    second.volume =\n      (second.redMaximum - second.redMinimum) *\n      (second.greenMaximum - second.greenMinimum) *\n      (second.blueMaximum - second.blueMinimum) *\n      (second.alphaMaximum - second.alphaMinimum);\n\n    // the cut was successful\n    return true;\n  }\n\n  private _initialize(colors: number) {\n    this._colors = colors;\n\n    // creates all the _cubes\n    this._cubes = [];\n\n    // initializes all the _cubes\n    for (let cubeIndex = 0; cubeIndex < colors; cubeIndex++) {\n      this._cubes[cubeIndex] = new WuColorCube();\n    }\n\n    // resets the reference minimums\n    this._cubes[0].redMinimum = 0;\n    this._cubes[0].greenMinimum = 0;\n    this._cubes[0].blueMinimum = 0;\n    this._cubes[0].alphaMinimum = 0;\n\n    // resets the reference maximums\n    this._cubes[0].redMaximum = this._maxSideIndex;\n    this._cubes[0].greenMaximum = this._maxSideIndex;\n    this._cubes[0].blueMaximum = this._maxSideIndex;\n    this._cubes[0].alphaMaximum = this._alphaMaxSideIndex;\n\n    this._weights = createArray4D(\n      this._alphaSideSize,\n      this._sideSize,\n      this._sideSize,\n      this._sideSize,\n    );\n    this._momentsRed = createArray4D(\n      this._alphaSideSize,\n      this._sideSize,\n      this._sideSize,\n      this._sideSize,\n    );\n    this._momentsGreen = createArray4D(\n      this._alphaSideSize,\n      this._sideSize,\n      this._sideSize,\n      this._sideSize,\n    );\n    this._momentsBlue = createArray4D(\n      this._alphaSideSize,\n      this._sideSize,\n      this._sideSize,\n      this._sideSize,\n    );\n    this._momentsAlpha = createArray4D(\n      this._alphaSideSize,\n      this._sideSize,\n      this._sideSize,\n      this._sideSize,\n    );\n    this._moments = createArray4D(\n      this._alphaSideSize,\n      this._sideSize,\n      this._sideSize,\n      this._sideSize,\n    );\n\n    this._table = [];\n    for (let tableIndex = 0; tableIndex < 256; ++tableIndex) {\n      this._table[tableIndex] = tableIndex * tableIndex;\n    }\n\n    this._pixels = [];\n  }\n\n  private _setQuality(significantBitsPerChannel = 5) {\n    this._significantBitsPerChannel = significantBitsPerChannel;\n    this._maxSideIndex = 1 << this._significantBitsPerChannel;\n    this._alphaMaxSideIndex = this._maxSideIndex;\n\n    this._sideSize = this._maxSideIndex + 1;\n    this._alphaSideSize = this._alphaMaxSideIndex + 1;\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * iq.ts - Image Quantization Library\n */\nexport { AbstractPaletteQuantizer } from './paletteQuantizer';\nexport { NeuQuant } from './neuquant/neuquant';\nexport { NeuQuantFloat } from './neuquant/neuquantFloat';\nexport { RGBQuant } from './rgbquant/rgbquant';\nexport { ColorHistogram } from './rgbquant/colorHistogram';\nexport { WuQuant, WuColorCube } from './wu/wuQuant';\nexport { PaletteQuantizerYieldValue } from './paletteQuantizerYieldValue';\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * common.ts - part of Image Quantization Library\n */\nimport { PointContainer } from '../utils/pointContainer';\nimport { Palette } from '../utils/palette';\nimport { ImageQuantizerYieldValue } from './imageQuantizerYieldValue';\n\nexport abstract class AbstractImageQuantizer {\n  abstract quantize(\n    pointContainer: PointContainer,\n    palette: Palette,\n  ): IterableIterator<ImageQuantizerYieldValue>;\n\n  quantizeSync(pointContainer: PointContainer, palette: Palette) {\n    for (const value of this.quantize(pointContainer, palette)) {\n      if (value.pointContainer) {\n        return value.pointContainer;\n      }\n    }\n\n    throw new Error('unreachable');\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * nearestColor.ts - part of Image Quantization Library\n */\nimport { AbstractImageQuantizer } from './imageQuantizer';\nimport { AbstractDistanceCalculator } from '../distance/distanceCalculator';\nimport { PointContainer } from '../utils/pointContainer';\nimport { Palette } from '../utils/palette';\nimport { ImageQuantizerYieldValue } from './imageQuantizerYieldValue';\nimport { ProgressTracker } from '../utils/progressTracker';\n\nexport class NearestColor extends AbstractImageQuantizer {\n  private _distance: AbstractDistanceCalculator;\n\n  constructor(colorDistanceCalculator: AbstractDistanceCalculator) {\n    super();\n    this._distance = colorDistanceCalculator;\n  }\n\n  /**\n   * Mutates pointContainer\n   */\n  *quantize(\n    pointContainer: PointContainer,\n    palette: Palette,\n  ): IterableIterator<ImageQuantizerYieldValue> {\n    const pointArray = pointContainer.getPointArray();\n    const width = pointContainer.getWidth();\n    const height = pointContainer.getHeight();\n\n    const tracker = new ProgressTracker(height, 99);\n    for (let y = 0; y < height; y++) {\n      if (tracker.shouldNotify(y)) {\n        yield {\n          progress: tracker.progress,\n        };\n      }\n      for (let x = 0, idx = y * width; x < width; x++, idx++) {\n        // Image pixel\n        const point = pointArray[idx];\n        // Reduced pixel\n        point.from(palette.getNearestColor(this._distance, point));\n      }\n    }\n\n    yield {\n      pointContainer,\n      progress: 100,\n    };\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * ditherErrorDiffusionArray.ts - part of Image Quantization Library\n */\nimport { AbstractImageQuantizer } from './imageQuantizer';\nimport { AbstractDistanceCalculator } from '../distance/distanceCalculator';\nimport { PointContainer } from '../utils/pointContainer';\nimport { Palette } from '../utils/palette';\nimport { Point } from '../utils/point';\nimport { inRange0to255Rounded } from '../utils/arithmetic';\nimport { ImageQuantizerYieldValue } from './imageQuantizerYieldValue';\nimport { ProgressTracker } from '../utils/progressTracker';\n\n// TODO: is it the best name for this enum \"kernel\"?\nexport enum ErrorDiffusionArrayKernel {\n  FloydSteinberg = 0,\n  FalseFloydSteinberg,\n  Stucki,\n  Atkinson,\n  Jarvis,\n  Burkes,\n  Sierra,\n  TwoSierra,\n  SierraLite,\n}\n\n// http://www.tannerhelland.com/4660/dithering-eleven-algorithms-source-code/\nexport class ErrorDiffusionArray extends AbstractImageQuantizer {\n  private _minColorDistance: number;\n  private _serpentine: boolean;\n  private _kernel!: number[][];\n  /** true = GIMP, false = XNVIEW */\n  private _calculateErrorLikeGIMP: boolean;\n\n  private _distance: AbstractDistanceCalculator;\n\n  constructor(\n    colorDistanceCalculator: AbstractDistanceCalculator,\n    kernel: ErrorDiffusionArrayKernel,\n    serpentine = true,\n    minimumColorDistanceToDither = 0,\n    calculateErrorLikeGIMP = false,\n  ) {\n    super();\n    this._setKernel(kernel);\n\n    this._distance = colorDistanceCalculator;\n    this._minColorDistance = minimumColorDistanceToDither;\n    this._serpentine = serpentine;\n    this._calculateErrorLikeGIMP = calculateErrorLikeGIMP;\n  }\n\n  /**\n   * adapted from http://jsbin.com/iXofIji/2/edit by PAEz\n   * fixed version. it doesn't use image pixels as error storage, also it doesn't have 0.3 + 0.3 + 0.3 + 0.3 = 0 error\n   * Mutates pointContainer\n   */\n  *quantize(\n    pointContainer: PointContainer,\n    palette: Palette,\n  ): IterableIterator<ImageQuantizerYieldValue> {\n    const pointArray = pointContainer.getPointArray();\n    const originalPoint = new Point();\n    const width = pointContainer.getWidth();\n    const height = pointContainer.getHeight();\n    const errorLines: number[][][] = [];\n\n    let dir = 1;\n    let maxErrorLines = 1;\n\n    // initial error lines (number is taken from dithering kernel)\n    for (const kernel of this._kernel) {\n      const kernelErrorLines = kernel[2] + 1;\n      if (maxErrorLines < kernelErrorLines) maxErrorLines = kernelErrorLines;\n    }\n    for (let i = 0; i < maxErrorLines; i++) {\n      this._fillErrorLine((errorLines[i] = []), width);\n    }\n\n    const tracker = new ProgressTracker(height, 99);\n    for (let y = 0; y < height; y++) {\n      if (tracker.shouldNotify(y)) {\n        yield {\n          progress: tracker.progress,\n        };\n      }\n\n      // always serpentine\n      if (this._serpentine) dir *= -1;\n\n      const lni = y * width;\n      const xStart = dir === 1 ? 0 : width - 1;\n      const xEnd = dir === 1 ? width : -1;\n\n      // cyclic shift with erasing\n      this._fillErrorLine(errorLines[0], width);\n      // TODO: why it is needed to cast types here?\n      errorLines.push(errorLines.shift() as number[][]);\n\n      const errorLine = errorLines[0];\n      for (\n        let x = xStart, idx = lni + xStart;\n        x !== xEnd;\n        x += dir, idx += dir\n      ) {\n        // Image pixel\n        const point = pointArray[idx];\n        // originalPoint = new Utils.Point(),\n        const error = errorLine[x];\n\n        originalPoint.from(point);\n\n        const correctedPoint = Point.createByRGBA(\n          inRange0to255Rounded(point.r + error[0]),\n          inRange0to255Rounded(point.g + error[1]),\n          inRange0to255Rounded(point.b + error[2]),\n          inRange0to255Rounded(point.a + error[3]),\n        );\n\n        // Reduced pixel\n        const palettePoint = palette.getNearestColor(\n          this._distance,\n          correctedPoint,\n        );\n        point.from(palettePoint);\n\n        // dithering strength\n        if (this._minColorDistance) {\n          const dist = this._distance.calculateNormalized(point, palettePoint);\n          if (dist < this._minColorDistance) continue;\n        }\n\n        // Component distance\n        let er;\n        let eg;\n        let eb;\n        let ea;\n        if (this._calculateErrorLikeGIMP) {\n          er = correctedPoint.r - palettePoint.r;\n          eg = correctedPoint.g - palettePoint.g;\n          eb = correctedPoint.b - palettePoint.b;\n          ea = correctedPoint.a - palettePoint.a;\n        } else {\n          er = originalPoint.r - palettePoint.r;\n          eg = originalPoint.g - palettePoint.g;\n          eb = originalPoint.b - palettePoint.b;\n          ea = originalPoint.a - palettePoint.a;\n        }\n\n        const dStart = dir === 1 ? 0 : this._kernel.length - 1;\n        const dEnd = dir === 1 ? this._kernel.length : -1;\n\n        for (let i = dStart; i !== dEnd; i += dir) {\n          const x1 = this._kernel[i][1] * dir;\n          const y1 = this._kernel[i][2];\n\n          if (x1 + x >= 0 && x1 + x < width && y1 + y >= 0 && y1 + y < height) {\n            const d = this._kernel[i][0];\n            const e = errorLines[y1][x1 + x];\n\n            e[0] += er * d;\n            e[1] += eg * d;\n            e[2] += eb * d;\n            e[3] += ea * d;\n          }\n        }\n      }\n    }\n\n    yield {\n      pointContainer,\n      progress: 100,\n    };\n  }\n\n  private _fillErrorLine(errorLine: number[][], width: number) {\n    // shrink\n    if (errorLine.length > width) {\n      errorLine.length = width;\n    }\n\n    // reuse existing arrays\n    const l = errorLine.length;\n    for (let i = 0; i < l; i++) {\n      const error = errorLine[i];\n      error[0] = error[1] = error[2] = error[3] = 0;\n    }\n\n    // create missing arrays\n    for (let i = l; i < width; i++) {\n      errorLine[i] = [0.0, 0.0, 0.0, 0.0];\n    }\n  }\n\n  private _setKernel(kernel: ErrorDiffusionArrayKernel) {\n    switch (kernel) {\n      case ErrorDiffusionArrayKernel.FloydSteinberg:\n        this._kernel = [\n          [7 / 16, 1, 0],\n          [3 / 16, -1, 1],\n          [5 / 16, 0, 1],\n          [1 / 16, 1, 1],\n        ];\n        break;\n\n      case ErrorDiffusionArrayKernel.FalseFloydSteinberg:\n        this._kernel = [[3 / 8, 1, 0], [3 / 8, 0, 1], [2 / 8, 1, 1]];\n        break;\n\n      case ErrorDiffusionArrayKernel.Stucki:\n        this._kernel = [\n          [8 / 42, 1, 0],\n          [4 / 42, 2, 0],\n          [2 / 42, -2, 1],\n          [4 / 42, -1, 1],\n          [8 / 42, 0, 1],\n          [4 / 42, 1, 1],\n          [2 / 42, 2, 1],\n          [1 / 42, -2, 2],\n          [2 / 42, -1, 2],\n          [4 / 42, 0, 2],\n          [2 / 42, 1, 2],\n          [1 / 42, 2, 2],\n        ];\n        break;\n\n      case ErrorDiffusionArrayKernel.Atkinson:\n        this._kernel = [\n          [1 / 8, 1, 0],\n          [1 / 8, 2, 0],\n          [1 / 8, -1, 1],\n          [1 / 8, 0, 1],\n          [1 / 8, 1, 1],\n          [1 / 8, 0, 2],\n        ];\n        break;\n\n      case ErrorDiffusionArrayKernel.Jarvis:\n        this._kernel = [\n          // Jarvis, Judice, and Ninke / JJN?\n          [7 / 48, 1, 0],\n          [5 / 48, 2, 0],\n          [3 / 48, -2, 1],\n          [5 / 48, -1, 1],\n          [7 / 48, 0, 1],\n          [5 / 48, 1, 1],\n          [3 / 48, 2, 1],\n          [1 / 48, -2, 2],\n          [3 / 48, -1, 2],\n          [5 / 48, 0, 2],\n          [3 / 48, 1, 2],\n          [1 / 48, 2, 2],\n        ];\n        break;\n\n      case ErrorDiffusionArrayKernel.Burkes:\n        this._kernel = [\n          [8 / 32, 1, 0],\n          [4 / 32, 2, 0],\n          [2 / 32, -2, 1],\n          [4 / 32, -1, 1],\n          [8 / 32, 0, 1],\n          [4 / 32, 1, 1],\n          [2 / 32, 2, 1],\n        ];\n        break;\n\n      case ErrorDiffusionArrayKernel.Sierra:\n        this._kernel = [\n          [5 / 32, 1, 0],\n          [3 / 32, 2, 0],\n          [2 / 32, -2, 1],\n          [4 / 32, -1, 1],\n          [5 / 32, 0, 1],\n          [4 / 32, 1, 1],\n          [2 / 32, 2, 1],\n          [2 / 32, -1, 2],\n          [3 / 32, 0, 2],\n          [2 / 32, 1, 2],\n        ];\n        break;\n\n      case ErrorDiffusionArrayKernel.TwoSierra:\n        this._kernel = [\n          [4 / 16, 1, 0],\n          [3 / 16, 2, 0],\n          [1 / 16, -2, 1],\n          [2 / 16, -1, 1],\n          [3 / 16, 0, 1],\n          [2 / 16, 1, 1],\n          [1 / 16, 2, 1],\n        ];\n        break;\n\n      case ErrorDiffusionArrayKernel.SierraLite:\n        this._kernel = [[2 / 4, 1, 0], [1 / 4, -1, 1], [1 / 4, 0, 1]];\n        break;\n\n      default:\n        throw new Error(`ErrorDiffusionArray: unknown kernel = ${kernel}`);\n    }\n  }\n}\n","import { ProgressTracker } from '../../utils/progressTracker';\nimport { ImageQuantizerYieldValue } from '../imageQuantizerYieldValue';\n\nenum Direction {\n  NONE = 0,\n  UP,\n  LEFT,\n  RIGHT,\n  DOWN,\n}\n\ninterface Data {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  level: number;\n  index: number;\n  tracker: ProgressTracker;\n  callback(x: number, y: number): void;\n}\n\nexport function* hilbertCurve(\n  width: number,\n  height: number,\n  callback: (x: number, y: number) => void,\n) {\n  const maxBound = Math.max(width, height);\n  const level = Math.floor(Math.log(maxBound) / Math.log(2) + 1);\n  const tracker = new ProgressTracker(width * height, 99);\n  const data = {\n    width,\n    height,\n    level,\n    callback,\n    tracker,\n    index: 0,\n    x: 0,\n    y: 0,\n  };\n  yield* walkHilbert(data, Direction.UP);\n  visit(data, Direction.NONE);\n}\n\nfunction* walkHilbert(\n  data: Data,\n  direction: Direction,\n): IterableIterator<ImageQuantizerYieldValue> {\n  if (data.level < 1) return;\n\n  if (data.tracker.shouldNotify(data.index)) {\n    yield { progress: data.tracker.progress };\n  }\n  data.level--;\n  switch (direction) {\n    case Direction.LEFT:\n      yield* walkHilbert(data, Direction.UP);\n      visit(data, Direction.RIGHT);\n      yield* walkHilbert(data, Direction.LEFT);\n      visit(data, Direction.DOWN);\n      yield* walkHilbert(data, Direction.LEFT);\n      visit(data, Direction.LEFT);\n      yield* walkHilbert(data, Direction.DOWN);\n      break;\n\n    case Direction.RIGHT:\n      yield* walkHilbert(data, Direction.DOWN);\n      visit(data, Direction.LEFT);\n      yield* walkHilbert(data, Direction.RIGHT);\n      visit(data, Direction.UP);\n      yield* walkHilbert(data, Direction.RIGHT);\n      visit(data, Direction.RIGHT);\n      yield* walkHilbert(data, Direction.UP);\n      break;\n\n    case Direction.UP:\n      yield* walkHilbert(data, Direction.LEFT);\n      visit(data, Direction.DOWN);\n      yield* walkHilbert(data, Direction.UP);\n      visit(data, Direction.RIGHT);\n      yield* walkHilbert(data, Direction.UP);\n      visit(data, Direction.UP);\n      yield* walkHilbert(data, Direction.RIGHT);\n      break;\n\n    case Direction.DOWN:\n      yield* walkHilbert(data, Direction.RIGHT);\n      visit(data, Direction.UP);\n      yield* walkHilbert(data, Direction.DOWN);\n      visit(data, Direction.LEFT);\n      yield* walkHilbert(data, Direction.DOWN);\n      visit(data, Direction.DOWN);\n      yield* walkHilbert(data, Direction.LEFT);\n      break;\n\n    default:\n      break;\n  }\n  data.level++;\n}\n\nfunction visit(data: Data, direction: Direction) {\n  if (\n    data.x >= 0 &&\n    data.x < data.width &&\n    data.y >= 0 &&\n    data.y < data.height\n  ) {\n    data.callback(data.x, data.y);\n    data.index++;\n  }\n  // eslint-disable-next-line default-case\n  switch (direction) {\n    case Direction.LEFT:\n      data.x--;\n      break;\n    case Direction.RIGHT:\n      data.x++;\n      break;\n    case Direction.UP:\n      data.y--;\n      break;\n    case Direction.DOWN:\n      data.y++;\n      break;\n  }\n}\n","/**\n * @preserve\n * MIT License\n *\n * Copyright 2015-2018 Igor Bezkrovnyi\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n * riemersma.ts - part of Image Quantization Library\n */\nimport { AbstractImageQuantizer } from './imageQuantizer';\nimport { hilbertCurve } from './spaceFillingCurves/hilbertCurve';\nimport { AbstractDistanceCalculator } from '../distance/distanceCalculator';\nimport { PointContainer } from '../utils/pointContainer';\nimport { Palette } from '../utils/palette';\nimport { Point } from '../utils/point';\nimport { inRange0to255Rounded } from '../utils/arithmetic';\n\nexport class ErrorDiffusionRiemersma extends AbstractImageQuantizer {\n  private _distance: AbstractDistanceCalculator;\n  private _weights: number[];\n  private _errorQueueSize: number;\n\n  constructor(\n    colorDistanceCalculator: AbstractDistanceCalculator,\n    errorQueueSize = 16,\n    errorPropagation = 1,\n  ) {\n    super();\n    this._distance = colorDistanceCalculator;\n    this._errorQueueSize = errorQueueSize;\n    this._weights = ErrorDiffusionRiemersma._createWeights(\n      errorPropagation,\n      errorQueueSize,\n    );\n  }\n\n  /**\n   * Mutates pointContainer\n   */\n  *quantize(pointContainer: PointContainer, palette: Palette) {\n    const pointArray = pointContainer.getPointArray();\n    const width = pointContainer.getWidth();\n    const height = pointContainer.getHeight();\n    const errorQueue: Array<{\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    }> = [];\n\n    let head = 0;\n\n    for (let i = 0; i < this._errorQueueSize; i++) {\n      errorQueue[i] = { r: 0, g: 0, b: 0, a: 0 };\n    }\n\n    yield* hilbertCurve(width, height, (x, y) => {\n      const p = pointArray[x + y * width];\n      let { r, g, b, a } = p;\n      for (let i = 0; i < this._errorQueueSize; i++) {\n        const weight = this._weights[i];\n        const e = errorQueue[(i + head) % this._errorQueueSize];\n\n        r += e.r * weight;\n        g += e.g * weight;\n        b += e.b * weight;\n        a += e.a * weight;\n      }\n\n      const correctedPoint = Point.createByRGBA(\n        inRange0to255Rounded(r),\n        inRange0to255Rounded(g),\n        inRange0to255Rounded(b),\n        inRange0to255Rounded(a),\n      );\n\n      const quantizedPoint = palette.getNearestColor(\n        this._distance,\n        correctedPoint,\n      );\n\n      // update head and calculate tail\n      head = (head + 1) % this._errorQueueSize;\n      const tail = (head + this._errorQueueSize - 1) % this._errorQueueSize;\n\n      // update error with new value\n      errorQueue[tail].r = p.r - quantizedPoint.r;\n      errorQueue[tail].g = p.g - quantizedPoint.g;\n      errorQueue[tail].b = p.b - quantizedPoint.b;\n      errorQueue[tail].a = p.a - quantizedPoint.a;\n\n      // update point\n      p.from(quantizedPoint);\n    });\n\n    yield {\n      pointContainer,\n      progress: 100,\n    };\n  }\n\n  private static _createWeights(\n    errorPropagation: number,\n    errorQueueSize: number,\n  ) {\n    const weights = [];\n\n    const multiplier = Math.exp(\n      Math.log(errorQueueSize) / (errorQueueSize - 1),\n    );\n    for (let i = 0, next = 1; i < errorQueueSize; i++) {\n      weights[i] = (((next + 0.5) | 0) / errorQueueSize) * errorPropagation;\n      next *= multiplier;\n    }\n\n    return weights;\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * iq.ts - Image Quantization Library\n */\n\nexport { AbstractImageQuantizer } from './imageQuantizer';\nexport { ImageQuantizerYieldValue } from './imageQuantizerYieldValue';\nexport { NearestColor } from './nearestColor';\nexport { ErrorDiffusionArray, ErrorDiffusionArrayKernel } from './array';\nexport { ErrorDiffusionRiemersma } from './riemersma';\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * ssim.ts - part of Image Quantization Library\n */\nimport { PointContainer } from '../utils/pointContainer';\nimport { Y } from '../constants/bt709';\n\n// based on https://github.com/rhys-e/structural-similarity\n// http://en.wikipedia.org/wiki/Structural_similarity\nconst K1 = 0.01; // tslint:disable-line:naming-convention\nconst K2 = 0.03; // tslint:disable-line:naming-convention\n\nexport function ssim(image1: PointContainer, image2: PointContainer) {\n  if (\n    image1.getHeight() !== image2.getHeight() ||\n    image1.getWidth() !== image2.getWidth()\n  ) {\n    throw new Error('Images have different sizes!');\n  }\n\n  const bitsPerComponent = 8;\n  const L = (1 << bitsPerComponent) - 1; // tslint:disable-line:naming-convention\n  const c1 = (K1 * L) ** 2;\n  const c2 = (K2 * L) ** 2;\n\n  let numWindows = 0;\n  let mssim = 0.0;\n\n  // calculate ssim for each window\n  iterate(\n    image1,\n    image2,\n    (lumaValues1, lumaValues2, averageLumaValue1, averageLumaValue2) => {\n      // calculate variance and covariance\n      let sigxy = 0.0;\n      let sigsqx = 0.0;\n      let sigsqy = 0.0;\n\n      for (let i = 0; i < lumaValues1.length; i++) {\n        sigsqx += (lumaValues1[i] - averageLumaValue1) ** 2;\n        sigsqy += (lumaValues2[i] - averageLumaValue2) ** 2;\n\n        sigxy +=\n          (lumaValues1[i] - averageLumaValue1) *\n          (lumaValues2[i] - averageLumaValue2);\n      }\n\n      const numPixelsInWin = lumaValues1.length - 1;\n      sigsqx /= numPixelsInWin;\n      sigsqy /= numPixelsInWin;\n      sigxy /= numPixelsInWin;\n\n      // perform ssim calculation on window\n      const numerator =\n        (2 * averageLumaValue1 * averageLumaValue2 + c1) * (2 * sigxy + c2);\n      const denominator =\n        (averageLumaValue1 ** 2 + averageLumaValue2 ** 2 + c1) *\n        (sigsqx + sigsqy + c2);\n      const ssim = numerator / denominator;\n\n      mssim += ssim;\n      numWindows++;\n    },\n  );\n  return mssim / numWindows;\n}\n\nfunction iterate(\n  image1: PointContainer,\n  image2: PointContainer,\n  callback: (\n    lumaValues1: number[],\n    lumaValues2: number[],\n    averageLumaValue1: number,\n    averageLumaValue2: number,\n  ) => void,\n) {\n  const windowSize = 8;\n  const width = image1.getWidth();\n  const height = image1.getHeight();\n\n  for (let y = 0; y < height; y += windowSize) {\n    for (let x = 0; x < width; x += windowSize) {\n      // avoid out-of-width/height\n      const windowWidth = Math.min(windowSize, width - x);\n      const windowHeight = Math.min(windowSize, height - y);\n\n      const lumaValues1 = calculateLumaValuesForWindow(\n        image1,\n        x,\n        y,\n        windowWidth,\n        windowHeight,\n      );\n      const lumaValues2 = calculateLumaValuesForWindow(\n        image2,\n        x,\n        y,\n        windowWidth,\n        windowHeight,\n      );\n      const averageLuma1 = calculateAverageLuma(lumaValues1);\n      const averageLuma2 = calculateAverageLuma(lumaValues2);\n\n      callback(lumaValues1, lumaValues2, averageLuma1, averageLuma2);\n    }\n  }\n}\n\nfunction calculateLumaValuesForWindow(\n  image: PointContainer,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n) {\n  const pointArray = image.getPointArray();\n  const lumaValues = [];\n\n  let counter = 0;\n\n  for (let j = y; j < y + height; j++) {\n    const offset = j * image.getWidth();\n    for (let i = x; i < x + width; i++) {\n      const point = pointArray[offset + i];\n      lumaValues[counter] =\n        point.r * Y.RED + point.g * Y.GREEN + point.b * Y.BLUE;\n      counter++;\n    }\n  }\n\n  return lumaValues;\n}\n\nfunction calculateAverageLuma(lumaValues: number[]) {\n  let sumLuma = 0.0;\n  for (const luma of lumaValues) {\n    sumLuma += luma;\n  }\n\n  return sumLuma / lumaValues.length;\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * iq.ts - Image Quantization Library\n */\nexport { ssim } from './ssim';\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * helper.ts - part of Image Quantization Library\n */\nimport 'setimmediate';\nimport * as distance from './distance';\nimport * as image from './image';\nimport * as palette from './palette';\nimport { AbstractDistanceCalculator } from './distance/distanceCalculator';\nimport { PointContainer } from './utils/pointContainer';\nimport { Palette } from './utils/palette';\n\nexport type ColorDistanceFormula =\n  | 'cie94-textiles'\n  | 'cie94-graphic-arts'\n  | 'ciede2000'\n  | 'color-metric'\n  | 'euclidean'\n  | 'euclidean-bt709-noalpha'\n  | 'euclidean-bt709'\n  | 'manhattan'\n  | 'manhattan-bt709'\n  | 'manhattan-nommyde'\n  | 'pngquant';\n\nexport type PaletteQuantization =\n  | 'neuquant'\n  | 'neuquant-float'\n  | 'rgbquant'\n  | 'wuquant';\n\nexport type ImageQuantization =\n  | 'nearest'\n  | 'riemersma'\n  | 'floyd-steinberg'\n  | 'false-floyd-steinberg'\n  | 'stucki'\n  | 'atkinson'\n  | 'jarvis'\n  | 'burkes'\n  | 'sierra'\n  | 'two-sierra'\n  | 'sierra-lite';\n\nexport interface ProgressOptions {\n  onProgress?: (progress: number) => void;\n}\n\nexport interface ApplyPaletteOptions {\n  colorDistanceFormula?: ColorDistanceFormula;\n  imageQuantization?: ImageQuantization;\n}\n\nexport interface BuildPaletteOptions {\n  colorDistanceFormula?: ColorDistanceFormula;\n  paletteQuantization?: PaletteQuantization;\n  colors?: number;\n}\n\nexport function buildPaletteSync(\n  images: PointContainer[],\n  {\n    colorDistanceFormula,\n    paletteQuantization,\n    colors,\n  }: BuildPaletteOptions = {},\n) {\n  const distanceCalculator = colorDistanceFormulaToColorDistance(\n    colorDistanceFormula,\n  );\n  const paletteQuantizer = paletteQuantizationToPaletteQuantizer(\n    distanceCalculator,\n    paletteQuantization,\n    colors,\n  );\n  images.forEach(image => paletteQuantizer.sample(image));\n  return paletteQuantizer.quantizeSync();\n}\n\nexport async function buildPalette(\n  images: PointContainer[],\n  {\n    colorDistanceFormula,\n    paletteQuantization,\n    colors,\n    onProgress,\n  }: BuildPaletteOptions & ProgressOptions = {},\n) {\n  return new Promise<Palette>((resolve, reject) => {\n    const distanceCalculator = colorDistanceFormulaToColorDistance(\n      colorDistanceFormula,\n    );\n    const paletteQuantizer = paletteQuantizationToPaletteQuantizer(\n      distanceCalculator,\n      paletteQuantization,\n      colors,\n    );\n    images.forEach(image => paletteQuantizer.sample(image));\n\n    let palette: Palette;\n    let timerId: number;\n    const iterator = paletteQuantizer.quantize();\n    const next = () => {\n      try {\n        const result = iterator.next();\n        if (result.done) {\n          resolve(palette);\n        } else {\n          if (result.value.palette) palette = result.value.palette;\n          if (onProgress) onProgress(result.value.progress);\n          timerId = setImmediate(next);\n        }\n      } catch (error) {\n        clearTimeout(timerId);\n        reject(error);\n      }\n    };\n    timerId = setImmediate(next);\n  });\n}\n\nexport function applyPaletteSync(\n  image: PointContainer,\n  palette: Palette,\n  { colorDistanceFormula, imageQuantization }: ApplyPaletteOptions = {},\n) {\n  const distanceCalculator = colorDistanceFormulaToColorDistance(\n    colorDistanceFormula,\n  );\n  const imageQuantizer = imageQuantizationToImageQuantizer(\n    distanceCalculator,\n    imageQuantization,\n  );\n  return imageQuantizer.quantizeSync(image, palette);\n}\n\nexport async function applyPalette(\n  image: PointContainer,\n  palette: Palette,\n  {\n    colorDistanceFormula,\n    imageQuantization,\n    onProgress,\n  }: ApplyPaletteOptions & ProgressOptions = {},\n) {\n  return new Promise<PointContainer>((resolve, reject) => {\n    const distanceCalculator = colorDistanceFormulaToColorDistance(\n      colorDistanceFormula,\n    );\n    const imageQuantizer = imageQuantizationToImageQuantizer(\n      distanceCalculator,\n      imageQuantization,\n    );\n\n    let outPointContainer: PointContainer;\n    let timerId: number;\n    const iterator = imageQuantizer.quantize(image, palette);\n    const next = () => {\n      try {\n        const result = iterator.next();\n        if (result.done) {\n          resolve(outPointContainer);\n        } else {\n          if (result.value.pointContainer) {\n            outPointContainer = result.value.pointContainer;\n          }\n          if (onProgress) onProgress(result.value.progress);\n          timerId = setImmediate(next);\n        }\n      } catch (error) {\n        clearTimeout(timerId);\n        reject(error);\n      }\n    };\n    timerId = setImmediate(next);\n  });\n}\n\nfunction colorDistanceFormulaToColorDistance(\n  colorDistanceFormula: ColorDistanceFormula = 'euclidean-bt709',\n) {\n  switch (colorDistanceFormula) {\n    case 'cie94-graphic-arts':\n      return new distance.CIE94GraphicArts();\n    case 'cie94-textiles':\n      return new distance.CIE94Textiles();\n    case 'ciede2000':\n      return new distance.CIEDE2000();\n    case 'color-metric':\n      return new distance.CMetric();\n    case 'euclidean':\n      return new distance.Euclidean();\n    case 'euclidean-bt709':\n      return new distance.EuclideanBT709();\n    case 'euclidean-bt709-noalpha':\n      return new distance.EuclideanBT709NoAlpha();\n    case 'manhattan':\n      return new distance.Manhattan();\n    case 'manhattan-bt709':\n      return new distance.ManhattanBT709();\n    case 'manhattan-nommyde':\n      return new distance.ManhattanNommyde();\n    case 'pngquant':\n      return new distance.PNGQuant();\n    default:\n      throw new Error(`Unknown colorDistanceFormula ${colorDistanceFormula}`);\n  }\n}\n\nfunction imageQuantizationToImageQuantizer(\n  distanceCalculator: AbstractDistanceCalculator,\n  imageQuantization: ImageQuantization = 'floyd-steinberg',\n) {\n  switch (imageQuantization) {\n    case 'nearest':\n      return new image.NearestColor(distanceCalculator);\n    case 'riemersma':\n      return new image.ErrorDiffusionRiemersma(distanceCalculator);\n    case 'floyd-steinberg':\n      return new image.ErrorDiffusionArray(\n        distanceCalculator,\n        image.ErrorDiffusionArrayKernel.FloydSteinberg,\n      );\n    case 'false-floyd-steinberg':\n      return new image.ErrorDiffusionArray(\n        distanceCalculator,\n        image.ErrorDiffusionArrayKernel.FalseFloydSteinberg,\n      );\n    case 'stucki':\n      return new image.ErrorDiffusionArray(\n        distanceCalculator,\n        image.ErrorDiffusionArrayKernel.Stucki,\n      );\n    case 'atkinson':\n      return new image.ErrorDiffusionArray(\n        distanceCalculator,\n        image.ErrorDiffusionArrayKernel.Atkinson,\n      );\n    case 'jarvis':\n      return new image.ErrorDiffusionArray(\n        distanceCalculator,\n        image.ErrorDiffusionArrayKernel.Jarvis,\n      );\n    case 'burkes':\n      return new image.ErrorDiffusionArray(\n        distanceCalculator,\n        image.ErrorDiffusionArrayKernel.Burkes,\n      );\n    case 'sierra':\n      return new image.ErrorDiffusionArray(\n        distanceCalculator,\n        image.ErrorDiffusionArrayKernel.Sierra,\n      );\n    case 'two-sierra':\n      return new image.ErrorDiffusionArray(\n        distanceCalculator,\n        image.ErrorDiffusionArrayKernel.TwoSierra,\n      );\n    case 'sierra-lite':\n      return new image.ErrorDiffusionArray(\n        distanceCalculator,\n        image.ErrorDiffusionArrayKernel.SierraLite,\n      );\n    default:\n      throw new Error(`Unknown imageQuantization ${imageQuantization}`);\n  }\n}\n\nfunction paletteQuantizationToPaletteQuantizer(\n  distanceCalculator: AbstractDistanceCalculator,\n  paletteQuantization: PaletteQuantization = 'wuquant',\n  colors = 256,\n) {\n  switch (paletteQuantization) {\n    case 'neuquant':\n      return new palette.NeuQuant(distanceCalculator, colors);\n    case 'rgbquant':\n      return new palette.RGBQuant(distanceCalculator, colors);\n    case 'wuquant':\n      return new palette.WuQuant(distanceCalculator, colors);\n    case 'neuquant-float':\n      return new palette.NeuQuantFloat(distanceCalculator, colors);\n    default:\n      throw new Error(`Unknown paletteQuantization ${paletteQuantization}`);\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * iq.ts - Image Quantization Library\n */\nimport * as constants from './constants';\nimport * as conversion from './conversion';\nimport * as distance from './distance';\nimport * as palette from './palette';\nimport * as image from './image';\nimport * as quality from './quality';\nimport * as utils from './utils';\n\nexport {\n  buildPalette,\n  buildPaletteSync,\n  applyPalette,\n  applyPaletteSync,\n  ImageQuantization,\n  PaletteQuantization,\n  ColorDistanceFormula,\n} from './basicAPI';\n\nexport { constants, conversion, distance, palette, image, quality, utils };\n","import { createCanvas, loadImage, Image } from 'canvas';\nimport path from 'path';\nimport { ImageMode, OutputMode } from './enums';\nimport round from 'locutus/php/math/round';\nimport dechex from 'locutus/php/math/dechex';\nimport str_pad from 'locutus/php/strings/str_pad';\nimport count from 'locutus/php/array/count';\nimport { buildPalette, utils, applyPalette, distance, image } from './image-q/image-q';\n\ninterface ConverterOptions {\n    dith: boolean;\n    cf: ImageMode;\n    outputFormat: OutputMode;\n    binaryFormat: ImageMode;\n    swapEndian: boolean;\n    outName: string;\n}\nclass Converter {\n    dith = false;      /*Dithering enable/disable*/\n    w = 0;         /*Image width*/\n    h = 0;         /*Image height*/\n    raw_len = 0; /* RAW image data size */\n    cf: ImageMode;        /*Color format*/\n    outputFormat: OutputMode;\n    alpha = false;     /*Add alpha byte or not*/\n    chroma = false;    /*Chroma keyed?*/\n    d_out: Array<number>;     /*Output data (result)*/\n    imageData: Array<number>|Uint8Array; /* Input image data */\n    swapEndian = false; /* Whether to swap endian or not */\n    options: ConverterOptions;\n\n    /*Helper variables*/\n    r_act: number;\n    b_act: number;\n    g_act: number;\n\n    /*For dithering*/\n    r_earr: Array<number>;  /*Classification error for next row of pixels*/\n    g_earr: Array<number>;\n    b_earr: Array<number>;\n\n    r_nerr: number;  /*Classification error for next pixel*/\n    g_nerr: number;\n    b_nerr: number;\n\n\n    constructor(w: number, h: number, imageData, alpha: boolean, options: Partial<ConverterOptions>) {\n        this.dith = options.dith;\n        this.w = w;\n        this.h = h;\n        this.imageData = imageData;\n        this.r_earr = [];  /*Classification error for next row of pixels*/\n        this.g_earr = [];\n        this.b_earr = [];\n\n        if(this.dith) {\n            for(var i = 0; i < this.w + 2; ++i){\n                this.r_earr[i] = 0;\n                this.g_earr[i] = 0;\n                this.b_earr[i] = 0;\n            }\n        }\n\n        this.r_nerr = 0;  /*Classification error for next pixel*/\n        this.g_nerr = 0;\n        this.b_nerr = 0;\n        this.cf = options.cf;\n        this.alpha = alpha;\n        this.swapEndian = options.swapEndian;\n        this.outputFormat = options.outputFormat;\n        this.options = options as ConverterOptions;\n    }\n\n    async convert(): Promise<string|ArrayBuffer> {\n        if(this.cf == ImageMode.CF_RAW || this.cf == ImageMode.CF_RAW_ALPHA) {\n            const d_array = Array.from((this.imageData as Uint8Array));\n            this.raw_len = d_array.length;\n            let str = \"\\n    \" + d_array.map((val, i) => \"0x\" + str_pad(dechex(val), 2, '0', 'STR_PAD_LEFT') + ((i % 13) == 12 ? \", \\n    \" : \", \")).join(\"\");\n            str = str.substr(0, str.length-2);\n            return str + \"\\n\";\n        }\n        var palette_size = 0, bits_per_value = 0;\n        if(this.cf == ImageMode.CF_INDEXED_1_BIT) {\n            palette_size = 2;\n            bits_per_value = 1;\n        } else if(this.cf == ImageMode.CF_INDEXED_2_BIT) {\n            palette_size = 4;\n            bits_per_value = 2;\n        } else if(this.cf == ImageMode.CF_INDEXED_4_BIT) {\n            palette_size = 16;\n            bits_per_value = 4;\n        } else if(this.cf == ImageMode.CF_INDEXED_8_BIT) {\n            palette_size = 256;\n            bits_per_value = 8;\n        }\n        this.d_out = [];\n\n        if(palette_size) {\n            const pointContainer = utils.PointContainer.fromUint8Array(this.imageData, this.w, this.h);\n            const palette = await buildPalette([pointContainer], {\n                colors: palette_size, // optional\n            });\n            const color_arr = this.d_out;\n            const palettePointArray = palette.getPointContainer().getPointArray();\n            const paletteColors = palettePointArray.map((point) => {\n                return point.uint32;\n            });\n            for(var i = 0; i < palette_size; i++) {\n                if(i < palettePointArray.length) {\n                    color_arr.push(palettePointArray[i].b, palettePointArray[i].g, palettePointArray[i].r, palettePointArray[i].a);\n                } else {\n                    color_arr.push(0, 0, 0, 0);\n                }\n            }\n\n            const outPointContainer = await applyPalette(pointContainer, palette, {\n            });\n            let currentValue = 0;\n            let numBitsShifted = 0;\n            const outPointArray = outPointContainer.getPointArray();\n            this.imageData = [];\n            outPointArray.forEach((point, arrayIndex) => {\n                const index = paletteColors.indexOf(point.uint32);\n                if(index == -1)\n                    throw new Error(\"Unknown color??\");\n                (this.imageData as Array<number>).push(index);\n            });\n        }\n\n        \n        let oldColorFormat;\n        if(this.outputFormat == OutputMode.BIN) {\n            oldColorFormat = this.cf;\n            this.cf = this.options.binaryFormat;\n        }\n        /*Convert all the pixels*/\n        for(var y = 0; y < this.h; y++) {\n            this.dith_reset();\n\n            for(var x = 0; x < this.w; ++x){\n                this.conv_px(x, y);\n            }\n        }\n\n        if(this.outputFormat == OutputMode.BIN) {\n            this.cf = oldColorFormat;\n        }\n\n        if(this.outputFormat == OutputMode.C)\n            return this.format_to_c_array();\n        else {\n            var $content = this.d_out;\n            var $cf = this.cf;\n            var $lv_cf = 4;               /*Color format in LittlevGL*/\n            switch($cf) {\n                case ImageMode.CF_TRUE_COLOR:\n                    $lv_cf = 4; break;\n                case ImageMode.CF_TRUE_COLOR_ALPHA:\n                    $lv_cf = 5; break;\n                case ImageMode.CF_TRUE_COLOR_CHROMA:\n                    $lv_cf = 6; break;\n                case ImageMode.CF_INDEXED_1_BIT:\n                    $lv_cf = 7; break;\n                case ImageMode.CF_INDEXED_2_BIT:\n                    $lv_cf = 8; break;\n                case ImageMode.CF_INDEXED_4_BIT:\n                    $lv_cf = 9; break;\n                case ImageMode.CF_INDEXED_8_BIT:\n                    $lv_cf = 10; break;\n                case ImageMode.CF_ALPHA_1_BIT:\n                    $lv_cf = 11; break;\n                case ImageMode.CF_ALPHA_2_BIT:\n                    $lv_cf = 12; break;\n                case ImageMode.CF_ALPHA_4_BIT:\n                    $lv_cf = 13; break;\n                case ImageMode.CF_ALPHA_8_BIT:\n                    $lv_cf = 14; break;\n            }\n\n            var $header_32bit = ($lv_cf | (this.w << 10) | (this.h << 21)) >>> 0;\n\n            var finalBinary = new Uint8Array(this.d_out.length + 4);\n            finalBinary[0] = ($header_32bit & 0xFF);\n            finalBinary[1] = ($header_32bit & 0xFF00) >> 8;\n            finalBinary[2] = ($header_32bit & 0xFF0000) >> 16;\n            finalBinary[3] = ($header_32bit & 0xFF000000) >> 24;\n\n            for(var i = 0; i < this.d_out.length; i++) {\n                finalBinary[i+4] = this.d_out[i];\n                \n            }\n            return finalBinary.buffer;\n        }\n    }\n\n    get_c_header(out_name: string): string {\n        var $c_header =\n        `#include \\\"lvgl/lvgl.h\\\"\n\n#ifndef LV_ATTRIBUTE_MEM_ALIGN\n#define LV_ATTRIBUTE_MEM_ALIGN\n#endif\n`;\n        var $attr_name = \"LV_ATTRIBUTE_IMG_\" + out_name.toUpperCase(); \n        $c_header += \n`#ifndef ${$attr_name}\n#define ${$attr_name}\n#endif\nconst LV_ATTRIBUTE_MEM_ALIGN ${$attr_name} uint8_t ` + out_name+ \"_map[] = {\";\n\n        return $c_header;\n    }\n\n    get_c_footer($cf, out_name) {\n        var $c_footer =\n        `\\n};\\n\nconst lv_img_dsc_t ${out_name} = {\n  .header.always_zero = 0,\n  .header.w = ${this.w},\n  .header.h = ${this.h},\\n`;\n\n    if($cf == ImageMode.CF_TRUE_COLOR) $c_footer += \"  .data_size = \" + this.w * this.h + \" * LV_COLOR_SIZE / 8,\\n  .header.cf = LV_IMG_CF_TRUE_COLOR,\";\n    else if($cf == ImageMode.CF_TRUE_COLOR_ALPHA) $c_footer += \"  .data_size = \" + this.w * this.h + \" * LV_IMG_PX_SIZE_ALPHA_BYTE,\\n  .header.cf = LV_IMG_CF_TRUE_COLOR_ALPHA,\";\n    else if($cf == ImageMode.CF_TRUE_COLOR_CHROMA) $c_footer += \"  .data_size = \" + this.w * this.h + \" * LV_COLOR_SIZE / 8,\\n  .header.cf = LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED,\";\n    else if($cf == ImageMode.CF_ALPHA_1_BIT) $c_footer += \"  .data_size = \" + count(this.d_out) + \",\\n  .header.cf = LV_IMG_CF_ALPHA_1BIT,\";\n    else if($cf == ImageMode.CF_ALPHA_2_BIT) $c_footer += \"  .data_size = \" + count(this.d_out) + \",\\n  .header.cf = LV_IMG_CF_ALPHA_2BIT,\";\n    else if($cf == ImageMode.CF_ALPHA_4_BIT) $c_footer += \"  .data_size = \" + count(this.d_out) + \",\\n  .header.cf = LV_IMG_CF_ALPHA_4BIT,\";\n    else if($cf == ImageMode.CF_ALPHA_8_BIT) $c_footer += \"  .data_size = \" + count(this.d_out) + \",\\n  .header.cf = LV_IMG_CF_ALPHA_8BIT,\";\n    else if($cf == ImageMode.CF_INDEXED_1_BIT) $c_footer += \"  .data_size = \" + count(this.d_out) + \",\\n  .header.cf = LV_IMG_CF_INDEXED_1BIT,\";\n    else if($cf == ImageMode.CF_INDEXED_2_BIT) $c_footer += \"  .data_size = \" + count(this.d_out) + \",\\n  .header.cf = LV_IMG_CF_INDEXED_2BIT,\";\n    else if($cf == ImageMode.CF_INDEXED_4_BIT) $c_footer += \"  .data_size = \" + count(this.d_out) + \",\\n  .header.cf = LV_IMG_CF_INDEXED_4BIT,\";\n    else if($cf == ImageMode.CF_INDEXED_8_BIT) $c_footer += \"  .data_size = \" + count(this.d_out) + \",\\n  .header.cf = LV_IMG_CF_INDEXED_8BIT,\";\n    else if($cf == ImageMode.CF_RAW) $c_footer += \"  .data_size = \" + this.raw_len + \",\\n  .header.cf = LV_IMG_CF_RAW,\";\n    else if($cf == ImageMode.CF_RAW_ALPHA) $c_footer += \"  .data_size = \" + this.raw_len + \",\\n  .header.cf = LV_IMG_CF_RAW_ALPHA,\";\n    else if($cf == ImageMode.CF_RAW_CHROMA) $c_footer += \"  .data_size = \" + this.raw_len + \",\\n  .header.cf = LV_IMG_CF_RAW_CHROMA_KEYED,\";\n\n    $c_footer += \"\\n  .data = \" + out_name + `_map,\n};\\n`;\n\n        return $c_footer;\n    }\n\n\n    private conv_px(x, y) {\n        function array_push<T>(arr: Array<T>, v: T) {\n            arr.push(v);\n        }\n        function isset(val: any): boolean {\n            return typeof val != 'undefined' && val != undefined;\n        }\n        const startIndex = ((y*this.w)+x)*4;\n        let a;\n        if(this.alpha){\n            a = this.imageData[startIndex+3];\n        } else {\n            a = 0xff;\n        }\n        const r = this.imageData[startIndex];\n        const g = this.imageData[startIndex+1];\n        const b = this.imageData[startIndex+2];\n\n        const c = this.imageData[((y*this.w)+x)];\n\n        if(this.cf == ImageMode.ICF_TRUE_COLOR_565 || this.cf == ImageMode.ICF_TRUE_COLOR_565_SWAP || this.cf == ImageMode.ICF_TRUE_COLOR_332 || this.cf == ImageMode.ICF_TRUE_COLOR_888)\n            this.dith_next(r, g, b, x);\n\n        if(this.cf == ImageMode.ICF_TRUE_COLOR_332) {\n            const c8 = (this.r_act) | (this.g_act >> 3) | (this.b_act >> 6);\t//RGB332\n            array_push(this.d_out, c8);\n            if(this.alpha) array_push(this.d_out, a);\n        } else if(this.cf == ImageMode.ICF_TRUE_COLOR_565) {\n            const c16 = ((this.r_act) << 8) | ((this.g_act) << 3) | ((this.b_act) >> 3);\t//RGR565\n            array_push(this.d_out, c16 & 0xFF);\n            array_push(this.d_out, (c16 >> 8) & 0xFF);\n            if(this.alpha) array_push(this.d_out, a);\n        } else if(this.cf == ImageMode.ICF_TRUE_COLOR_565_SWAP) {\n            const c16 = ((this.r_act) << 8) | ((this.g_act) << 3) | ((this.b_act) >> 3);\t//RGR565\n            array_push(this.d_out, (c16 >> 8) & 0xFF);\n            array_push(this.d_out, c16 & 0xFF);\n            if(this.alpha) array_push(this.d_out, a);\n        } else if(this.cf == ImageMode.ICF_TRUE_COLOR_888) {\n            array_push(this.d_out, this.b_act);\n            array_push(this.d_out, this.g_act);\n            array_push(this.d_out, this.r_act);\n            array_push(this.d_out, a);\n        } else if(this.cf == ImageMode.CF_ALPHA_1_BIT) {\n            let w = this.w >> 3;\n            if(this.w & 0x07) w++;\n            const p = w * y + (x >> 3);\n            if(!isset(this.d_out[p])) {\n                this.d_out[p] = 0;          /*Clear the bits first*/\n            }\n            if(a > 0x80) {\n                this.d_out[p] |= 1 << (7 - (x & 0x7));\n            }\n        }\n        else if(this.cf == ImageMode.CF_ALPHA_2_BIT) {\n            let w = this.w >> 2;\n            if(this.w & 0x03) w++;\n\n            const p = w * y + (x >> 2);\n            if(!isset(this.d_out[p])) this.d_out[p] = 0;          /*Clear the bits first*/\n            this.d_out[p] |= (a >> 6) << (6 - ((x & 0x3) * 2));\n        }\n        else if(this.cf == ImageMode.CF_ALPHA_4_BIT) {\n            let w = this.w >> 1;\n            if(this.w & 0x01) w++;\n\n            const p = w * y + (x >> 1);\n            if(!isset(this.d_out[p])) this.d_out[p] = 0;          /*Clear the bits first*/\n            this.d_out[p] |= (a >> 4) << (4 - ((x & 0x1) * 4));\n        }\n        else if(this.cf == ImageMode.CF_ALPHA_8_BIT) {\n            const p = this.w * y + x;\n            this.d_out[p] = a;\n        }\n        else if(this.cf == ImageMode.CF_INDEXED_1_BIT) {\n            let w = this.w >> 3;\n            if(this.w & 0x07) w++;\n\n            const p = w * y + (x >> 3) + 8;                       // +8 for the palette\n            if(!isset(this.d_out[p])) this.d_out[p] = 0;          //Clear the bits first\n            this.d_out[p] |= (c & 0x1) << (7 - (x & 0x7));\n        }\n        else if(this.cf == ImageMode.CF_INDEXED_2_BIT) {\n            let w = this.w >> 2;\n            if(this.w & 0x03) w++;\n\n            const p = w * y + (x >> 2) + 16;                              // +16 for the palette\n            if(!isset(this.d_out[p])) this.d_out[p] = 0;          // Clear the bits first\n            this.d_out[p] |= (c & 0x3) << (6 - ((x & 0x3) * 2));\n        }\n        else if(this.cf == ImageMode.CF_INDEXED_4_BIT) {\n            let w = this.w >> 1;\n            if(this.w & 0x01) w++;\n\n            const p = w * y + (x >> 1) + 64;                              // +64 for the palette\n            if(!isset(this.d_out[p])) this.d_out[p] = 0;          // Clear the bits first\n            this.d_out[p] |= (c & 0xF) << (4 - ((x & 0x1) * 4));\n        }\n        else if(this.cf == ImageMode.CF_INDEXED_8_BIT) {\n            const p = this.w * y + x + 1024;                              // +1024 for the palette\n            this.d_out[p] = c & 0xFF;\n        }\n\t}\n\n    dith_reset() {\n        if(this.dith){\n          this.r_nerr = 0;\n          this.g_nerr = 0;\n          this.b_nerr = 0;\n        }\n    }\n\n    dith_next(r, g, b, x) {\n\n     if(this.dith){\n        this.r_act = r + this.r_nerr + this.r_earr[x+1];\n        this.r_earr[x+1] = 0;\n\n        this.g_act = g + this.g_nerr + this.g_earr[x+1];\n        this.g_earr[x+1] = 0;\n\n        this.b_act = b + this.b_nerr + this.b_earr[x+1];\n        this.b_earr[x+1] = 0;\n\n        if(this.cf == ImageMode.ICF_TRUE_COLOR_332) {\n            this.r_act = this.classify_pixel(this.r_act, 3);\n            this.g_act = this.classify_pixel(this.g_act, 3);\n            this.b_act = this.classify_pixel(this.b_act, 2);\n\n            if(this.r_act > 0xE0) this.r_act = 0xE0;\n            if(this.g_act > 0xE0) this.g_act = 0xE0;\n            if(this.b_act > 0xC0) this.b_act = 0xC0;\n\n        } else if(this.cf == ImageMode.ICF_TRUE_COLOR_565 || this.cf == ImageMode.ICF_TRUE_COLOR_565_SWAP) {\n            this.r_act = this.classify_pixel(this.r_act, 5);\n            this.g_act = this.classify_pixel(this.g_act, 6);\n            this.b_act = this.classify_pixel(this.b_act, 5);\n\n            if(this.r_act > 0xF8) this.r_act = 0xF8;\n            if(this.g_act > 0xFC) this.g_act = 0xFC;\n            if(this.b_act > 0xF8) this.b_act = 0xF8;\n\n        } else if(this.cf == ImageMode.ICF_TRUE_COLOR_888) {\n            this.r_act = this.classify_pixel(this.r_act, 8);\n            this.g_act = this.classify_pixel(this.g_act, 8);\n            this.b_act = this.classify_pixel(this.b_act, 8);\n\n            if(this.r_act > 0xFF) this.r_act = 0xFF;\n            if(this.g_act > 0xFF) this.g_act = 0xFF;\n            if(this.b_act > 0xFF) this.b_act = 0xFF;\n        }\n\n        this.r_nerr = r - this.r_act;\n        this.g_nerr = g - this.g_act;\n        this.b_nerr = b - this.b_act;\n\n        this.r_nerr = round((7 * this.r_nerr) / 16);\n        this.g_nerr = round((7 * this.g_nerr) / 16);\n        this.b_nerr = round((7 * this.b_nerr) / 16);\n\n        this.r_earr[x] += round((3 * this.r_nerr) / 16);\n        this.g_earr[x] += round((3 * this.g_nerr) / 16);\n        this.b_earr[x] += round((3 * this.b_nerr) / 16);\n\n        this.r_earr[x+1] += round((5 * this.r_nerr) / 16);\n        this.g_earr[x+1] += round((5 * this.g_nerr) / 16);\n        this.b_earr[x+1] += round((5 * this.b_nerr) / 16);\n\n        this.r_earr[x+2] += round(this.r_nerr / 16);\n        this.g_earr[x+2] += round(this.g_nerr / 16);\n        this.b_earr[x+2] += round(this.b_nerr / 16);\n      }\n      else{\n        if(this.cf == ImageMode.ICF_TRUE_COLOR_332) {\n            this.r_act = this.classify_pixel(r, 3);\n            this.g_act = this.classify_pixel(g, 3);\n            this.b_act = this.classify_pixel(b, 2);\n\n            if(this.r_act > 0xE0) this.r_act = 0xE0;\n            if(this.g_act > 0xE0) this.g_act = 0xE0;\n            if(this.b_act > 0xC0) this.b_act = 0xC0;\n\n        } else if(this.cf == ImageMode.ICF_TRUE_COLOR_565 || this.cf == ImageMode.ICF_TRUE_COLOR_565_SWAP) {\n            this.r_act = this.classify_pixel(r, 5);\n            this.g_act = this.classify_pixel(g, 6);\n            this.b_act = this.classify_pixel(b, 5);\n\n            if(this.r_act > 0xF8) this.r_act = 0xF8;\n            if(this.g_act > 0xFC) this.g_act = 0xFC;\n            if(this.b_act > 0xF8) this.b_act = 0xF8;\n\n        } else if(this.cf == ImageMode.ICF_TRUE_COLOR_888) {\n            this.r_act = this.classify_pixel(r, 8);\n            this.g_act = this.classify_pixel(g, 8);\n            this.b_act = this.classify_pixel(b, 8);\n\n            if(this.r_act > 0xFF) this.r_act = 0xFF;\n            if(this.g_act > 0xFF) this.g_act = 0xFF;\n            if(this.b_act > 0xFF) this.b_act = 0xFF;\n        }\n      }\n    }\n\n    classify_pixel(value, bits){\n      const tmp = 1 << (8 - bits);\n      let val = round(value / tmp, 0, 'PHP_ROUND_HALF_DOWN') * tmp;\n      if(val < 0) val = 0;\n      return val;\n    }\n    format_to_c_array() {\n        \n        let c_array = \"\";\n        var i = 0;\n        let y_end = this.h;\n        let x_end = this.w;\n\n        if(this.cf == ImageMode.ICF_TRUE_COLOR_332) {\n            c_array += \"\\n#if LV_COLOR_DEPTH == 1 || LV_COLOR_DEPTH == 8\";\n            if(!this.alpha) c_array += \"\\n  /*Pixel format: Red: 3 bit, Green: 3 bit, Blue: 2 bit*/\";\n            else  c_array += \"\\n  /*Pixel format: Alpha 8 bit, Red: 3 bit, Green: 3 bit, Blue: 2 bit*/\";\n        } else if(this.cf == ImageMode.ICF_TRUE_COLOR_565) {\n            c_array += \"\\n#if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0\";\n            if(!this.alpha) c_array += \"\\n  /*Pixel format: Red: 5 bit, Green: 6 bit, Blue: 5 bit*/\";\n            else c_array += \"\\n  /*Pixel format: Alpha 8 bit, Red: 5 bit, Green: 6 bit, Blue: 5 bit*/\";\n        }  else if(this.cf == ImageMode.ICF_TRUE_COLOR_565_SWAP) {\n            c_array += \"\\n#if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP != 0\";\n            if(!this.alpha) c_array +=  \"\\n  /*Pixel format: Red: 5 bit, Green: 6 bit, Blue: 5 bit BUT the 2 bytes are swapped*/\";\n            else c_array += \"\\n  /*Pixel format: Alpha 8 bit, Red: 5 bit, Green: 6 bit, Blue: 5 bit  BUT the 2  color bytes are swapped*/\";\n        }  else if(this.cf == ImageMode.ICF_TRUE_COLOR_888) {\n            c_array += \"\\n#if LV_COLOR_DEPTH == 32\";\n            if(!this.alpha) c_array += \"\\n  /*Pixel format: Fix 0xFF: 8 bit, Red: 8 bit, Green: 8 bit, Blue: 8 bit*/\";\n            else \"\\n  /*Pixel format: Alpha 8 bit, Red: 8 bit, Green: 8 bit, Blue: 8 bit*/\";\n        } else if(this.cf == ImageMode.CF_INDEXED_1_BIT) {\n            c_array += \"\\n\";\n            for(var p = 0; p < 2; p ++) {\n                c_array += \"  0x\" + str_pad(dechex(this.d_out[p * 4 + 0]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                c_array += \"0x\" + str_pad(dechex(this.d_out[p * 4 + 1]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                c_array += \"0x\" + str_pad(dechex(this.d_out[p * 4 + 2]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                c_array += \"0x\" + str_pad(dechex(this.d_out[p * 4 + 3]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                c_array += `\\t/*Color of index ${p}*/\\n`;\n            }\n    \n            i = p * 4;\n        }\n        else if(this.cf == ImageMode.CF_INDEXED_2_BIT) {\n            c_array += \"\\n\";\n            for(p = 0; p < 4; p ++) {\n                c_array += \"  0x\" + str_pad(dechex(this.d_out[p * 4 + 0]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                c_array += \"0x\" + str_pad(dechex(this.d_out[p * 4 + 1]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                c_array += \"0x\" + str_pad(dechex(this.d_out[p * 4 + 2]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                c_array += \"0x\" + str_pad(dechex(this.d_out[p * 4 + 3]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                c_array += `\\t/*Color of index ${p}*/\\n`;\n            }\n    \n            i = p * 4;\n        }\n        else if(this.cf == ImageMode.CF_INDEXED_4_BIT) {\n            c_array += \"\\n\";\n            for(p = 0; p < 16; p ++) {\n                c_array += \"  0x\" + str_pad(dechex(this.d_out[p * 4 + 0]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                c_array += \"0x\" + str_pad(dechex(this.d_out[p * 4 + 1]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                c_array += \"0x\" + str_pad(dechex(this.d_out[p * 4 + 2]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                c_array += \"0x\" + str_pad(dechex(this.d_out[p * 4 + 3]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                c_array += `\\t/*Color of index ${p}*/\\n`;\n            }\n    \n            i = p * 4;\n        }\n        else if(this.cf == ImageMode.CF_INDEXED_8_BIT) {\n            c_array += \"\\n\";\n            for(p = 0; p < 256; p ++) {\n                c_array += \"  0x\" + str_pad(dechex(this.d_out[p * 4 + 0]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                c_array += \"0x\" + str_pad(dechex(this.d_out[p * 4 + 1]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                c_array += \"0x\" + str_pad(dechex(this.d_out[p * 4 + 2]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                c_array += \"0x\" + str_pad(dechex(this.d_out[p * 4 + 3]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                c_array += `\\t/*Color of index ${p}*/\\n`;\n            }\n    \n            i = p * 4;\n        }\n        else if(this.cf == ImageMode.CF_RAW_ALPHA || this.cf == ImageMode.CF_RAW_CHROMA) {\n            y_end = 1;\n            x_end = count(this.d_out);\n            i = 1;\n        }\n    \n        this.d_out.push(0);\n        for(var y = 0; y < y_end; y++) {\n            c_array += \"\\n  \";\n            for(var x = 0; x < x_end; x++) {\n                if(i >= this.d_out.length) {\n                    console.error(\"index out of range (\" + i + \")\");\n                }\n                if(this.cf == ImageMode.ICF_TRUE_COLOR_332) {\n                    c_array += \"0x\" + str_pad(dechex(this.d_out[i]), 2, '0', 'STR_PAD_LEFT') + \", \";  i++;\n                    if(this.alpha) {\n                        c_array += \"0x\" + str_pad(dechex(this.d_out[i]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                        i++;\n                    }\n                }\n                else if(this.cf == ImageMode.ICF_TRUE_COLOR_565 || this.cf == ImageMode.ICF_TRUE_COLOR_565_SWAP) {\n                    if(this.swapEndian) {\n                        c_array += \"0x\" + str_pad(dechex(this.d_out[i+1]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                        c_array += \"0x\" + str_pad(dechex(this.d_out[i]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                    } else {\n                        c_array += \"0x\" + str_pad(dechex(this.d_out[i]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                        c_array += \"0x\" + str_pad(dechex(this.d_out[i+1]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                    }\n                    i += 2;\n                    if(this.alpha) {\n                        c_array += \"0x\" + str_pad(dechex(this.d_out[i]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                        i++;\n                    }\n                }\n                else if(this.cf == ImageMode.ICF_TRUE_COLOR_888) {\n                    if(this.swapEndian) {\n                        c_array += \"0x\" + str_pad(dechex(this.d_out[i+2]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                        c_array += \"0x\" + str_pad(dechex(this.d_out[i+1]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                        c_array += \"0x\" + str_pad(dechex(this.d_out[i]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                    } else {\n                        c_array += \"0x\" + str_pad(dechex(this.d_out[i]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                        c_array += \"0x\" + str_pad(dechex(this.d_out[i+1]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                        c_array += \"0x\" + str_pad(dechex(this.d_out[i+2]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                    }\n                    c_array += \"0x\" + str_pad(dechex(this.d_out[i+3]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                    \n                    i += 4;\n                }\n                else if(this.cf == ImageMode.CF_ALPHA_1_BIT || this.cf == ImageMode.CF_INDEXED_1_BIT) {\n                    if((x & 0x7) == 0) {\n                        c_array += \"0x\" + str_pad(dechex(this.d_out[i]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                        i++;\n                    }\n                }\n                else if(this.cf == ImageMode.CF_ALPHA_2_BIT || this.cf == ImageMode.CF_INDEXED_2_BIT) {\n                    if((x & 0x3) == 0) {\n                        c_array += \"0x\" + str_pad(dechex(this.d_out[i]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                        i++;\n                    }\n                }\n                else if(this.cf == ImageMode.CF_ALPHA_4_BIT || this.cf == ImageMode.CF_INDEXED_4_BIT) {\n                    if((x & 0x1) == 0) {\n                        c_array += \"0x\" + str_pad(dechex(this.d_out[i]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                        i++;\n                    }\n                }\n                else if(this.cf == ImageMode.CF_ALPHA_8_BIT || this.cf == ImageMode.CF_INDEXED_8_BIT) {\n                    c_array += \"0x\" + str_pad(dechex(this.d_out[i]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                    i++;\n                }\n                else if(this.cf == ImageMode.CF_RAW_ALPHA || this.cf == ImageMode.CF_RAW_CHROMA) {\n                    c_array += \"0x\" + str_pad(dechex(this.d_out[i]), 2, '0', 'STR_PAD_LEFT') + \", \";\n                    if(i != 0 && ((i % 16) == 0)) c_array += \"\\n  \";\n                    i++;\n                }\n            }\n        }\n    \n        if(this.cf == ImageMode.ICF_TRUE_COLOR_332 || this.cf == ImageMode.ICF_TRUE_COLOR_565 || this.cf == ImageMode.ICF_TRUE_COLOR_565_SWAP || this.cf == ImageMode.ICF_TRUE_COLOR_888) {\n            c_array += \"\\n#endif\";\n        }\n        return c_array;\n    \n    }\n}\n\n\nasync function convertImageBlob(img: Image|Uint8Array, options: Partial<ConverterOptions>): Promise<string|ArrayBuffer> {\n    function isImage(img, options): img is Image {\n        return options.cf != ImageMode.CF_RAW && options.cf != ImageMode.CF_RAW_ALPHA && options.cf != ImageMode.CF_RAW_CHROMA;\n    }\n    let c_res_array: string;\n    let bin_res_blob: ArrayBuffer;\n    const out_name = options.outName;\n    const outputFormat: OutputMode = options.outputFormat;\n    let c_creator: Converter;\n    if(isImage(img, options)) {\n        const canvas = createCanvas(img.width, img.height);\n        const ctx = canvas.getContext('2d')\n        ctx.drawImage(img, 0, 0);\n        const imageData = ctx.getImageData(0, 0, img.width, img.height).data;\n    \n        const alpha = (options.cf == ImageMode.CF_TRUE_COLOR_ALPHA || options.cf == ImageMode.CF_ALPHA_1_BIT || options.cf == ImageMode.CF_ALPHA_2_BIT || options.cf == ImageMode.CF_ALPHA_4_BIT || options.cf == ImageMode.CF_ALPHA_8_BIT);\n        c_creator = new Converter(img.width, img.height, imageData, alpha, options);\n        \n        if(options.outputFormat == OutputMode.C) {\n            if(options.cf == ImageMode.CF_TRUE_COLOR || options.cf == ImageMode.CF_TRUE_COLOR_ALPHA) {\n                const arrayList = await Promise.all([\n                    ImageMode.ICF_TRUE_COLOR_332,\n                    ImageMode.ICF_TRUE_COLOR_565,\n                    ImageMode.ICF_TRUE_COLOR_565_SWAP,\n                    ImageMode.ICF_TRUE_COLOR_888\n                ].map(cf => new Converter(img.width, img.height, imageData, alpha, Object.assign({}, options, { cf })).convert())) as string[];\n                c_res_array = arrayList.join(\"\");\n            } else\n                c_res_array = await c_creator.convert() as string;\n        } else {\n            const binaryConv = new Converter(img.width, img.height, imageData, alpha, options);\n            bin_res_blob = await binaryConv.convert() as ArrayBuffer;\n        }\n        \n        console.log(`${img.width}x${img.height}`);\n    } else {\n        c_creator = new Converter(0, 0, img, options.cf == ImageMode.CF_RAW_ALPHA, options);\n        if(options.outputFormat == OutputMode.C)\n            c_res_array = await c_creator.convert() as string;\n        else\n            bin_res_blob = await c_creator.convert() as ArrayBuffer;\n    }\n    \n    \n    if(outputFormat == OutputMode.BIN)\n        return bin_res_blob;\n    else\n        return c_creator.get_c_header(out_name) + c_res_array + c_creator.get_c_footer(options.cf, out_name);\n}\n\nasync function convert(imagePath, options) {\n    let img: Image|Uint8Array;\n    if(options.cf != ImageMode.CF_RAW && options.cf != ImageMode.CF_RAW_ALPHA && options.cf != ImageMode.CF_RAW_CHROMA)\n        img = await loadImage(imagePath);\n    else {\n        eval(\"var fs = require('fs');\");\n        /** @ts-ignore */\n        img = fs.readFileSync(imagePath);\n    }\n    return convertImageBlob(img, Object.assign({}, options, { outName: options.outName || path.parse(imagePath).name }));\n    \n}\n\nexport default convert;\nexport { convertImageBlob };","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","import bsCustomFileInput from 'bs-custom-file-input';\nimport { convertImageBlob } from '../lib/convert';\nimport { ImageMode, OutputMode, BINARY_FORMAT_PREFIX } from '../lib/enums';\nimport { saveAs } from 'file-saver';\nimport { resolve } from 'path';\nimport { rejects } from 'assert';\n\nfunction updateNameTextboxes() {\n    const input = $(\"#customFile\")[0];\n    const $nameContainer = $(\".name-container\");\n    const numExistingFields = $nameContainer.children().length;\n    const totalLength = Math.max(numExistingFields, input.files.length);\n    for(var i = 0; i < totalLength; i++) {\n        if(i >= numExistingFields)\n            $nameContainer.append(`<input type=\"text\" name=\"name${i}\" id=\"name${i}\" class=\"form-control\" placeholder=\"Variable name of image ${i+1}\" style=\"height:unset\">`);\n        else if(i >= input.files.length) {\n            $nameContainer.get(0).removeChild($nameContainer.children().get(i));\n        }\n    }\n    $(\".name-row\").css(\"display\", input.files.length > 0 ? \"\" : \"none\");\n}\n\n$(document).ready(function () {\n    bsCustomFileInput.init();\n    updateNameTextboxes();\n});\n\n$(\"#customFile\").change(updateNameTextboxes);\n\n$(\"#format\").on(\"change\", function() {\n    const needsDisable = $(\"#format\").val() != \"c_array\";\n    if(needsDisable)\n        $(\"endian-checkbox\").prop(\"checked\", false);\n    $(\"#endian-checkbox\").prop(\"disabled\", needsDisable);\n})\n\n$(\"#convert-button\").on(\"click\", async() => {\n    $(\"#convert-button\").attr(\"disabled\", true);\n    /** @type {HTMLInputElement} */\n    const input = $(\"#customFile\")[0];\n    for(var i = 0; i < input.files.length; i++) {\n        const file = input.files[i];\n        if(file) {\n            const reader = new FileReader();\n            await new Promise((resolve, reject) => {\n                const outputType = $(\"#format\").val();\n                let outputMode, binaryFormat;\n                if(outputType == \"c_array\")\n                    outputMode = OutputMode.C;\n                else {\n                    outputMode = OutputMode.BIN;\n                    const binFormatRequest = BINARY_FORMAT_PREFIX + outputType.substring(4).toUpperCase();\n                    binaryFormat = ImageMode[binFormatRequest];\n                    if(typeof binaryFormat == 'undefined')\n                        throw new Error(\"Binary format not found: \" + binFormatRequest);\n                }\n                async function doConvert(blob) {\n                    const imageName = $(\"#name\" + i).val();\n                    const swapEndian = outputMode == OutputMode.C && document.querySelector(\"#endian-checkbox\").checked;\n                    const imageString = await convertImageBlob(blob, { cf: ImageMode[$(\"#cf\").val()], imageName: imageName, outName: imageName, swapEndian: swapEndian, outputFormat: outputMode, binaryFormat });\n                    console.log(imageString);\n                    var blob = new Blob([ imageString ], {\n                        type: outputMode == OutputMode.BIN ? \"binary/octet-stream\" : \"text/x-c;charset=utf-8\"\n                    });\n                    saveAs(blob, imageName + \".\" + (outputMode == OutputMode.BIN ? \"bin\" : \"c\"));\n                    resolve();\n                }\n                if($(\"#cf\").val().startsWith(\"CF_RAW\")) {\n                    reader.readAsArrayBuffer(file);\n                    reader.onload = function(e) {\n                        console.log(\"loaded\");\n                        /** @type {ArrayBuffer} */\n                        const buf = e.target.result;\n                        doConvert(new Uint8Array(buf));\n                    }\n                } else {\n                    reader.onload = function(e) {\n                        var image = new Image();\n                        image.onload = function() {\n                            console.log(\"loaded\");\n                            doConvert(image);\n                        };\n    \n                        image.onerror = function(e) {\n                            reject(e);\n                        };\n                        image.src = e.target.result;\n                    }\n                    reader.readAsDataURL(file);\n                }\n            });\n        }\n    }\n    $(\"#convert-button\").removeAttr(\"disabled\");\n});\n\n/* FIXME: temporary hack to fix setImmediate issue */\nwindow.setImmediate = (fn) => setTimeout(fn, 0);"]}